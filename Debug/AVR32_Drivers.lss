
AVR32_Drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000123e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000be  00800060  0000123e  000012d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  0080011e  0080011e  00001390  2**0
                  ALLOC
  3 .stab         00000ce4  00000000  00000000  00001390  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000b38  00000000  00000000  00002074  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e3       	ldi	r30, 0x3E	; 62
      68:	f2 e1       	ldi	r31, 0x12	; 18
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 31       	cpi	r26, 0x1E	; 30
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	ae e1       	ldi	r26, 0x1E	; 30
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a4 32       	cpi	r26, 0x24	; 36
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 4e 06 	call	0xc9c	; 0xc9c <main>
      8a:	0c 94 1d 09 	jmp	0x123a	; 0x123a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <GPIO_setPortValue>:
#include "GPIO.h"

void GPIO_setPortValue(u8 portId, u8 value)
{
      92:	df 93       	push	r29
      94:	cf 93       	push	r28
      96:	00 d0       	rcall	.+0      	; 0x98 <GPIO_setPortValue+0x6>
      98:	00 d0       	rcall	.+0      	; 0x9a <GPIO_setPortValue+0x8>
      9a:	cd b7       	in	r28, 0x3d	; 61
      9c:	de b7       	in	r29, 0x3e	; 62
      9e:	89 83       	std	Y+1, r24	; 0x01
      a0:	6a 83       	std	Y+2, r22	; 0x02
    if ((PORTA != portId) && (PORTB != portId) && (PORTC != portId) && (PORTD != portId))
      a2:	89 81       	ldd	r24, Y+1	; 0x01
      a4:	88 23       	and	r24, r24
      a6:	b1 f0       	breq	.+44     	; 0xd4 <GPIO_setPortValue+0x42>
      a8:	89 81       	ldd	r24, Y+1	; 0x01
      aa:	81 30       	cpi	r24, 0x01	; 1
      ac:	99 f0       	breq	.+38     	; 0xd4 <GPIO_setPortValue+0x42>
      ae:	89 81       	ldd	r24, Y+1	; 0x01
      b0:	82 30       	cpi	r24, 0x02	; 2
      b2:	81 f0       	breq	.+32     	; 0xd4 <GPIO_setPortValue+0x42>
      b4:	89 81       	ldd	r24, Y+1	; 0x01
      b6:	83 30       	cpi	r24, 0x03	; 3
      b8:	69 f0       	breq	.+26     	; 0xd4 <GPIO_setPortValue+0x42>
    {
        printf("WRONG ID!");
      ba:	00 d0       	rcall	.+0      	; 0xbc <GPIO_setPortValue+0x2a>
      bc:	ed b7       	in	r30, 0x3d	; 61
      be:	fe b7       	in	r31, 0x3e	; 62
      c0:	31 96       	adiw	r30, 0x01	; 1
      c2:	80 e6       	ldi	r24, 0x60	; 96
      c4:	90 e0       	ldi	r25, 0x00	; 0
      c6:	91 83       	std	Z+1, r25	; 0x01
      c8:	80 83       	st	Z, r24
      ca:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
      ce:	0f 90       	pop	r0
      d0:	0f 90       	pop	r0
      d2:	dd c0       	rjmp	.+442    	; 0x28e <GPIO_setPortValue+0x1fc>
    }
    else
    {
        switch (portId)
      d4:	89 81       	ldd	r24, Y+1	; 0x01
      d6:	28 2f       	mov	r18, r24
      d8:	30 e0       	ldi	r19, 0x00	; 0
      da:	3c 83       	std	Y+4, r19	; 0x04
      dc:	2b 83       	std	Y+3, r18	; 0x03
      de:	8b 81       	ldd	r24, Y+3	; 0x03
      e0:	9c 81       	ldd	r25, Y+4	; 0x04
      e2:	81 30       	cpi	r24, 0x01	; 1
      e4:	91 05       	cpc	r25, r1
      e6:	09 f4       	brne	.+2      	; 0xea <GPIO_setPortValue+0x58>
      e8:	46 c0       	rjmp	.+140    	; 0x176 <GPIO_setPortValue+0xe4>
      ea:	2b 81       	ldd	r18, Y+3	; 0x03
      ec:	3c 81       	ldd	r19, Y+4	; 0x04
      ee:	22 30       	cpi	r18, 0x02	; 2
      f0:	31 05       	cpc	r19, r1
      f2:	2c f4       	brge	.+10     	; 0xfe <GPIO_setPortValue+0x6c>
      f4:	8b 81       	ldd	r24, Y+3	; 0x03
      f6:	9c 81       	ldd	r25, Y+4	; 0x04
      f8:	00 97       	sbiw	r24, 0x00	; 0
      fa:	71 f0       	breq	.+28     	; 0x118 <GPIO_setPortValue+0x86>
      fc:	c8 c0       	rjmp	.+400    	; 0x28e <GPIO_setPortValue+0x1fc>
      fe:	2b 81       	ldd	r18, Y+3	; 0x03
     100:	3c 81       	ldd	r19, Y+4	; 0x04
     102:	22 30       	cpi	r18, 0x02	; 2
     104:	31 05       	cpc	r19, r1
     106:	09 f4       	brne	.+2      	; 0x10a <GPIO_setPortValue+0x78>
     108:	65 c0       	rjmp	.+202    	; 0x1d4 <GPIO_setPortValue+0x142>
     10a:	8b 81       	ldd	r24, Y+3	; 0x03
     10c:	9c 81       	ldd	r25, Y+4	; 0x04
     10e:	83 30       	cpi	r24, 0x03	; 3
     110:	91 05       	cpc	r25, r1
     112:	09 f4       	brne	.+2      	; 0x116 <GPIO_setPortValue+0x84>
     114:	8e c0       	rjmp	.+284    	; 0x232 <GPIO_setPortValue+0x1a0>
     116:	bb c0       	rjmp	.+374    	; 0x28e <GPIO_setPortValue+0x1fc>
        {
        case PORTA:
            PORTA_Ptr = value;
     118:	eb e3       	ldi	r30, 0x3B	; 59
     11a:	f0 e0       	ldi	r31, 0x00	; 0
     11c:	8a 81       	ldd	r24, Y+2	; 0x02
     11e:	80 83       	st	Z, r24
            printf("0x%x in PortAs", value);
     120:	8a 81       	ldd	r24, Y+2	; 0x02
     122:	28 2f       	mov	r18, r24
     124:	30 e0       	ldi	r19, 0x00	; 0
     126:	00 d0       	rcall	.+0      	; 0x128 <GPIO_setPortValue+0x96>
     128:	00 d0       	rcall	.+0      	; 0x12a <GPIO_setPortValue+0x98>
     12a:	ed b7       	in	r30, 0x3d	; 61
     12c:	fe b7       	in	r31, 0x3e	; 62
     12e:	31 96       	adiw	r30, 0x01	; 1
     130:	8a e6       	ldi	r24, 0x6A	; 106
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	91 83       	std	Z+1, r25	; 0x01
     136:	80 83       	st	Z, r24
     138:	33 83       	std	Z+3, r19	; 0x03
     13a:	22 83       	std	Z+2, r18	; 0x02
     13c:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     140:	0f 90       	pop	r0
     142:	0f 90       	pop	r0
     144:	0f 90       	pop	r0
     146:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", PORTA_Ptr);
     148:	eb e3       	ldi	r30, 0x3B	; 59
     14a:	f0 e0       	ldi	r31, 0x00	; 0
     14c:	80 81       	ld	r24, Z
     14e:	28 2f       	mov	r18, r24
     150:	30 e0       	ldi	r19, 0x00	; 0
     152:	00 d0       	rcall	.+0      	; 0x154 <GPIO_setPortValue+0xc2>
     154:	00 d0       	rcall	.+0      	; 0x156 <GPIO_setPortValue+0xc4>
     156:	ed b7       	in	r30, 0x3d	; 61
     158:	fe b7       	in	r31, 0x3e	; 62
     15a:	31 96       	adiw	r30, 0x01	; 1
     15c:	89 e7       	ldi	r24, 0x79	; 121
     15e:	90 e0       	ldi	r25, 0x00	; 0
     160:	91 83       	std	Z+1, r25	; 0x01
     162:	80 83       	st	Z, r24
     164:	33 83       	std	Z+3, r19	; 0x03
     166:	22 83       	std	Z+2, r18	; 0x02
     168:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     16c:	0f 90       	pop	r0
     16e:	0f 90       	pop	r0
     170:	0f 90       	pop	r0
     172:	0f 90       	pop	r0
     174:	8c c0       	rjmp	.+280    	; 0x28e <GPIO_setPortValue+0x1fc>
            break;
        case PORTB:
            PORTB_Ptr = value;
     176:	e8 e3       	ldi	r30, 0x38	; 56
     178:	f0 e0       	ldi	r31, 0x00	; 0
     17a:	8a 81       	ldd	r24, Y+2	; 0x02
     17c:	80 83       	st	Z, r24
            printf("0x%x in PortBs", value);
     17e:	8a 81       	ldd	r24, Y+2	; 0x02
     180:	28 2f       	mov	r18, r24
     182:	30 e0       	ldi	r19, 0x00	; 0
     184:	00 d0       	rcall	.+0      	; 0x186 <GPIO_setPortValue+0xf4>
     186:	00 d0       	rcall	.+0      	; 0x188 <GPIO_setPortValue+0xf6>
     188:	ed b7       	in	r30, 0x3d	; 61
     18a:	fe b7       	in	r31, 0x3e	; 62
     18c:	31 96       	adiw	r30, 0x01	; 1
     18e:	8c e9       	ldi	r24, 0x9C	; 156
     190:	90 e0       	ldi	r25, 0x00	; 0
     192:	91 83       	std	Z+1, r25	; 0x01
     194:	80 83       	st	Z, r24
     196:	33 83       	std	Z+3, r19	; 0x03
     198:	22 83       	std	Z+2, r18	; 0x02
     19a:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     19e:	0f 90       	pop	r0
     1a0:	0f 90       	pop	r0
     1a2:	0f 90       	pop	r0
     1a4:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", PORTA_Ptr);
     1a6:	eb e3       	ldi	r30, 0x3B	; 59
     1a8:	f0 e0       	ldi	r31, 0x00	; 0
     1aa:	80 81       	ld	r24, Z
     1ac:	28 2f       	mov	r18, r24
     1ae:	30 e0       	ldi	r19, 0x00	; 0
     1b0:	00 d0       	rcall	.+0      	; 0x1b2 <GPIO_setPortValue+0x120>
     1b2:	00 d0       	rcall	.+0      	; 0x1b4 <GPIO_setPortValue+0x122>
     1b4:	ed b7       	in	r30, 0x3d	; 61
     1b6:	fe b7       	in	r31, 0x3e	; 62
     1b8:	31 96       	adiw	r30, 0x01	; 1
     1ba:	89 e7       	ldi	r24, 0x79	; 121
     1bc:	90 e0       	ldi	r25, 0x00	; 0
     1be:	91 83       	std	Z+1, r25	; 0x01
     1c0:	80 83       	st	Z, r24
     1c2:	33 83       	std	Z+3, r19	; 0x03
     1c4:	22 83       	std	Z+2, r18	; 0x02
     1c6:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     1ca:	0f 90       	pop	r0
     1cc:	0f 90       	pop	r0
     1ce:	0f 90       	pop	r0
     1d0:	0f 90       	pop	r0
     1d2:	5d c0       	rjmp	.+186    	; 0x28e <GPIO_setPortValue+0x1fc>
            break;
        case PORTC:
            PORTC_Ptr = value;
     1d4:	e5 e3       	ldi	r30, 0x35	; 53
     1d6:	f0 e0       	ldi	r31, 0x00	; 0
     1d8:	8a 81       	ldd	r24, Y+2	; 0x02
     1da:	80 83       	st	Z, r24
            printf("0x%x in PortCs", value);
     1dc:	8a 81       	ldd	r24, Y+2	; 0x02
     1de:	28 2f       	mov	r18, r24
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	00 d0       	rcall	.+0      	; 0x1e4 <GPIO_setPortValue+0x152>
     1e4:	00 d0       	rcall	.+0      	; 0x1e6 <GPIO_setPortValue+0x154>
     1e6:	ed b7       	in	r30, 0x3d	; 61
     1e8:	fe b7       	in	r31, 0x3e	; 62
     1ea:	31 96       	adiw	r30, 0x01	; 1
     1ec:	8b ea       	ldi	r24, 0xAB	; 171
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	91 83       	std	Z+1, r25	; 0x01
     1f2:	80 83       	st	Z, r24
     1f4:	33 83       	std	Z+3, r19	; 0x03
     1f6:	22 83       	std	Z+2, r18	; 0x02
     1f8:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     1fc:	0f 90       	pop	r0
     1fe:	0f 90       	pop	r0
     200:	0f 90       	pop	r0
     202:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", PORTC_Ptr);
     204:	e5 e3       	ldi	r30, 0x35	; 53
     206:	f0 e0       	ldi	r31, 0x00	; 0
     208:	80 81       	ld	r24, Z
     20a:	28 2f       	mov	r18, r24
     20c:	30 e0       	ldi	r19, 0x00	; 0
     20e:	00 d0       	rcall	.+0      	; 0x210 <GPIO_setPortValue+0x17e>
     210:	00 d0       	rcall	.+0      	; 0x212 <GPIO_setPortValue+0x180>
     212:	ed b7       	in	r30, 0x3d	; 61
     214:	fe b7       	in	r31, 0x3e	; 62
     216:	31 96       	adiw	r30, 0x01	; 1
     218:	89 e7       	ldi	r24, 0x79	; 121
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	91 83       	std	Z+1, r25	; 0x01
     21e:	80 83       	st	Z, r24
     220:	33 83       	std	Z+3, r19	; 0x03
     222:	22 83       	std	Z+2, r18	; 0x02
     224:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     228:	0f 90       	pop	r0
     22a:	0f 90       	pop	r0
     22c:	0f 90       	pop	r0
     22e:	0f 90       	pop	r0
     230:	2e c0       	rjmp	.+92     	; 0x28e <GPIO_setPortValue+0x1fc>
            break;
        case PORTD:
            PORTD_Ptr = value;
     232:	e2 e3       	ldi	r30, 0x32	; 50
     234:	f0 e0       	ldi	r31, 0x00	; 0
     236:	8a 81       	ldd	r24, Y+2	; 0x02
     238:	80 83       	st	Z, r24
            printf("0x%x in PortD", value);
     23a:	8a 81       	ldd	r24, Y+2	; 0x02
     23c:	28 2f       	mov	r18, r24
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	00 d0       	rcall	.+0      	; 0x242 <GPIO_setPortValue+0x1b0>
     242:	00 d0       	rcall	.+0      	; 0x244 <GPIO_setPortValue+0x1b2>
     244:	ed b7       	in	r30, 0x3d	; 61
     246:	fe b7       	in	r31, 0x3e	; 62
     248:	31 96       	adiw	r30, 0x01	; 1
     24a:	8a eb       	ldi	r24, 0xBA	; 186
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	91 83       	std	Z+1, r25	; 0x01
     250:	80 83       	st	Z, r24
     252:	33 83       	std	Z+3, r19	; 0x03
     254:	22 83       	std	Z+2, r18	; 0x02
     256:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     25a:	0f 90       	pop	r0
     25c:	0f 90       	pop	r0
     25e:	0f 90       	pop	r0
     260:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", PORTA_Ptr);
     262:	eb e3       	ldi	r30, 0x3B	; 59
     264:	f0 e0       	ldi	r31, 0x00	; 0
     266:	80 81       	ld	r24, Z
     268:	28 2f       	mov	r18, r24
     26a:	30 e0       	ldi	r19, 0x00	; 0
     26c:	00 d0       	rcall	.+0      	; 0x26e <GPIO_setPortValue+0x1dc>
     26e:	00 d0       	rcall	.+0      	; 0x270 <GPIO_setPortValue+0x1de>
     270:	ed b7       	in	r30, 0x3d	; 61
     272:	fe b7       	in	r31, 0x3e	; 62
     274:	31 96       	adiw	r30, 0x01	; 1
     276:	89 e7       	ldi	r24, 0x79	; 121
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	91 83       	std	Z+1, r25	; 0x01
     27c:	80 83       	st	Z, r24
     27e:	33 83       	std	Z+3, r19	; 0x03
     280:	22 83       	std	Z+2, r18	; 0x02
     282:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     286:	0f 90       	pop	r0
     288:	0f 90       	pop	r0
     28a:	0f 90       	pop	r0
     28c:	0f 90       	pop	r0

        default:
            break;
        }
    }
}
     28e:	0f 90       	pop	r0
     290:	0f 90       	pop	r0
     292:	0f 90       	pop	r0
     294:	0f 90       	pop	r0
     296:	cf 91       	pop	r28
     298:	df 91       	pop	r29
     29a:	08 95       	ret

0000029c <GPIO_setPinValue>:

void GPIO_setPinValue(u8 portId, u8 PinId, u8 value)
{
     29c:	df 93       	push	r29
     29e:	cf 93       	push	r28
     2a0:	cd b7       	in	r28, 0x3d	; 61
     2a2:	de b7       	in	r29, 0x3e	; 62
     2a4:	27 97       	sbiw	r28, 0x07	; 7
     2a6:	0f b6       	in	r0, 0x3f	; 63
     2a8:	f8 94       	cli
     2aa:	de bf       	out	0x3e, r29	; 62
     2ac:	0f be       	out	0x3f, r0	; 63
     2ae:	cd bf       	out	0x3d, r28	; 61
     2b0:	89 83       	std	Y+1, r24	; 0x01
     2b2:	6a 83       	std	Y+2, r22	; 0x02
     2b4:	4b 83       	std	Y+3, r20	; 0x03
    if ((PORTA != portId) && (PORTB != portId) && (PORTC != portId) && (PORTD != portId))
     2b6:	89 81       	ldd	r24, Y+1	; 0x01
     2b8:	88 23       	and	r24, r24
     2ba:	b1 f0       	breq	.+44     	; 0x2e8 <GPIO_setPinValue+0x4c>
     2bc:	89 81       	ldd	r24, Y+1	; 0x01
     2be:	81 30       	cpi	r24, 0x01	; 1
     2c0:	99 f0       	breq	.+38     	; 0x2e8 <GPIO_setPinValue+0x4c>
     2c2:	89 81       	ldd	r24, Y+1	; 0x01
     2c4:	82 30       	cpi	r24, 0x02	; 2
     2c6:	81 f0       	breq	.+32     	; 0x2e8 <GPIO_setPinValue+0x4c>
     2c8:	89 81       	ldd	r24, Y+1	; 0x01
     2ca:	83 30       	cpi	r24, 0x03	; 3
     2cc:	69 f0       	breq	.+26     	; 0x2e8 <GPIO_setPinValue+0x4c>
    {
        printf("WRONG ID!");
     2ce:	00 d0       	rcall	.+0      	; 0x2d0 <GPIO_setPinValue+0x34>
     2d0:	ed b7       	in	r30, 0x3d	; 61
     2d2:	fe b7       	in	r31, 0x3e	; 62
     2d4:	31 96       	adiw	r30, 0x01	; 1
     2d6:	80 e6       	ldi	r24, 0x60	; 96
     2d8:	90 e0       	ldi	r25, 0x00	; 0
     2da:	91 83       	std	Z+1, r25	; 0x01
     2dc:	80 83       	st	Z, r24
     2de:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     2e2:	0f 90       	pop	r0
     2e4:	0f 90       	pop	r0
     2e6:	52 c1       	rjmp	.+676    	; 0x58c <GPIO_setPinValue+0x2f0>
    }
    else
    {
        if (value == high_value)
     2e8:	8b 81       	ldd	r24, Y+3	; 0x03
     2ea:	81 30       	cpi	r24, 0x01	; 1
     2ec:	09 f0       	breq	.+2      	; 0x2f0 <GPIO_setPinValue+0x54>
     2ee:	92 c0       	rjmp	.+292    	; 0x414 <GPIO_setPinValue+0x178>
        {
            switch (portId)
     2f0:	89 81       	ldd	r24, Y+1	; 0x01
     2f2:	28 2f       	mov	r18, r24
     2f4:	30 e0       	ldi	r19, 0x00	; 0
     2f6:	3f 83       	std	Y+7, r19	; 0x07
     2f8:	2e 83       	std	Y+6, r18	; 0x06
     2fa:	6e 81       	ldd	r22, Y+6	; 0x06
     2fc:	7f 81       	ldd	r23, Y+7	; 0x07
     2fe:	61 30       	cpi	r22, 0x01	; 1
     300:	71 05       	cpc	r23, r1
     302:	69 f1       	breq	.+90     	; 0x35e <GPIO_setPinValue+0xc2>
     304:	8e 81       	ldd	r24, Y+6	; 0x06
     306:	9f 81       	ldd	r25, Y+7	; 0x07
     308:	82 30       	cpi	r24, 0x02	; 2
     30a:	91 05       	cpc	r25, r1
     30c:	34 f4       	brge	.+12     	; 0x31a <GPIO_setPinValue+0x7e>
     30e:	2e 81       	ldd	r18, Y+6	; 0x06
     310:	3f 81       	ldd	r19, Y+7	; 0x07
     312:	21 15       	cp	r18, r1
     314:	31 05       	cpc	r19, r1
     316:	69 f0       	breq	.+26     	; 0x332 <GPIO_setPinValue+0x96>
     318:	64 c0       	rjmp	.+200    	; 0x3e2 <GPIO_setPinValue+0x146>
     31a:	6e 81       	ldd	r22, Y+6	; 0x06
     31c:	7f 81       	ldd	r23, Y+7	; 0x07
     31e:	62 30       	cpi	r22, 0x02	; 2
     320:	71 05       	cpc	r23, r1
     322:	99 f1       	breq	.+102    	; 0x38a <GPIO_setPinValue+0xee>
     324:	8e 81       	ldd	r24, Y+6	; 0x06
     326:	9f 81       	ldd	r25, Y+7	; 0x07
     328:	83 30       	cpi	r24, 0x03	; 3
     32a:	91 05       	cpc	r25, r1
     32c:	09 f4       	brne	.+2      	; 0x330 <GPIO_setPinValue+0x94>
     32e:	43 c0       	rjmp	.+134    	; 0x3b6 <GPIO_setPinValue+0x11a>
     330:	58 c0       	rjmp	.+176    	; 0x3e2 <GPIO_setPinValue+0x146>
            {
            case PORTA:
                PORTA_Ptr = PORTA_Ptr | (value << PinId);
     332:	ab e3       	ldi	r26, 0x3B	; 59
     334:	b0 e0       	ldi	r27, 0x00	; 0
     336:	eb e3       	ldi	r30, 0x3B	; 59
     338:	f0 e0       	ldi	r31, 0x00	; 0
     33a:	80 81       	ld	r24, Z
     33c:	48 2f       	mov	r20, r24
     33e:	8b 81       	ldd	r24, Y+3	; 0x03
     340:	28 2f       	mov	r18, r24
     342:	30 e0       	ldi	r19, 0x00	; 0
     344:	8a 81       	ldd	r24, Y+2	; 0x02
     346:	88 2f       	mov	r24, r24
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	b9 01       	movw	r22, r18
     34c:	02 c0       	rjmp	.+4      	; 0x352 <GPIO_setPinValue+0xb6>
     34e:	66 0f       	add	r22, r22
     350:	77 1f       	adc	r23, r23
     352:	8a 95       	dec	r24
     354:	e2 f7       	brpl	.-8      	; 0x34e <GPIO_setPinValue+0xb2>
     356:	cb 01       	movw	r24, r22
     358:	84 2b       	or	r24, r20
     35a:	8c 93       	st	X, r24
     35c:	17 c1       	rjmp	.+558    	; 0x58c <GPIO_setPinValue+0x2f0>
                break;
            case PORTB:
                PORTB_Ptr = PORTB_Ptr | (value << PinId);
     35e:	a8 e3       	ldi	r26, 0x38	; 56
     360:	b0 e0       	ldi	r27, 0x00	; 0
     362:	e8 e3       	ldi	r30, 0x38	; 56
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	80 81       	ld	r24, Z
     368:	48 2f       	mov	r20, r24
     36a:	8b 81       	ldd	r24, Y+3	; 0x03
     36c:	28 2f       	mov	r18, r24
     36e:	30 e0       	ldi	r19, 0x00	; 0
     370:	8a 81       	ldd	r24, Y+2	; 0x02
     372:	88 2f       	mov	r24, r24
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	b9 01       	movw	r22, r18
     378:	02 c0       	rjmp	.+4      	; 0x37e <GPIO_setPinValue+0xe2>
     37a:	66 0f       	add	r22, r22
     37c:	77 1f       	adc	r23, r23
     37e:	8a 95       	dec	r24
     380:	e2 f7       	brpl	.-8      	; 0x37a <GPIO_setPinValue+0xde>
     382:	cb 01       	movw	r24, r22
     384:	84 2b       	or	r24, r20
     386:	8c 93       	st	X, r24
     388:	01 c1       	rjmp	.+514    	; 0x58c <GPIO_setPinValue+0x2f0>
                break;
            case PORTC:
                PORTC_Ptr = PORTC_Ptr | (value << PinId);
     38a:	a5 e3       	ldi	r26, 0x35	; 53
     38c:	b0 e0       	ldi	r27, 0x00	; 0
     38e:	e5 e3       	ldi	r30, 0x35	; 53
     390:	f0 e0       	ldi	r31, 0x00	; 0
     392:	80 81       	ld	r24, Z
     394:	48 2f       	mov	r20, r24
     396:	8b 81       	ldd	r24, Y+3	; 0x03
     398:	28 2f       	mov	r18, r24
     39a:	30 e0       	ldi	r19, 0x00	; 0
     39c:	8a 81       	ldd	r24, Y+2	; 0x02
     39e:	88 2f       	mov	r24, r24
     3a0:	90 e0       	ldi	r25, 0x00	; 0
     3a2:	b9 01       	movw	r22, r18
     3a4:	02 c0       	rjmp	.+4      	; 0x3aa <GPIO_setPinValue+0x10e>
     3a6:	66 0f       	add	r22, r22
     3a8:	77 1f       	adc	r23, r23
     3aa:	8a 95       	dec	r24
     3ac:	e2 f7       	brpl	.-8      	; 0x3a6 <GPIO_setPinValue+0x10a>
     3ae:	cb 01       	movw	r24, r22
     3b0:	84 2b       	or	r24, r20
     3b2:	8c 93       	st	X, r24
     3b4:	eb c0       	rjmp	.+470    	; 0x58c <GPIO_setPinValue+0x2f0>
                break;
            case PORTD:
                PORTD_Ptr = PORTD_Ptr | (value << PinId);
     3b6:	a2 e3       	ldi	r26, 0x32	; 50
     3b8:	b0 e0       	ldi	r27, 0x00	; 0
     3ba:	e2 e3       	ldi	r30, 0x32	; 50
     3bc:	f0 e0       	ldi	r31, 0x00	; 0
     3be:	80 81       	ld	r24, Z
     3c0:	48 2f       	mov	r20, r24
     3c2:	8b 81       	ldd	r24, Y+3	; 0x03
     3c4:	28 2f       	mov	r18, r24
     3c6:	30 e0       	ldi	r19, 0x00	; 0
     3c8:	8a 81       	ldd	r24, Y+2	; 0x02
     3ca:	88 2f       	mov	r24, r24
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	b9 01       	movw	r22, r18
     3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <GPIO_setPinValue+0x13a>
     3d2:	66 0f       	add	r22, r22
     3d4:	77 1f       	adc	r23, r23
     3d6:	8a 95       	dec	r24
     3d8:	e2 f7       	brpl	.-8      	; 0x3d2 <GPIO_setPinValue+0x136>
     3da:	cb 01       	movw	r24, r22
     3dc:	84 2b       	or	r24, r20
     3de:	8c 93       	st	X, r24
     3e0:	d5 c0       	rjmp	.+426    	; 0x58c <GPIO_setPinValue+0x2f0>
                break;
            default:
                PORTA_Ptr = PORTA_Ptr | 0x00;
     3e2:	ab e3       	ldi	r26, 0x3B	; 59
     3e4:	b0 e0       	ldi	r27, 0x00	; 0
     3e6:	eb e3       	ldi	r30, 0x3B	; 59
     3e8:	f0 e0       	ldi	r31, 0x00	; 0
     3ea:	80 81       	ld	r24, Z
     3ec:	8c 93       	st	X, r24
                PORTA_Ptr = PORTA_Ptr | 0x00;
     3ee:	ab e3       	ldi	r26, 0x3B	; 59
     3f0:	b0 e0       	ldi	r27, 0x00	; 0
     3f2:	eb e3       	ldi	r30, 0x3B	; 59
     3f4:	f0 e0       	ldi	r31, 0x00	; 0
     3f6:	80 81       	ld	r24, Z
     3f8:	8c 93       	st	X, r24
                PORTA_Ptr = PORTA_Ptr | 0x00;
     3fa:	ab e3       	ldi	r26, 0x3B	; 59
     3fc:	b0 e0       	ldi	r27, 0x00	; 0
     3fe:	eb e3       	ldi	r30, 0x3B	; 59
     400:	f0 e0       	ldi	r31, 0x00	; 0
     402:	80 81       	ld	r24, Z
     404:	8c 93       	st	X, r24
                PORTD_Ptr = PORTD_Ptr | 0x00;
     406:	a2 e3       	ldi	r26, 0x32	; 50
     408:	b0 e0       	ldi	r27, 0x00	; 0
     40a:	e2 e3       	ldi	r30, 0x32	; 50
     40c:	f0 e0       	ldi	r31, 0x00	; 0
     40e:	80 81       	ld	r24, Z
     410:	8c 93       	st	X, r24
     412:	bc c0       	rjmp	.+376    	; 0x58c <GPIO_setPinValue+0x2f0>
                break;
            }
        }
        else if (value == low_value)
     414:	8b 81       	ldd	r24, Y+3	; 0x03
     416:	88 23       	and	r24, r24
     418:	09 f0       	breq	.+2      	; 0x41c <GPIO_setPinValue+0x180>
     41a:	a4 c0       	rjmp	.+328    	; 0x564 <GPIO_setPinValue+0x2c8>
        {
            switch (portId)
     41c:	89 81       	ldd	r24, Y+1	; 0x01
     41e:	28 2f       	mov	r18, r24
     420:	30 e0       	ldi	r19, 0x00	; 0
     422:	3d 83       	std	Y+5, r19	; 0x05
     424:	2c 83       	std	Y+4, r18	; 0x04
     426:	6c 81       	ldd	r22, Y+4	; 0x04
     428:	7d 81       	ldd	r23, Y+5	; 0x05
     42a:	61 30       	cpi	r22, 0x01	; 1
     42c:	71 05       	cpc	r23, r1
     42e:	09 f4       	brne	.+2      	; 0x432 <GPIO_setPinValue+0x196>
     430:	41 c0       	rjmp	.+130    	; 0x4b4 <GPIO_setPinValue+0x218>
     432:	8c 81       	ldd	r24, Y+4	; 0x04
     434:	9d 81       	ldd	r25, Y+5	; 0x05
     436:	82 30       	cpi	r24, 0x02	; 2
     438:	91 05       	cpc	r25, r1
     43a:	34 f4       	brge	.+12     	; 0x448 <GPIO_setPinValue+0x1ac>
     43c:	2c 81       	ldd	r18, Y+4	; 0x04
     43e:	3d 81       	ldd	r19, Y+5	; 0x05
     440:	21 15       	cp	r18, r1
     442:	31 05       	cpc	r19, r1
     444:	71 f0       	breq	.+28     	; 0x462 <GPIO_setPinValue+0x1c6>
     446:	75 c0       	rjmp	.+234    	; 0x532 <GPIO_setPinValue+0x296>
     448:	6c 81       	ldd	r22, Y+4	; 0x04
     44a:	7d 81       	ldd	r23, Y+5	; 0x05
     44c:	62 30       	cpi	r22, 0x02	; 2
     44e:	71 05       	cpc	r23, r1
     450:	09 f4       	brne	.+2      	; 0x454 <GPIO_setPinValue+0x1b8>
     452:	45 c0       	rjmp	.+138    	; 0x4de <GPIO_setPinValue+0x242>
     454:	8c 81       	ldd	r24, Y+4	; 0x04
     456:	9d 81       	ldd	r25, Y+5	; 0x05
     458:	83 30       	cpi	r24, 0x03	; 3
     45a:	91 05       	cpc	r25, r1
     45c:	09 f4       	brne	.+2      	; 0x460 <GPIO_setPinValue+0x1c4>
     45e:	54 c0       	rjmp	.+168    	; 0x508 <GPIO_setPinValue+0x26c>
     460:	68 c0       	rjmp	.+208    	; 0x532 <GPIO_setPinValue+0x296>
            {
            case PORTA:
                printf("%i", value);
     462:	8b 81       	ldd	r24, Y+3	; 0x03
     464:	28 2f       	mov	r18, r24
     466:	30 e0       	ldi	r19, 0x00	; 0
     468:	00 d0       	rcall	.+0      	; 0x46a <GPIO_setPinValue+0x1ce>
     46a:	00 d0       	rcall	.+0      	; 0x46c <GPIO_setPinValue+0x1d0>
     46c:	ed b7       	in	r30, 0x3d	; 61
     46e:	fe b7       	in	r31, 0x3e	; 62
     470:	31 96       	adiw	r30, 0x01	; 1
     472:	88 ec       	ldi	r24, 0xC8	; 200
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	91 83       	std	Z+1, r25	; 0x01
     478:	80 83       	st	Z, r24
     47a:	33 83       	std	Z+3, r19	; 0x03
     47c:	22 83       	std	Z+2, r18	; 0x02
     47e:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     482:	0f 90       	pop	r0
     484:	0f 90       	pop	r0
     486:	0f 90       	pop	r0
     488:	0f 90       	pop	r0
                PORTA_Ptr = PORTA_Ptr & ~(1 << PinId);
     48a:	ab e3       	ldi	r26, 0x3B	; 59
     48c:	b0 e0       	ldi	r27, 0x00	; 0
     48e:	eb e3       	ldi	r30, 0x3B	; 59
     490:	f0 e0       	ldi	r31, 0x00	; 0
     492:	80 81       	ld	r24, Z
     494:	48 2f       	mov	r20, r24
     496:	8a 81       	ldd	r24, Y+2	; 0x02
     498:	28 2f       	mov	r18, r24
     49a:	30 e0       	ldi	r19, 0x00	; 0
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	02 2e       	mov	r0, r18
     4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <GPIO_setPinValue+0x20c>
     4a4:	88 0f       	add	r24, r24
     4a6:	99 1f       	adc	r25, r25
     4a8:	0a 94       	dec	r0
     4aa:	e2 f7       	brpl	.-8      	; 0x4a4 <GPIO_setPinValue+0x208>
     4ac:	80 95       	com	r24
     4ae:	84 23       	and	r24, r20
     4b0:	8c 93       	st	X, r24
     4b2:	6c c0       	rjmp	.+216    	; 0x58c <GPIO_setPinValue+0x2f0>
                break;
            case PORTB:
                PORTB_Ptr = PORTB_Ptr & ~(1 << PinId);
     4b4:	a8 e3       	ldi	r26, 0x38	; 56
     4b6:	b0 e0       	ldi	r27, 0x00	; 0
     4b8:	e8 e3       	ldi	r30, 0x38	; 56
     4ba:	f0 e0       	ldi	r31, 0x00	; 0
     4bc:	80 81       	ld	r24, Z
     4be:	48 2f       	mov	r20, r24
     4c0:	8a 81       	ldd	r24, Y+2	; 0x02
     4c2:	28 2f       	mov	r18, r24
     4c4:	30 e0       	ldi	r19, 0x00	; 0
     4c6:	81 e0       	ldi	r24, 0x01	; 1
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	02 2e       	mov	r0, r18
     4cc:	02 c0       	rjmp	.+4      	; 0x4d2 <GPIO_setPinValue+0x236>
     4ce:	88 0f       	add	r24, r24
     4d0:	99 1f       	adc	r25, r25
     4d2:	0a 94       	dec	r0
     4d4:	e2 f7       	brpl	.-8      	; 0x4ce <GPIO_setPinValue+0x232>
     4d6:	80 95       	com	r24
     4d8:	84 23       	and	r24, r20
     4da:	8c 93       	st	X, r24
     4dc:	57 c0       	rjmp	.+174    	; 0x58c <GPIO_setPinValue+0x2f0>
                break;
            case PORTC:
                PORTC_Ptr = PORTC_Ptr & ~(1 << PinId);
     4de:	a5 e3       	ldi	r26, 0x35	; 53
     4e0:	b0 e0       	ldi	r27, 0x00	; 0
     4e2:	e5 e3       	ldi	r30, 0x35	; 53
     4e4:	f0 e0       	ldi	r31, 0x00	; 0
     4e6:	80 81       	ld	r24, Z
     4e8:	48 2f       	mov	r20, r24
     4ea:	8a 81       	ldd	r24, Y+2	; 0x02
     4ec:	28 2f       	mov	r18, r24
     4ee:	30 e0       	ldi	r19, 0x00	; 0
     4f0:	81 e0       	ldi	r24, 0x01	; 1
     4f2:	90 e0       	ldi	r25, 0x00	; 0
     4f4:	02 2e       	mov	r0, r18
     4f6:	02 c0       	rjmp	.+4      	; 0x4fc <GPIO_setPinValue+0x260>
     4f8:	88 0f       	add	r24, r24
     4fa:	99 1f       	adc	r25, r25
     4fc:	0a 94       	dec	r0
     4fe:	e2 f7       	brpl	.-8      	; 0x4f8 <GPIO_setPinValue+0x25c>
     500:	80 95       	com	r24
     502:	84 23       	and	r24, r20
     504:	8c 93       	st	X, r24
     506:	42 c0       	rjmp	.+132    	; 0x58c <GPIO_setPinValue+0x2f0>
                break;
            case PORTD:
                PORTD_Ptr = PORTD_Ptr & ~(1 << PinId);
     508:	a2 e3       	ldi	r26, 0x32	; 50
     50a:	b0 e0       	ldi	r27, 0x00	; 0
     50c:	e2 e3       	ldi	r30, 0x32	; 50
     50e:	f0 e0       	ldi	r31, 0x00	; 0
     510:	80 81       	ld	r24, Z
     512:	48 2f       	mov	r20, r24
     514:	8a 81       	ldd	r24, Y+2	; 0x02
     516:	28 2f       	mov	r18, r24
     518:	30 e0       	ldi	r19, 0x00	; 0
     51a:	81 e0       	ldi	r24, 0x01	; 1
     51c:	90 e0       	ldi	r25, 0x00	; 0
     51e:	02 2e       	mov	r0, r18
     520:	02 c0       	rjmp	.+4      	; 0x526 <GPIO_setPinValue+0x28a>
     522:	88 0f       	add	r24, r24
     524:	99 1f       	adc	r25, r25
     526:	0a 94       	dec	r0
     528:	e2 f7       	brpl	.-8      	; 0x522 <GPIO_setPinValue+0x286>
     52a:	80 95       	com	r24
     52c:	84 23       	and	r24, r20
     52e:	8c 93       	st	X, r24
     530:	2d c0       	rjmp	.+90     	; 0x58c <GPIO_setPinValue+0x2f0>
                break;
            default:
                PORTA_Ptr = PORTA_Ptr | 0x00;
     532:	ab e3       	ldi	r26, 0x3B	; 59
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	eb e3       	ldi	r30, 0x3B	; 59
     538:	f0 e0       	ldi	r31, 0x00	; 0
     53a:	80 81       	ld	r24, Z
     53c:	8c 93       	st	X, r24
                PORTA_Ptr = PORTA_Ptr | 0x00;
     53e:	ab e3       	ldi	r26, 0x3B	; 59
     540:	b0 e0       	ldi	r27, 0x00	; 0
     542:	eb e3       	ldi	r30, 0x3B	; 59
     544:	f0 e0       	ldi	r31, 0x00	; 0
     546:	80 81       	ld	r24, Z
     548:	8c 93       	st	X, r24
                PORTA_Ptr = PORTA_Ptr | 0x00;
     54a:	ab e3       	ldi	r26, 0x3B	; 59
     54c:	b0 e0       	ldi	r27, 0x00	; 0
     54e:	eb e3       	ldi	r30, 0x3B	; 59
     550:	f0 e0       	ldi	r31, 0x00	; 0
     552:	80 81       	ld	r24, Z
     554:	8c 93       	st	X, r24
                PORTD_Ptr = PORTD_Ptr | 0x00;
     556:	a2 e3       	ldi	r26, 0x32	; 50
     558:	b0 e0       	ldi	r27, 0x00	; 0
     55a:	e2 e3       	ldi	r30, 0x32	; 50
     55c:	f0 e0       	ldi	r31, 0x00	; 0
     55e:	80 81       	ld	r24, Z
     560:	8c 93       	st	X, r24
     562:	14 c0       	rjmp	.+40     	; 0x58c <GPIO_setPinValue+0x2f0>
                break;
            }
        }
        else
        {
            printf("can not assign 0%x to the pin", value);
     564:	8b 81       	ldd	r24, Y+3	; 0x03
     566:	28 2f       	mov	r18, r24
     568:	30 e0       	ldi	r19, 0x00	; 0
     56a:	00 d0       	rcall	.+0      	; 0x56c <GPIO_setPinValue+0x2d0>
     56c:	00 d0       	rcall	.+0      	; 0x56e <GPIO_setPinValue+0x2d2>
     56e:	ed b7       	in	r30, 0x3d	; 61
     570:	fe b7       	in	r31, 0x3e	; 62
     572:	31 96       	adiw	r30, 0x01	; 1
     574:	8b ec       	ldi	r24, 0xCB	; 203
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	91 83       	std	Z+1, r25	; 0x01
     57a:	80 83       	st	Z, r24
     57c:	33 83       	std	Z+3, r19	; 0x03
     57e:	22 83       	std	Z+2, r18	; 0x02
     580:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     584:	0f 90       	pop	r0
     586:	0f 90       	pop	r0
     588:	0f 90       	pop	r0
     58a:	0f 90       	pop	r0
        }
    }
}
     58c:	27 96       	adiw	r28, 0x07	; 7
     58e:	0f b6       	in	r0, 0x3f	; 63
     590:	f8 94       	cli
     592:	de bf       	out	0x3e, r29	; 62
     594:	0f be       	out	0x3f, r0	; 63
     596:	cd bf       	out	0x3d, r28	; 61
     598:	cf 91       	pop	r28
     59a:	df 91       	pop	r29
     59c:	08 95       	ret

0000059e <GPIO_setPortDirection>:

void GPIO_setPortDirection(u8 portId, u8 PortDirectionValue)
{
     59e:	df 93       	push	r29
     5a0:	cf 93       	push	r28
     5a2:	00 d0       	rcall	.+0      	; 0x5a4 <GPIO_setPortDirection+0x6>
     5a4:	00 d0       	rcall	.+0      	; 0x5a6 <GPIO_setPortDirection+0x8>
     5a6:	cd b7       	in	r28, 0x3d	; 61
     5a8:	de b7       	in	r29, 0x3e	; 62
     5aa:	89 83       	std	Y+1, r24	; 0x01
     5ac:	6a 83       	std	Y+2, r22	; 0x02
    if ((PORTA != portId) && (PORTB != portId) && (PORTC != portId) && (PORTD != portId))
     5ae:	89 81       	ldd	r24, Y+1	; 0x01
     5b0:	88 23       	and	r24, r24
     5b2:	b1 f0       	breq	.+44     	; 0x5e0 <GPIO_setPortDirection+0x42>
     5b4:	89 81       	ldd	r24, Y+1	; 0x01
     5b6:	81 30       	cpi	r24, 0x01	; 1
     5b8:	99 f0       	breq	.+38     	; 0x5e0 <GPIO_setPortDirection+0x42>
     5ba:	89 81       	ldd	r24, Y+1	; 0x01
     5bc:	82 30       	cpi	r24, 0x02	; 2
     5be:	81 f0       	breq	.+32     	; 0x5e0 <GPIO_setPortDirection+0x42>
     5c0:	89 81       	ldd	r24, Y+1	; 0x01
     5c2:	83 30       	cpi	r24, 0x03	; 3
     5c4:	69 f0       	breq	.+26     	; 0x5e0 <GPIO_setPortDirection+0x42>
    {
        printf("WRONG ID!");
     5c6:	00 d0       	rcall	.+0      	; 0x5c8 <GPIO_setPortDirection+0x2a>
     5c8:	ed b7       	in	r30, 0x3d	; 61
     5ca:	fe b7       	in	r31, 0x3e	; 62
     5cc:	31 96       	adiw	r30, 0x01	; 1
     5ce:	80 e6       	ldi	r24, 0x60	; 96
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	91 83       	std	Z+1, r25	; 0x01
     5d4:	80 83       	st	Z, r24
     5d6:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     5da:	0f 90       	pop	r0
     5dc:	0f 90       	pop	r0
     5de:	f6 c0       	rjmp	.+492    	; 0x7cc <GPIO_setPortDirection+0x22e>
    }
    else
    {
        switch (portId)
     5e0:	89 81       	ldd	r24, Y+1	; 0x01
     5e2:	28 2f       	mov	r18, r24
     5e4:	30 e0       	ldi	r19, 0x00	; 0
     5e6:	3c 83       	std	Y+4, r19	; 0x04
     5e8:	2b 83       	std	Y+3, r18	; 0x03
     5ea:	8b 81       	ldd	r24, Y+3	; 0x03
     5ec:	9c 81       	ldd	r25, Y+4	; 0x04
     5ee:	81 30       	cpi	r24, 0x01	; 1
     5f0:	91 05       	cpc	r25, r1
     5f2:	09 f4       	brne	.+2      	; 0x5f6 <GPIO_setPortDirection+0x58>
     5f4:	46 c0       	rjmp	.+140    	; 0x682 <GPIO_setPortDirection+0xe4>
     5f6:	2b 81       	ldd	r18, Y+3	; 0x03
     5f8:	3c 81       	ldd	r19, Y+4	; 0x04
     5fa:	22 30       	cpi	r18, 0x02	; 2
     5fc:	31 05       	cpc	r19, r1
     5fe:	2c f4       	brge	.+10     	; 0x60a <GPIO_setPortDirection+0x6c>
     600:	8b 81       	ldd	r24, Y+3	; 0x03
     602:	9c 81       	ldd	r25, Y+4	; 0x04
     604:	00 97       	sbiw	r24, 0x00	; 0
     606:	71 f0       	breq	.+28     	; 0x624 <GPIO_setPortDirection+0x86>
     608:	c9 c0       	rjmp	.+402    	; 0x79c <GPIO_setPortDirection+0x1fe>
     60a:	2b 81       	ldd	r18, Y+3	; 0x03
     60c:	3c 81       	ldd	r19, Y+4	; 0x04
     60e:	22 30       	cpi	r18, 0x02	; 2
     610:	31 05       	cpc	r19, r1
     612:	09 f4       	brne	.+2      	; 0x616 <GPIO_setPortDirection+0x78>
     614:	65 c0       	rjmp	.+202    	; 0x6e0 <GPIO_setPortDirection+0x142>
     616:	8b 81       	ldd	r24, Y+3	; 0x03
     618:	9c 81       	ldd	r25, Y+4	; 0x04
     61a:	83 30       	cpi	r24, 0x03	; 3
     61c:	91 05       	cpc	r25, r1
     61e:	09 f4       	brne	.+2      	; 0x622 <GPIO_setPortDirection+0x84>
     620:	8e c0       	rjmp	.+284    	; 0x73e <GPIO_setPortDirection+0x1a0>
     622:	bc c0       	rjmp	.+376    	; 0x79c <GPIO_setPortDirection+0x1fe>
        {
        case PORTA:
            DDRA_Ptr = PortDirectionValue;
     624:	ea e3       	ldi	r30, 0x3A	; 58
     626:	f0 e0       	ldi	r31, 0x00	; 0
     628:	8a 81       	ldd	r24, Y+2	; 0x02
     62a:	80 83       	st	Z, r24
            printf("Direction 0x%x in PortAs", PortDirectionValue);
     62c:	8a 81       	ldd	r24, Y+2	; 0x02
     62e:	28 2f       	mov	r18, r24
     630:	30 e0       	ldi	r19, 0x00	; 0
     632:	00 d0       	rcall	.+0      	; 0x634 <GPIO_setPortDirection+0x96>
     634:	00 d0       	rcall	.+0      	; 0x636 <GPIO_setPortDirection+0x98>
     636:	ed b7       	in	r30, 0x3d	; 61
     638:	fe b7       	in	r31, 0x3e	; 62
     63a:	31 96       	adiw	r30, 0x01	; 1
     63c:	89 ee       	ldi	r24, 0xE9	; 233
     63e:	90 e0       	ldi	r25, 0x00	; 0
     640:	91 83       	std	Z+1, r25	; 0x01
     642:	80 83       	st	Z, r24
     644:	33 83       	std	Z+3, r19	; 0x03
     646:	22 83       	std	Z+2, r18	; 0x02
     648:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     64c:	0f 90       	pop	r0
     64e:	0f 90       	pop	r0
     650:	0f 90       	pop	r0
     652:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", DDRA_Ptr);
     654:	ea e3       	ldi	r30, 0x3A	; 58
     656:	f0 e0       	ldi	r31, 0x00	; 0
     658:	80 81       	ld	r24, Z
     65a:	28 2f       	mov	r18, r24
     65c:	30 e0       	ldi	r19, 0x00	; 0
     65e:	00 d0       	rcall	.+0      	; 0x660 <GPIO_setPortDirection+0xc2>
     660:	00 d0       	rcall	.+0      	; 0x662 <GPIO_setPortDirection+0xc4>
     662:	ed b7       	in	r30, 0x3d	; 61
     664:	fe b7       	in	r31, 0x3e	; 62
     666:	31 96       	adiw	r30, 0x01	; 1
     668:	89 e7       	ldi	r24, 0x79	; 121
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	91 83       	std	Z+1, r25	; 0x01
     66e:	80 83       	st	Z, r24
     670:	33 83       	std	Z+3, r19	; 0x03
     672:	22 83       	std	Z+2, r18	; 0x02
     674:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     678:	0f 90       	pop	r0
     67a:	0f 90       	pop	r0
     67c:	0f 90       	pop	r0
     67e:	0f 90       	pop	r0
     680:	a5 c0       	rjmp	.+330    	; 0x7cc <GPIO_setPortDirection+0x22e>
            break;
        case PORTB:
            DDRB_Ptr = PortDirectionValue;
     682:	e7 e3       	ldi	r30, 0x37	; 55
     684:	f0 e0       	ldi	r31, 0x00	; 0
     686:	8a 81       	ldd	r24, Y+2	; 0x02
     688:	80 83       	st	Z, r24
            printf("0x%x in PortB", PortDirectionValue);
     68a:	8a 81       	ldd	r24, Y+2	; 0x02
     68c:	28 2f       	mov	r18, r24
     68e:	30 e0       	ldi	r19, 0x00	; 0
     690:	00 d0       	rcall	.+0      	; 0x692 <GPIO_setPortDirection+0xf4>
     692:	00 d0       	rcall	.+0      	; 0x694 <GPIO_setPortDirection+0xf6>
     694:	ed b7       	in	r30, 0x3d	; 61
     696:	fe b7       	in	r31, 0x3e	; 62
     698:	31 96       	adiw	r30, 0x01	; 1
     69a:	82 e0       	ldi	r24, 0x02	; 2
     69c:	91 e0       	ldi	r25, 0x01	; 1
     69e:	91 83       	std	Z+1, r25	; 0x01
     6a0:	80 83       	st	Z, r24
     6a2:	33 83       	std	Z+3, r19	; 0x03
     6a4:	22 83       	std	Z+2, r18	; 0x02
     6a6:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     6aa:	0f 90       	pop	r0
     6ac:	0f 90       	pop	r0
     6ae:	0f 90       	pop	r0
     6b0:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", DDRB_Ptr);
     6b2:	e7 e3       	ldi	r30, 0x37	; 55
     6b4:	f0 e0       	ldi	r31, 0x00	; 0
     6b6:	80 81       	ld	r24, Z
     6b8:	28 2f       	mov	r18, r24
     6ba:	30 e0       	ldi	r19, 0x00	; 0
     6bc:	00 d0       	rcall	.+0      	; 0x6be <GPIO_setPortDirection+0x120>
     6be:	00 d0       	rcall	.+0      	; 0x6c0 <GPIO_setPortDirection+0x122>
     6c0:	ed b7       	in	r30, 0x3d	; 61
     6c2:	fe b7       	in	r31, 0x3e	; 62
     6c4:	31 96       	adiw	r30, 0x01	; 1
     6c6:	89 e7       	ldi	r24, 0x79	; 121
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	91 83       	std	Z+1, r25	; 0x01
     6cc:	80 83       	st	Z, r24
     6ce:	33 83       	std	Z+3, r19	; 0x03
     6d0:	22 83       	std	Z+2, r18	; 0x02
     6d2:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     6d6:	0f 90       	pop	r0
     6d8:	0f 90       	pop	r0
     6da:	0f 90       	pop	r0
     6dc:	0f 90       	pop	r0
     6de:	76 c0       	rjmp	.+236    	; 0x7cc <GPIO_setPortDirection+0x22e>
            break;
        case PORTC:
            DDRC_Ptr = PortDirectionValue;
     6e0:	e4 e3       	ldi	r30, 0x34	; 52
     6e2:	f0 e0       	ldi	r31, 0x00	; 0
     6e4:	8a 81       	ldd	r24, Y+2	; 0x02
     6e6:	80 83       	st	Z, r24
            printf("0x%x in PortC", PortDirectionValue);
     6e8:	8a 81       	ldd	r24, Y+2	; 0x02
     6ea:	28 2f       	mov	r18, r24
     6ec:	30 e0       	ldi	r19, 0x00	; 0
     6ee:	00 d0       	rcall	.+0      	; 0x6f0 <GPIO_setPortDirection+0x152>
     6f0:	00 d0       	rcall	.+0      	; 0x6f2 <GPIO_setPortDirection+0x154>
     6f2:	ed b7       	in	r30, 0x3d	; 61
     6f4:	fe b7       	in	r31, 0x3e	; 62
     6f6:	31 96       	adiw	r30, 0x01	; 1
     6f8:	80 e1       	ldi	r24, 0x10	; 16
     6fa:	91 e0       	ldi	r25, 0x01	; 1
     6fc:	91 83       	std	Z+1, r25	; 0x01
     6fe:	80 83       	st	Z, r24
     700:	33 83       	std	Z+3, r19	; 0x03
     702:	22 83       	std	Z+2, r18	; 0x02
     704:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     708:	0f 90       	pop	r0
     70a:	0f 90       	pop	r0
     70c:	0f 90       	pop	r0
     70e:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", DDRC_Ptr);
     710:	e4 e3       	ldi	r30, 0x34	; 52
     712:	f0 e0       	ldi	r31, 0x00	; 0
     714:	80 81       	ld	r24, Z
     716:	28 2f       	mov	r18, r24
     718:	30 e0       	ldi	r19, 0x00	; 0
     71a:	00 d0       	rcall	.+0      	; 0x71c <GPIO_setPortDirection+0x17e>
     71c:	00 d0       	rcall	.+0      	; 0x71e <GPIO_setPortDirection+0x180>
     71e:	ed b7       	in	r30, 0x3d	; 61
     720:	fe b7       	in	r31, 0x3e	; 62
     722:	31 96       	adiw	r30, 0x01	; 1
     724:	89 e7       	ldi	r24, 0x79	; 121
     726:	90 e0       	ldi	r25, 0x00	; 0
     728:	91 83       	std	Z+1, r25	; 0x01
     72a:	80 83       	st	Z, r24
     72c:	33 83       	std	Z+3, r19	; 0x03
     72e:	22 83       	std	Z+2, r18	; 0x02
     730:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     734:	0f 90       	pop	r0
     736:	0f 90       	pop	r0
     738:	0f 90       	pop	r0
     73a:	0f 90       	pop	r0
     73c:	47 c0       	rjmp	.+142    	; 0x7cc <GPIO_setPortDirection+0x22e>
            break;
        case PORTD:
            DDRD_Ptr = PortDirectionValue;
     73e:	e1 e3       	ldi	r30, 0x31	; 49
     740:	f0 e0       	ldi	r31, 0x00	; 0
     742:	8a 81       	ldd	r24, Y+2	; 0x02
     744:	80 83       	st	Z, r24
            printf("0x%x in PortD", PortDirectionValue);
     746:	8a 81       	ldd	r24, Y+2	; 0x02
     748:	28 2f       	mov	r18, r24
     74a:	30 e0       	ldi	r19, 0x00	; 0
     74c:	00 d0       	rcall	.+0      	; 0x74e <GPIO_setPortDirection+0x1b0>
     74e:	00 d0       	rcall	.+0      	; 0x750 <GPIO_setPortDirection+0x1b2>
     750:	ed b7       	in	r30, 0x3d	; 61
     752:	fe b7       	in	r31, 0x3e	; 62
     754:	31 96       	adiw	r30, 0x01	; 1
     756:	8a eb       	ldi	r24, 0xBA	; 186
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	91 83       	std	Z+1, r25	; 0x01
     75c:	80 83       	st	Z, r24
     75e:	33 83       	std	Z+3, r19	; 0x03
     760:	22 83       	std	Z+2, r18	; 0x02
     762:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     766:	0f 90       	pop	r0
     768:	0f 90       	pop	r0
     76a:	0f 90       	pop	r0
     76c:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", DDRD_Ptr);
     76e:	e1 e3       	ldi	r30, 0x31	; 49
     770:	f0 e0       	ldi	r31, 0x00	; 0
     772:	80 81       	ld	r24, Z
     774:	28 2f       	mov	r18, r24
     776:	30 e0       	ldi	r19, 0x00	; 0
     778:	00 d0       	rcall	.+0      	; 0x77a <GPIO_setPortDirection+0x1dc>
     77a:	00 d0       	rcall	.+0      	; 0x77c <GPIO_setPortDirection+0x1de>
     77c:	ed b7       	in	r30, 0x3d	; 61
     77e:	fe b7       	in	r31, 0x3e	; 62
     780:	31 96       	adiw	r30, 0x01	; 1
     782:	89 e7       	ldi	r24, 0x79	; 121
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	91 83       	std	Z+1, r25	; 0x01
     788:	80 83       	st	Z, r24
     78a:	33 83       	std	Z+3, r19	; 0x03
     78c:	22 83       	std	Z+2, r18	; 0x02
     78e:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     792:	0f 90       	pop	r0
     794:	0f 90       	pop	r0
     796:	0f 90       	pop	r0
     798:	0f 90       	pop	r0
     79a:	18 c0       	rjmp	.+48     	; 0x7cc <GPIO_setPortDirection+0x22e>
            break;

        default:
            DDRA_Ptr |= (0x00);
     79c:	aa e3       	ldi	r26, 0x3A	; 58
     79e:	b0 e0       	ldi	r27, 0x00	; 0
     7a0:	ea e3       	ldi	r30, 0x3A	; 58
     7a2:	f0 e0       	ldi	r31, 0x00	; 0
     7a4:	80 81       	ld	r24, Z
     7a6:	8c 93       	st	X, r24
            DDRB_Ptr |= (0x00);
     7a8:	a7 e3       	ldi	r26, 0x37	; 55
     7aa:	b0 e0       	ldi	r27, 0x00	; 0
     7ac:	e7 e3       	ldi	r30, 0x37	; 55
     7ae:	f0 e0       	ldi	r31, 0x00	; 0
     7b0:	80 81       	ld	r24, Z
     7b2:	8c 93       	st	X, r24
            DDRC_Ptr |= (0x00);
     7b4:	a4 e3       	ldi	r26, 0x34	; 52
     7b6:	b0 e0       	ldi	r27, 0x00	; 0
     7b8:	e4 e3       	ldi	r30, 0x34	; 52
     7ba:	f0 e0       	ldi	r31, 0x00	; 0
     7bc:	80 81       	ld	r24, Z
     7be:	8c 93       	st	X, r24
            DDRD_Ptr |= (0x00);
     7c0:	a1 e3       	ldi	r26, 0x31	; 49
     7c2:	b0 e0       	ldi	r27, 0x00	; 0
     7c4:	e1 e3       	ldi	r30, 0x31	; 49
     7c6:	f0 e0       	ldi	r31, 0x00	; 0
     7c8:	80 81       	ld	r24, Z
     7ca:	8c 93       	st	X, r24
            break;
        }
    }
}
     7cc:	0f 90       	pop	r0
     7ce:	0f 90       	pop	r0
     7d0:	0f 90       	pop	r0
     7d2:	0f 90       	pop	r0
     7d4:	cf 91       	pop	r28
     7d6:	df 91       	pop	r29
     7d8:	08 95       	ret

000007da <GPIO_setPindDirection>:

void GPIO_setPindDirection(u8 portId, u8 PinId, u8 PintDirectionValue)
{
     7da:	df 93       	push	r29
     7dc:	cf 93       	push	r28
     7de:	cd b7       	in	r28, 0x3d	; 61
     7e0:	de b7       	in	r29, 0x3e	; 62
     7e2:	27 97       	sbiw	r28, 0x07	; 7
     7e4:	0f b6       	in	r0, 0x3f	; 63
     7e6:	f8 94       	cli
     7e8:	de bf       	out	0x3e, r29	; 62
     7ea:	0f be       	out	0x3f, r0	; 63
     7ec:	cd bf       	out	0x3d, r28	; 61
     7ee:	89 83       	std	Y+1, r24	; 0x01
     7f0:	6a 83       	std	Y+2, r22	; 0x02
     7f2:	4b 83       	std	Y+3, r20	; 0x03
    if ((PORTA != portId) && (PORTB != portId) && (PORTC != portId) && (PORTD != portId))
     7f4:	89 81       	ldd	r24, Y+1	; 0x01
     7f6:	88 23       	and	r24, r24
     7f8:	b1 f0       	breq	.+44     	; 0x826 <GPIO_setPindDirection+0x4c>
     7fa:	89 81       	ldd	r24, Y+1	; 0x01
     7fc:	81 30       	cpi	r24, 0x01	; 1
     7fe:	99 f0       	breq	.+38     	; 0x826 <GPIO_setPindDirection+0x4c>
     800:	89 81       	ldd	r24, Y+1	; 0x01
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	81 f0       	breq	.+32     	; 0x826 <GPIO_setPindDirection+0x4c>
     806:	89 81       	ldd	r24, Y+1	; 0x01
     808:	83 30       	cpi	r24, 0x03	; 3
     80a:	69 f0       	breq	.+26     	; 0x826 <GPIO_setPindDirection+0x4c>
    {
        printf("WRONG ID!");
     80c:	00 d0       	rcall	.+0      	; 0x80e <GPIO_setPindDirection+0x34>
     80e:	ed b7       	in	r30, 0x3d	; 61
     810:	fe b7       	in	r31, 0x3e	; 62
     812:	31 96       	adiw	r30, 0x01	; 1
     814:	80 e6       	ldi	r24, 0x60	; 96
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	91 83       	std	Z+1, r25	; 0x01
     81a:	80 83       	st	Z, r24
     81c:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     820:	0f 90       	pop	r0
     822:	0f 90       	pop	r0
     824:	44 c1       	rjmp	.+648    	; 0xaae <__stack+0x24f>
    }
    else
    {
        if (Output_direction == PintDirectionValue)
     826:	8b 81       	ldd	r24, Y+3	; 0x03
     828:	81 30       	cpi	r24, 0x01	; 1
     82a:	09 f0       	breq	.+2      	; 0x82e <GPIO_setPindDirection+0x54>
     82c:	92 c0       	rjmp	.+292    	; 0x952 <__stack+0xf3>
        {
            switch (portId)
     82e:	89 81       	ldd	r24, Y+1	; 0x01
     830:	28 2f       	mov	r18, r24
     832:	30 e0       	ldi	r19, 0x00	; 0
     834:	3f 83       	std	Y+7, r19	; 0x07
     836:	2e 83       	std	Y+6, r18	; 0x06
     838:	6e 81       	ldd	r22, Y+6	; 0x06
     83a:	7f 81       	ldd	r23, Y+7	; 0x07
     83c:	61 30       	cpi	r22, 0x01	; 1
     83e:	71 05       	cpc	r23, r1
     840:	69 f1       	breq	.+90     	; 0x89c <__stack+0x3d>
     842:	8e 81       	ldd	r24, Y+6	; 0x06
     844:	9f 81       	ldd	r25, Y+7	; 0x07
     846:	82 30       	cpi	r24, 0x02	; 2
     848:	91 05       	cpc	r25, r1
     84a:	34 f4       	brge	.+12     	; 0x858 <GPIO_setPindDirection+0x7e>
     84c:	2e 81       	ldd	r18, Y+6	; 0x06
     84e:	3f 81       	ldd	r19, Y+7	; 0x07
     850:	21 15       	cp	r18, r1
     852:	31 05       	cpc	r19, r1
     854:	69 f0       	breq	.+26     	; 0x870 <__stack+0x11>
     856:	64 c0       	rjmp	.+200    	; 0x920 <__stack+0xc1>
     858:	6e 81       	ldd	r22, Y+6	; 0x06
     85a:	7f 81       	ldd	r23, Y+7	; 0x07
     85c:	62 30       	cpi	r22, 0x02	; 2
     85e:	71 05       	cpc	r23, r1
     860:	99 f1       	breq	.+102    	; 0x8c8 <__stack+0x69>
     862:	8e 81       	ldd	r24, Y+6	; 0x06
     864:	9f 81       	ldd	r25, Y+7	; 0x07
     866:	83 30       	cpi	r24, 0x03	; 3
     868:	91 05       	cpc	r25, r1
     86a:	09 f4       	brne	.+2      	; 0x86e <__stack+0xf>
     86c:	43 c0       	rjmp	.+134    	; 0x8f4 <__stack+0x95>
     86e:	58 c0       	rjmp	.+176    	; 0x920 <__stack+0xc1>
            {
            case PORTA:
                DDRA_Ptr = DDRA_Ptr | (PintDirectionValue << PinId);
     870:	aa e3       	ldi	r26, 0x3A	; 58
     872:	b0 e0       	ldi	r27, 0x00	; 0
     874:	ea e3       	ldi	r30, 0x3A	; 58
     876:	f0 e0       	ldi	r31, 0x00	; 0
     878:	80 81       	ld	r24, Z
     87a:	48 2f       	mov	r20, r24
     87c:	8b 81       	ldd	r24, Y+3	; 0x03
     87e:	28 2f       	mov	r18, r24
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	8a 81       	ldd	r24, Y+2	; 0x02
     884:	88 2f       	mov	r24, r24
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	b9 01       	movw	r22, r18
     88a:	02 c0       	rjmp	.+4      	; 0x890 <__stack+0x31>
     88c:	66 0f       	add	r22, r22
     88e:	77 1f       	adc	r23, r23
     890:	8a 95       	dec	r24
     892:	e2 f7       	brpl	.-8      	; 0x88c <__stack+0x2d>
     894:	cb 01       	movw	r24, r22
     896:	84 2b       	or	r24, r20
     898:	8c 93       	st	X, r24
     89a:	09 c1       	rjmp	.+530    	; 0xaae <__stack+0x24f>
                break;
            case PORTB:
                DDRB_Ptr = DDRB_Ptr | (PintDirectionValue << PinId);
     89c:	a7 e3       	ldi	r26, 0x37	; 55
     89e:	b0 e0       	ldi	r27, 0x00	; 0
     8a0:	e7 e3       	ldi	r30, 0x37	; 55
     8a2:	f0 e0       	ldi	r31, 0x00	; 0
     8a4:	80 81       	ld	r24, Z
     8a6:	48 2f       	mov	r20, r24
     8a8:	8b 81       	ldd	r24, Y+3	; 0x03
     8aa:	28 2f       	mov	r18, r24
     8ac:	30 e0       	ldi	r19, 0x00	; 0
     8ae:	8a 81       	ldd	r24, Y+2	; 0x02
     8b0:	88 2f       	mov	r24, r24
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	b9 01       	movw	r22, r18
     8b6:	02 c0       	rjmp	.+4      	; 0x8bc <__stack+0x5d>
     8b8:	66 0f       	add	r22, r22
     8ba:	77 1f       	adc	r23, r23
     8bc:	8a 95       	dec	r24
     8be:	e2 f7       	brpl	.-8      	; 0x8b8 <__stack+0x59>
     8c0:	cb 01       	movw	r24, r22
     8c2:	84 2b       	or	r24, r20
     8c4:	8c 93       	st	X, r24
     8c6:	f3 c0       	rjmp	.+486    	; 0xaae <__stack+0x24f>
                break;
            case PORTC:
                DDRC_Ptr = DDRC_Ptr | (PintDirectionValue << PinId);
     8c8:	a4 e3       	ldi	r26, 0x34	; 52
     8ca:	b0 e0       	ldi	r27, 0x00	; 0
     8cc:	e4 e3       	ldi	r30, 0x34	; 52
     8ce:	f0 e0       	ldi	r31, 0x00	; 0
     8d0:	80 81       	ld	r24, Z
     8d2:	48 2f       	mov	r20, r24
     8d4:	8b 81       	ldd	r24, Y+3	; 0x03
     8d6:	28 2f       	mov	r18, r24
     8d8:	30 e0       	ldi	r19, 0x00	; 0
     8da:	8a 81       	ldd	r24, Y+2	; 0x02
     8dc:	88 2f       	mov	r24, r24
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	b9 01       	movw	r22, r18
     8e2:	02 c0       	rjmp	.+4      	; 0x8e8 <__stack+0x89>
     8e4:	66 0f       	add	r22, r22
     8e6:	77 1f       	adc	r23, r23
     8e8:	8a 95       	dec	r24
     8ea:	e2 f7       	brpl	.-8      	; 0x8e4 <__stack+0x85>
     8ec:	cb 01       	movw	r24, r22
     8ee:	84 2b       	or	r24, r20
     8f0:	8c 93       	st	X, r24
     8f2:	dd c0       	rjmp	.+442    	; 0xaae <__stack+0x24f>
                break;
            case PORTD:
                DDRD_Ptr = DDRD_Ptr | (PintDirectionValue << PinId);
     8f4:	a1 e3       	ldi	r26, 0x31	; 49
     8f6:	b0 e0       	ldi	r27, 0x00	; 0
     8f8:	e1 e3       	ldi	r30, 0x31	; 49
     8fa:	f0 e0       	ldi	r31, 0x00	; 0
     8fc:	80 81       	ld	r24, Z
     8fe:	48 2f       	mov	r20, r24
     900:	8b 81       	ldd	r24, Y+3	; 0x03
     902:	28 2f       	mov	r18, r24
     904:	30 e0       	ldi	r19, 0x00	; 0
     906:	8a 81       	ldd	r24, Y+2	; 0x02
     908:	88 2f       	mov	r24, r24
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	b9 01       	movw	r22, r18
     90e:	02 c0       	rjmp	.+4      	; 0x914 <__stack+0xb5>
     910:	66 0f       	add	r22, r22
     912:	77 1f       	adc	r23, r23
     914:	8a 95       	dec	r24
     916:	e2 f7       	brpl	.-8      	; 0x910 <__stack+0xb1>
     918:	cb 01       	movw	r24, r22
     91a:	84 2b       	or	r24, r20
     91c:	8c 93       	st	X, r24
     91e:	c7 c0       	rjmp	.+398    	; 0xaae <__stack+0x24f>
                break;
            default:
                DDRA_Ptr |= (0x00);
     920:	aa e3       	ldi	r26, 0x3A	; 58
     922:	b0 e0       	ldi	r27, 0x00	; 0
     924:	ea e3       	ldi	r30, 0x3A	; 58
     926:	f0 e0       	ldi	r31, 0x00	; 0
     928:	80 81       	ld	r24, Z
     92a:	8c 93       	st	X, r24
                DDRB_Ptr |= (0x00);
     92c:	a7 e3       	ldi	r26, 0x37	; 55
     92e:	b0 e0       	ldi	r27, 0x00	; 0
     930:	e7 e3       	ldi	r30, 0x37	; 55
     932:	f0 e0       	ldi	r31, 0x00	; 0
     934:	80 81       	ld	r24, Z
     936:	8c 93       	st	X, r24
                DDRC_Ptr |= (0x00);
     938:	a4 e3       	ldi	r26, 0x34	; 52
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	e4 e3       	ldi	r30, 0x34	; 52
     93e:	f0 e0       	ldi	r31, 0x00	; 0
     940:	80 81       	ld	r24, Z
     942:	8c 93       	st	X, r24
                DDRD_Ptr |= (0x00);
     944:	a1 e3       	ldi	r26, 0x31	; 49
     946:	b0 e0       	ldi	r27, 0x00	; 0
     948:	e1 e3       	ldi	r30, 0x31	; 49
     94a:	f0 e0       	ldi	r31, 0x00	; 0
     94c:	80 81       	ld	r24, Z
     94e:	8c 93       	st	X, r24
     950:	ae c0       	rjmp	.+348    	; 0xaae <__stack+0x24f>
                break;
            }
        }
        else if (low_value == PintDirectionValue)
     952:	8b 81       	ldd	r24, Y+3	; 0x03
     954:	88 23       	and	r24, r24
     956:	09 f0       	breq	.+2      	; 0x95a <__stack+0xfb>
     958:	96 c0       	rjmp	.+300    	; 0xa86 <__stack+0x227>
        {
            switch (portId)
     95a:	89 81       	ldd	r24, Y+1	; 0x01
     95c:	28 2f       	mov	r18, r24
     95e:	30 e0       	ldi	r19, 0x00	; 0
     960:	3d 83       	std	Y+5, r19	; 0x05
     962:	2c 83       	std	Y+4, r18	; 0x04
     964:	6c 81       	ldd	r22, Y+4	; 0x04
     966:	7d 81       	ldd	r23, Y+5	; 0x05
     968:	61 30       	cpi	r22, 0x01	; 1
     96a:	71 05       	cpc	r23, r1
     96c:	71 f1       	breq	.+92     	; 0x9ca <__stack+0x16b>
     96e:	8c 81       	ldd	r24, Y+4	; 0x04
     970:	9d 81       	ldd	r25, Y+5	; 0x05
     972:	82 30       	cpi	r24, 0x02	; 2
     974:	91 05       	cpc	r25, r1
     976:	34 f4       	brge	.+12     	; 0x984 <__stack+0x125>
     978:	2c 81       	ldd	r18, Y+4	; 0x04
     97a:	3d 81       	ldd	r19, Y+5	; 0x05
     97c:	21 15       	cp	r18, r1
     97e:	31 05       	cpc	r19, r1
     980:	69 f0       	breq	.+26     	; 0x99c <__stack+0x13d>
     982:	68 c0       	rjmp	.+208    	; 0xa54 <__stack+0x1f5>
     984:	6c 81       	ldd	r22, Y+4	; 0x04
     986:	7d 81       	ldd	r23, Y+5	; 0x05
     988:	62 30       	cpi	r22, 0x02	; 2
     98a:	71 05       	cpc	r23, r1
     98c:	a9 f1       	breq	.+106    	; 0x9f8 <__stack+0x199>
     98e:	8c 81       	ldd	r24, Y+4	; 0x04
     990:	9d 81       	ldd	r25, Y+5	; 0x05
     992:	83 30       	cpi	r24, 0x03	; 3
     994:	91 05       	cpc	r25, r1
     996:	09 f4       	brne	.+2      	; 0x99a <__stack+0x13b>
     998:	46 c0       	rjmp	.+140    	; 0xa26 <__stack+0x1c7>
     99a:	5c c0       	rjmp	.+184    	; 0xa54 <__stack+0x1f5>
            {
            case PORTA:

                DDRA_Ptr = DDRA_Ptr & ~(PintDirectionValue << PinId);
     99c:	aa e3       	ldi	r26, 0x3A	; 58
     99e:	b0 e0       	ldi	r27, 0x00	; 0
     9a0:	ea e3       	ldi	r30, 0x3A	; 58
     9a2:	f0 e0       	ldi	r31, 0x00	; 0
     9a4:	80 81       	ld	r24, Z
     9a6:	48 2f       	mov	r20, r24
     9a8:	8b 81       	ldd	r24, Y+3	; 0x03
     9aa:	28 2f       	mov	r18, r24
     9ac:	30 e0       	ldi	r19, 0x00	; 0
     9ae:	8a 81       	ldd	r24, Y+2	; 0x02
     9b0:	88 2f       	mov	r24, r24
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	b9 01       	movw	r22, r18
     9b6:	02 c0       	rjmp	.+4      	; 0x9bc <__stack+0x15d>
     9b8:	66 0f       	add	r22, r22
     9ba:	77 1f       	adc	r23, r23
     9bc:	8a 95       	dec	r24
     9be:	e2 f7       	brpl	.-8      	; 0x9b8 <__stack+0x159>
     9c0:	cb 01       	movw	r24, r22
     9c2:	80 95       	com	r24
     9c4:	84 23       	and	r24, r20
     9c6:	8c 93       	st	X, r24
     9c8:	72 c0       	rjmp	.+228    	; 0xaae <__stack+0x24f>
                break;
            case PORTB:
                DDRB_Ptr = DDRB_Ptr & ~(PintDirectionValue << PinId);
     9ca:	a7 e3       	ldi	r26, 0x37	; 55
     9cc:	b0 e0       	ldi	r27, 0x00	; 0
     9ce:	e7 e3       	ldi	r30, 0x37	; 55
     9d0:	f0 e0       	ldi	r31, 0x00	; 0
     9d2:	80 81       	ld	r24, Z
     9d4:	48 2f       	mov	r20, r24
     9d6:	8b 81       	ldd	r24, Y+3	; 0x03
     9d8:	28 2f       	mov	r18, r24
     9da:	30 e0       	ldi	r19, 0x00	; 0
     9dc:	8a 81       	ldd	r24, Y+2	; 0x02
     9de:	88 2f       	mov	r24, r24
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	b9 01       	movw	r22, r18
     9e4:	02 c0       	rjmp	.+4      	; 0x9ea <__stack+0x18b>
     9e6:	66 0f       	add	r22, r22
     9e8:	77 1f       	adc	r23, r23
     9ea:	8a 95       	dec	r24
     9ec:	e2 f7       	brpl	.-8      	; 0x9e6 <__stack+0x187>
     9ee:	cb 01       	movw	r24, r22
     9f0:	80 95       	com	r24
     9f2:	84 23       	and	r24, r20
     9f4:	8c 93       	st	X, r24
     9f6:	5b c0       	rjmp	.+182    	; 0xaae <__stack+0x24f>
                break;
            case PORTC:
                DDRC_Ptr = DDRC_Ptr & ~(PintDirectionValue << PinId);
     9f8:	a4 e3       	ldi	r26, 0x34	; 52
     9fa:	b0 e0       	ldi	r27, 0x00	; 0
     9fc:	e4 e3       	ldi	r30, 0x34	; 52
     9fe:	f0 e0       	ldi	r31, 0x00	; 0
     a00:	80 81       	ld	r24, Z
     a02:	48 2f       	mov	r20, r24
     a04:	8b 81       	ldd	r24, Y+3	; 0x03
     a06:	28 2f       	mov	r18, r24
     a08:	30 e0       	ldi	r19, 0x00	; 0
     a0a:	8a 81       	ldd	r24, Y+2	; 0x02
     a0c:	88 2f       	mov	r24, r24
     a0e:	90 e0       	ldi	r25, 0x00	; 0
     a10:	b9 01       	movw	r22, r18
     a12:	02 c0       	rjmp	.+4      	; 0xa18 <__stack+0x1b9>
     a14:	66 0f       	add	r22, r22
     a16:	77 1f       	adc	r23, r23
     a18:	8a 95       	dec	r24
     a1a:	e2 f7       	brpl	.-8      	; 0xa14 <__stack+0x1b5>
     a1c:	cb 01       	movw	r24, r22
     a1e:	80 95       	com	r24
     a20:	84 23       	and	r24, r20
     a22:	8c 93       	st	X, r24
     a24:	44 c0       	rjmp	.+136    	; 0xaae <__stack+0x24f>
                break;
            case PORTD:
                DDRD_Ptr = DDRD_Ptr & ~(PintDirectionValue << PinId);
     a26:	a1 e3       	ldi	r26, 0x31	; 49
     a28:	b0 e0       	ldi	r27, 0x00	; 0
     a2a:	e1 e3       	ldi	r30, 0x31	; 49
     a2c:	f0 e0       	ldi	r31, 0x00	; 0
     a2e:	80 81       	ld	r24, Z
     a30:	48 2f       	mov	r20, r24
     a32:	8b 81       	ldd	r24, Y+3	; 0x03
     a34:	28 2f       	mov	r18, r24
     a36:	30 e0       	ldi	r19, 0x00	; 0
     a38:	8a 81       	ldd	r24, Y+2	; 0x02
     a3a:	88 2f       	mov	r24, r24
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	b9 01       	movw	r22, r18
     a40:	02 c0       	rjmp	.+4      	; 0xa46 <__stack+0x1e7>
     a42:	66 0f       	add	r22, r22
     a44:	77 1f       	adc	r23, r23
     a46:	8a 95       	dec	r24
     a48:	e2 f7       	brpl	.-8      	; 0xa42 <__stack+0x1e3>
     a4a:	cb 01       	movw	r24, r22
     a4c:	80 95       	com	r24
     a4e:	84 23       	and	r24, r20
     a50:	8c 93       	st	X, r24
     a52:	2d c0       	rjmp	.+90     	; 0xaae <__stack+0x24f>
                break;
            default:
                DDRA_Ptr |= (0x00);
     a54:	aa e3       	ldi	r26, 0x3A	; 58
     a56:	b0 e0       	ldi	r27, 0x00	; 0
     a58:	ea e3       	ldi	r30, 0x3A	; 58
     a5a:	f0 e0       	ldi	r31, 0x00	; 0
     a5c:	80 81       	ld	r24, Z
     a5e:	8c 93       	st	X, r24
                DDRB_Ptr |= (0x00);
     a60:	a7 e3       	ldi	r26, 0x37	; 55
     a62:	b0 e0       	ldi	r27, 0x00	; 0
     a64:	e7 e3       	ldi	r30, 0x37	; 55
     a66:	f0 e0       	ldi	r31, 0x00	; 0
     a68:	80 81       	ld	r24, Z
     a6a:	8c 93       	st	X, r24
                DDRC_Ptr |= (0x00);
     a6c:	a4 e3       	ldi	r26, 0x34	; 52
     a6e:	b0 e0       	ldi	r27, 0x00	; 0
     a70:	e4 e3       	ldi	r30, 0x34	; 52
     a72:	f0 e0       	ldi	r31, 0x00	; 0
     a74:	80 81       	ld	r24, Z
     a76:	8c 93       	st	X, r24
                DDRD_Ptr |= (0x00);
     a78:	a1 e3       	ldi	r26, 0x31	; 49
     a7a:	b0 e0       	ldi	r27, 0x00	; 0
     a7c:	e1 e3       	ldi	r30, 0x31	; 49
     a7e:	f0 e0       	ldi	r31, 0x00	; 0
     a80:	80 81       	ld	r24, Z
     a82:	8c 93       	st	X, r24
     a84:	14 c0       	rjmp	.+40     	; 0xaae <__stack+0x24f>
                break;
            }
        }
        else
        {
            printf("can not assign 0%x to the pin", PintDirectionValue);
     a86:	8b 81       	ldd	r24, Y+3	; 0x03
     a88:	28 2f       	mov	r18, r24
     a8a:	30 e0       	ldi	r19, 0x00	; 0
     a8c:	00 d0       	rcall	.+0      	; 0xa8e <__stack+0x22f>
     a8e:	00 d0       	rcall	.+0      	; 0xa90 <__stack+0x231>
     a90:	ed b7       	in	r30, 0x3d	; 61
     a92:	fe b7       	in	r31, 0x3e	; 62
     a94:	31 96       	adiw	r30, 0x01	; 1
     a96:	8b ec       	ldi	r24, 0xCB	; 203
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	91 83       	std	Z+1, r25	; 0x01
     a9c:	80 83       	st	Z, r24
     a9e:	33 83       	std	Z+3, r19	; 0x03
     aa0:	22 83       	std	Z+2, r18	; 0x02
     aa2:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     aa6:	0f 90       	pop	r0
     aa8:	0f 90       	pop	r0
     aaa:	0f 90       	pop	r0
     aac:	0f 90       	pop	r0
        }
    }
}
     aae:	27 96       	adiw	r28, 0x07	; 7
     ab0:	0f b6       	in	r0, 0x3f	; 63
     ab2:	f8 94       	cli
     ab4:	de bf       	out	0x3e, r29	; 62
     ab6:	0f be       	out	0x3f, r0	; 63
     ab8:	cd bf       	out	0x3d, r28	; 61
     aba:	cf 91       	pop	r28
     abc:	df 91       	pop	r29
     abe:	08 95       	ret

00000ac0 <GPIO_getPortValue>:

u8 GPIO_getPortValue(u8 portId)
{
     ac0:	df 93       	push	r29
     ac2:	cf 93       	push	r28
     ac4:	00 d0       	rcall	.+0      	; 0xac6 <GPIO_getPortValue+0x6>
     ac6:	00 d0       	rcall	.+0      	; 0xac8 <GPIO_getPortValue+0x8>
     ac8:	cd b7       	in	r28, 0x3d	; 61
     aca:	de b7       	in	r29, 0x3e	; 62
     acc:	8a 83       	std	Y+2, r24	; 0x02
    u8 portValue = NULL;
     ace:	19 82       	std	Y+1, r1	; 0x01
    if ((PORTA != portId) && (PORTB != portId) && (PORTC != portId) && (PORTD != portId))
     ad0:	8a 81       	ldd	r24, Y+2	; 0x02
     ad2:	88 23       	and	r24, r24
     ad4:	b1 f0       	breq	.+44     	; 0xb02 <GPIO_getPortValue+0x42>
     ad6:	8a 81       	ldd	r24, Y+2	; 0x02
     ad8:	81 30       	cpi	r24, 0x01	; 1
     ada:	99 f0       	breq	.+38     	; 0xb02 <GPIO_getPortValue+0x42>
     adc:	8a 81       	ldd	r24, Y+2	; 0x02
     ade:	82 30       	cpi	r24, 0x02	; 2
     ae0:	81 f0       	breq	.+32     	; 0xb02 <GPIO_getPortValue+0x42>
     ae2:	8a 81       	ldd	r24, Y+2	; 0x02
     ae4:	83 30       	cpi	r24, 0x03	; 3
     ae6:	69 f0       	breq	.+26     	; 0xb02 <GPIO_getPortValue+0x42>
    {
        printf("WRONG ID!");
     ae8:	00 d0       	rcall	.+0      	; 0xaea <GPIO_getPortValue+0x2a>
     aea:	ed b7       	in	r30, 0x3d	; 61
     aec:	fe b7       	in	r31, 0x3e	; 62
     aee:	31 96       	adiw	r30, 0x01	; 1
     af0:	80 e6       	ldi	r24, 0x60	; 96
     af2:	90 e0       	ldi	r25, 0x00	; 0
     af4:	91 83       	std	Z+1, r25	; 0x01
     af6:	80 83       	st	Z, r24
     af8:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     afc:	0f 90       	pop	r0
     afe:	0f 90       	pop	r0
     b00:	32 c0       	rjmp	.+100    	; 0xb66 <GPIO_getPortValue+0xa6>
    }
    else
    {
        switch (portId)
     b02:	8a 81       	ldd	r24, Y+2	; 0x02
     b04:	28 2f       	mov	r18, r24
     b06:	30 e0       	ldi	r19, 0x00	; 0
     b08:	3c 83       	std	Y+4, r19	; 0x04
     b0a:	2b 83       	std	Y+3, r18	; 0x03
     b0c:	8b 81       	ldd	r24, Y+3	; 0x03
     b0e:	9c 81       	ldd	r25, Y+4	; 0x04
     b10:	81 30       	cpi	r24, 0x01	; 1
     b12:	91 05       	cpc	r25, r1
     b14:	d1 f0       	breq	.+52     	; 0xb4a <GPIO_getPortValue+0x8a>
     b16:	2b 81       	ldd	r18, Y+3	; 0x03
     b18:	3c 81       	ldd	r19, Y+4	; 0x04
     b1a:	22 30       	cpi	r18, 0x02	; 2
     b1c:	31 05       	cpc	r19, r1
     b1e:	2c f4       	brge	.+10     	; 0xb2a <GPIO_getPortValue+0x6a>
     b20:	8b 81       	ldd	r24, Y+3	; 0x03
     b22:	9c 81       	ldd	r25, Y+4	; 0x04
     b24:	00 97       	sbiw	r24, 0x00	; 0
     b26:	61 f0       	breq	.+24     	; 0xb40 <GPIO_getPortValue+0x80>
     b28:	1e c0       	rjmp	.+60     	; 0xb66 <GPIO_getPortValue+0xa6>
     b2a:	2b 81       	ldd	r18, Y+3	; 0x03
     b2c:	3c 81       	ldd	r19, Y+4	; 0x04
     b2e:	22 30       	cpi	r18, 0x02	; 2
     b30:	31 05       	cpc	r19, r1
     b32:	81 f0       	breq	.+32     	; 0xb54 <GPIO_getPortValue+0x94>
     b34:	8b 81       	ldd	r24, Y+3	; 0x03
     b36:	9c 81       	ldd	r25, Y+4	; 0x04
     b38:	83 30       	cpi	r24, 0x03	; 3
     b3a:	91 05       	cpc	r25, r1
     b3c:	81 f0       	breq	.+32     	; 0xb5e <GPIO_getPortValue+0x9e>
     b3e:	13 c0       	rjmp	.+38     	; 0xb66 <GPIO_getPortValue+0xa6>
        {
        case PORTA:
            portValue = PINA_Ptr;
     b40:	e9 e3       	ldi	r30, 0x39	; 57
     b42:	f0 e0       	ldi	r31, 0x00	; 0
     b44:	80 81       	ld	r24, Z
     b46:	89 83       	std	Y+1, r24	; 0x01
     b48:	0e c0       	rjmp	.+28     	; 0xb66 <GPIO_getPortValue+0xa6>
            break;
        case PORTB:
            portValue = PINB_Ptr;
     b4a:	e6 e3       	ldi	r30, 0x36	; 54
     b4c:	f0 e0       	ldi	r31, 0x00	; 0
     b4e:	80 81       	ld	r24, Z
     b50:	89 83       	std	Y+1, r24	; 0x01
     b52:	09 c0       	rjmp	.+18     	; 0xb66 <GPIO_getPortValue+0xa6>
            break;
        case PORTC:
            portValue = PINC_Ptr;
     b54:	e3 e3       	ldi	r30, 0x33	; 51
     b56:	f0 e0       	ldi	r31, 0x00	; 0
     b58:	80 81       	ld	r24, Z
     b5a:	89 83       	std	Y+1, r24	; 0x01
     b5c:	04 c0       	rjmp	.+8      	; 0xb66 <GPIO_getPortValue+0xa6>
            break;
        case PORTD:
            portValue = PIND_Ptr;
     b5e:	e0 e3       	ldi	r30, 0x30	; 48
     b60:	f0 e0       	ldi	r31, 0x00	; 0
     b62:	80 81       	ld	r24, Z
     b64:	89 83       	std	Y+1, r24	; 0x01
        default:
            break;
        }
    }
    
    return portValue;
     b66:	89 81       	ldd	r24, Y+1	; 0x01
}
     b68:	0f 90       	pop	r0
     b6a:	0f 90       	pop	r0
     b6c:	0f 90       	pop	r0
     b6e:	0f 90       	pop	r0
     b70:	cf 91       	pop	r28
     b72:	df 91       	pop	r29
     b74:	08 95       	ret

00000b76 <GPIO_PinValue>:

u8 GPIO_PinValue(u8 portId, u8 PinId)
{
     b76:	df 93       	push	r29
     b78:	cf 93       	push	r28
     b7a:	00 d0       	rcall	.+0      	; 0xb7c <GPIO_PinValue+0x6>
     b7c:	00 d0       	rcall	.+0      	; 0xb7e <GPIO_PinValue+0x8>
     b7e:	0f 92       	push	r0
     b80:	cd b7       	in	r28, 0x3d	; 61
     b82:	de b7       	in	r29, 0x3e	; 62
     b84:	8a 83       	std	Y+2, r24	; 0x02
     b86:	6b 83       	std	Y+3, r22	; 0x03
    //1 
    u8 PinValue = NULL;
     b88:	19 82       	std	Y+1, r1	; 0x01
    if ((PORTA != portId) && (PORTB != portId) && (PORTC != portId) && (PORTD != portId))
     b8a:	8a 81       	ldd	r24, Y+2	; 0x02
     b8c:	88 23       	and	r24, r24
     b8e:	b1 f0       	breq	.+44     	; 0xbbc <GPIO_PinValue+0x46>
     b90:	8a 81       	ldd	r24, Y+2	; 0x02
     b92:	81 30       	cpi	r24, 0x01	; 1
     b94:	99 f0       	breq	.+38     	; 0xbbc <GPIO_PinValue+0x46>
     b96:	8a 81       	ldd	r24, Y+2	; 0x02
     b98:	82 30       	cpi	r24, 0x02	; 2
     b9a:	81 f0       	breq	.+32     	; 0xbbc <GPIO_PinValue+0x46>
     b9c:	8a 81       	ldd	r24, Y+2	; 0x02
     b9e:	83 30       	cpi	r24, 0x03	; 3
     ba0:	69 f0       	breq	.+26     	; 0xbbc <GPIO_PinValue+0x46>
    {
        printf("WRONG ID!");
     ba2:	00 d0       	rcall	.+0      	; 0xba4 <GPIO_PinValue+0x2e>
     ba4:	ed b7       	in	r30, 0x3d	; 61
     ba6:	fe b7       	in	r31, 0x3e	; 62
     ba8:	31 96       	adiw	r30, 0x01	; 1
     baa:	80 e6       	ldi	r24, 0x60	; 96
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	91 83       	std	Z+1, r25	; 0x01
     bb0:	80 83       	st	Z, r24
     bb2:	0e 94 54 06 	call	0xca8	; 0xca8 <printf>
     bb6:	0f 90       	pop	r0
     bb8:	0f 90       	pop	r0
     bba:	67 c0       	rjmp	.+206    	; 0xc8a <GPIO_PinValue+0x114>
    }
    else
    {
        switch (portId)
     bbc:	8a 81       	ldd	r24, Y+2	; 0x02
     bbe:	28 2f       	mov	r18, r24
     bc0:	30 e0       	ldi	r19, 0x00	; 0
     bc2:	3d 83       	std	Y+5, r19	; 0x05
     bc4:	2c 83       	std	Y+4, r18	; 0x04
     bc6:	4c 81       	ldd	r20, Y+4	; 0x04
     bc8:	5d 81       	ldd	r21, Y+5	; 0x05
     bca:	41 30       	cpi	r20, 0x01	; 1
     bcc:	51 05       	cpc	r21, r1
     bce:	41 f1       	breq	.+80     	; 0xc20 <GPIO_PinValue+0xaa>
     bd0:	8c 81       	ldd	r24, Y+4	; 0x04
     bd2:	9d 81       	ldd	r25, Y+5	; 0x05
     bd4:	82 30       	cpi	r24, 0x02	; 2
     bd6:	91 05       	cpc	r25, r1
     bd8:	34 f4       	brge	.+12     	; 0xbe6 <GPIO_PinValue+0x70>
     bda:	2c 81       	ldd	r18, Y+4	; 0x04
     bdc:	3d 81       	ldd	r19, Y+5	; 0x05
     bde:	21 15       	cp	r18, r1
     be0:	31 05       	cpc	r19, r1
     be2:	61 f0       	breq	.+24     	; 0xbfc <GPIO_PinValue+0x86>
     be4:	52 c0       	rjmp	.+164    	; 0xc8a <GPIO_PinValue+0x114>
     be6:	4c 81       	ldd	r20, Y+4	; 0x04
     be8:	5d 81       	ldd	r21, Y+5	; 0x05
     bea:	42 30       	cpi	r20, 0x02	; 2
     bec:	51 05       	cpc	r21, r1
     bee:	51 f1       	breq	.+84     	; 0xc44 <GPIO_PinValue+0xce>
     bf0:	8c 81       	ldd	r24, Y+4	; 0x04
     bf2:	9d 81       	ldd	r25, Y+5	; 0x05
     bf4:	83 30       	cpi	r24, 0x03	; 3
     bf6:	91 05       	cpc	r25, r1
     bf8:	b9 f1       	breq	.+110    	; 0xc68 <GPIO_PinValue+0xf2>
     bfa:	47 c0       	rjmp	.+142    	; 0xc8a <GPIO_PinValue+0x114>
        {
        case PORTA:
            PinValue = (PINA_Ptr>>PinId) &1;
     bfc:	e9 e3       	ldi	r30, 0x39	; 57
     bfe:	f0 e0       	ldi	r31, 0x00	; 0
     c00:	80 81       	ld	r24, Z
     c02:	28 2f       	mov	r18, r24
     c04:	30 e0       	ldi	r19, 0x00	; 0
     c06:	8b 81       	ldd	r24, Y+3	; 0x03
     c08:	88 2f       	mov	r24, r24
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	a9 01       	movw	r20, r18
     c0e:	02 c0       	rjmp	.+4      	; 0xc14 <GPIO_PinValue+0x9e>
     c10:	55 95       	asr	r21
     c12:	47 95       	ror	r20
     c14:	8a 95       	dec	r24
     c16:	e2 f7       	brpl	.-8      	; 0xc10 <GPIO_PinValue+0x9a>
     c18:	ca 01       	movw	r24, r20
     c1a:	81 70       	andi	r24, 0x01	; 1
     c1c:	89 83       	std	Y+1, r24	; 0x01
     c1e:	35 c0       	rjmp	.+106    	; 0xc8a <GPIO_PinValue+0x114>
            break;
        case PORTB:
            PinValue = (PINB_Ptr>>PinId) &1;
     c20:	e6 e3       	ldi	r30, 0x36	; 54
     c22:	f0 e0       	ldi	r31, 0x00	; 0
     c24:	80 81       	ld	r24, Z
     c26:	28 2f       	mov	r18, r24
     c28:	30 e0       	ldi	r19, 0x00	; 0
     c2a:	8b 81       	ldd	r24, Y+3	; 0x03
     c2c:	88 2f       	mov	r24, r24
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	a9 01       	movw	r20, r18
     c32:	02 c0       	rjmp	.+4      	; 0xc38 <GPIO_PinValue+0xc2>
     c34:	55 95       	asr	r21
     c36:	47 95       	ror	r20
     c38:	8a 95       	dec	r24
     c3a:	e2 f7       	brpl	.-8      	; 0xc34 <GPIO_PinValue+0xbe>
     c3c:	ca 01       	movw	r24, r20
     c3e:	81 70       	andi	r24, 0x01	; 1
     c40:	89 83       	std	Y+1, r24	; 0x01
     c42:	23 c0       	rjmp	.+70     	; 0xc8a <GPIO_PinValue+0x114>
            break;
        case PORTC:
            PinValue = (PINC_Ptr>>PinId) &1;
     c44:	e3 e3       	ldi	r30, 0x33	; 51
     c46:	f0 e0       	ldi	r31, 0x00	; 0
     c48:	80 81       	ld	r24, Z
     c4a:	28 2f       	mov	r18, r24
     c4c:	30 e0       	ldi	r19, 0x00	; 0
     c4e:	8b 81       	ldd	r24, Y+3	; 0x03
     c50:	88 2f       	mov	r24, r24
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	a9 01       	movw	r20, r18
     c56:	02 c0       	rjmp	.+4      	; 0xc5c <GPIO_PinValue+0xe6>
     c58:	55 95       	asr	r21
     c5a:	47 95       	ror	r20
     c5c:	8a 95       	dec	r24
     c5e:	e2 f7       	brpl	.-8      	; 0xc58 <GPIO_PinValue+0xe2>
     c60:	ca 01       	movw	r24, r20
     c62:	81 70       	andi	r24, 0x01	; 1
     c64:	89 83       	std	Y+1, r24	; 0x01
     c66:	11 c0       	rjmp	.+34     	; 0xc8a <GPIO_PinValue+0x114>
            break;
        case PORTD:
            PinValue = (PIND_Ptr>>PinId) &1;
     c68:	e0 e3       	ldi	r30, 0x30	; 48
     c6a:	f0 e0       	ldi	r31, 0x00	; 0
     c6c:	80 81       	ld	r24, Z
     c6e:	28 2f       	mov	r18, r24
     c70:	30 e0       	ldi	r19, 0x00	; 0
     c72:	8b 81       	ldd	r24, Y+3	; 0x03
     c74:	88 2f       	mov	r24, r24
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	a9 01       	movw	r20, r18
     c7a:	02 c0       	rjmp	.+4      	; 0xc80 <GPIO_PinValue+0x10a>
     c7c:	55 95       	asr	r21
     c7e:	47 95       	ror	r20
     c80:	8a 95       	dec	r24
     c82:	e2 f7       	brpl	.-8      	; 0xc7c <GPIO_PinValue+0x106>
     c84:	ca 01       	movw	r24, r20
     c86:	81 70       	andi	r24, 0x01	; 1
     c88:	89 83       	std	Y+1, r24	; 0x01
            break;
        default:
            break;
        }
    }
    return PinValue;
     c8a:	89 81       	ldd	r24, Y+1	; 0x01
}
     c8c:	0f 90       	pop	r0
     c8e:	0f 90       	pop	r0
     c90:	0f 90       	pop	r0
     c92:	0f 90       	pop	r0
     c94:	0f 90       	pop	r0
     c96:	cf 91       	pop	r28
     c98:	df 91       	pop	r29
     c9a:	08 95       	ret

00000c9c <main>:
 *      Author: ahmedomar
 */
#include "../HAL/LED.h"

int main(void)
{
     c9c:	df 93       	push	r29
     c9e:	cf 93       	push	r28
     ca0:	00 d0       	rcall	.+0      	; 0xca2 <main+0x6>
     ca2:	cd b7       	in	r28, 0x3d	; 61
     ca4:	de b7       	in	r29, 0x3e	; 62
     ca6:	ff cf       	rjmp	.-2      	; 0xca6 <main+0xa>

00000ca8 <printf>:
     ca8:	a0 e0       	ldi	r26, 0x00	; 0
     caa:	b0 e0       	ldi	r27, 0x00	; 0
     cac:	ea e5       	ldi	r30, 0x5A	; 90
     cae:	f6 e0       	ldi	r31, 0x06	; 6
     cb0:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__prologue_saves__+0x20>
     cb4:	fe 01       	movw	r30, r28
     cb6:	35 96       	adiw	r30, 0x05	; 5
     cb8:	61 91       	ld	r22, Z+
     cba:	71 91       	ld	r23, Z+
     cbc:	80 91 20 01 	lds	r24, 0x0120
     cc0:	90 91 21 01 	lds	r25, 0x0121
     cc4:	af 01       	movw	r20, r30
     cc6:	0e 94 69 06 	call	0xcd2	; 0xcd2 <vfprintf>
     cca:	20 96       	adiw	r28, 0x00	; 0
     ccc:	e2 e0       	ldi	r30, 0x02	; 2
     cce:	0c 94 12 09 	jmp	0x1224	; 0x1224 <__epilogue_restores__+0x20>

00000cd2 <vfprintf>:
     cd2:	ab e0       	ldi	r26, 0x0B	; 11
     cd4:	b0 e0       	ldi	r27, 0x00	; 0
     cd6:	ef e6       	ldi	r30, 0x6F	; 111
     cd8:	f6 e0       	ldi	r31, 0x06	; 6
     cda:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <__prologue_saves__>
     cde:	3c 01       	movw	r6, r24
     ce0:	2b 01       	movw	r4, r22
     ce2:	5a 01       	movw	r10, r20
     ce4:	fc 01       	movw	r30, r24
     ce6:	17 82       	std	Z+7, r1	; 0x07
     ce8:	16 82       	std	Z+6, r1	; 0x06
     cea:	83 81       	ldd	r24, Z+3	; 0x03
     cec:	81 fd       	sbrc	r24, 1
     cee:	03 c0       	rjmp	.+6      	; 0xcf6 <vfprintf+0x24>
     cf0:	6f ef       	ldi	r22, 0xFF	; 255
     cf2:	7f ef       	ldi	r23, 0xFF	; 255
     cf4:	c6 c1       	rjmp	.+908    	; 0x1082 <vfprintf+0x3b0>
     cf6:	9a e0       	ldi	r25, 0x0A	; 10
     cf8:	89 2e       	mov	r8, r25
     cfa:	1e 01       	movw	r2, r28
     cfc:	08 94       	sec
     cfe:	21 1c       	adc	r2, r1
     d00:	31 1c       	adc	r3, r1
     d02:	f3 01       	movw	r30, r6
     d04:	23 81       	ldd	r18, Z+3	; 0x03
     d06:	f2 01       	movw	r30, r4
     d08:	23 fd       	sbrc	r18, 3
     d0a:	85 91       	lpm	r24, Z+
     d0c:	23 ff       	sbrs	r18, 3
     d0e:	81 91       	ld	r24, Z+
     d10:	2f 01       	movw	r4, r30
     d12:	88 23       	and	r24, r24
     d14:	09 f4       	brne	.+2      	; 0xd18 <vfprintf+0x46>
     d16:	b2 c1       	rjmp	.+868    	; 0x107c <vfprintf+0x3aa>
     d18:	85 32       	cpi	r24, 0x25	; 37
     d1a:	39 f4       	brne	.+14     	; 0xd2a <vfprintf+0x58>
     d1c:	23 fd       	sbrc	r18, 3
     d1e:	85 91       	lpm	r24, Z+
     d20:	23 ff       	sbrs	r18, 3
     d22:	81 91       	ld	r24, Z+
     d24:	2f 01       	movw	r4, r30
     d26:	85 32       	cpi	r24, 0x25	; 37
     d28:	29 f4       	brne	.+10     	; 0xd34 <vfprintf+0x62>
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	b3 01       	movw	r22, r6
     d2e:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <fputc>
     d32:	e7 cf       	rjmp	.-50     	; 0xd02 <vfprintf+0x30>
     d34:	98 2f       	mov	r25, r24
     d36:	ff 24       	eor	r15, r15
     d38:	ee 24       	eor	r14, r14
     d3a:	99 24       	eor	r9, r9
     d3c:	ff e1       	ldi	r31, 0x1F	; 31
     d3e:	ff 15       	cp	r31, r15
     d40:	d0 f0       	brcs	.+52     	; 0xd76 <vfprintf+0xa4>
     d42:	9b 32       	cpi	r25, 0x2B	; 43
     d44:	69 f0       	breq	.+26     	; 0xd60 <vfprintf+0x8e>
     d46:	9c 32       	cpi	r25, 0x2C	; 44
     d48:	28 f4       	brcc	.+10     	; 0xd54 <vfprintf+0x82>
     d4a:	90 32       	cpi	r25, 0x20	; 32
     d4c:	59 f0       	breq	.+22     	; 0xd64 <vfprintf+0x92>
     d4e:	93 32       	cpi	r25, 0x23	; 35
     d50:	91 f4       	brne	.+36     	; 0xd76 <vfprintf+0xa4>
     d52:	0e c0       	rjmp	.+28     	; 0xd70 <vfprintf+0x9e>
     d54:	9d 32       	cpi	r25, 0x2D	; 45
     d56:	49 f0       	breq	.+18     	; 0xd6a <vfprintf+0x98>
     d58:	90 33       	cpi	r25, 0x30	; 48
     d5a:	69 f4       	brne	.+26     	; 0xd76 <vfprintf+0xa4>
     d5c:	41 e0       	ldi	r20, 0x01	; 1
     d5e:	24 c0       	rjmp	.+72     	; 0xda8 <vfprintf+0xd6>
     d60:	52 e0       	ldi	r21, 0x02	; 2
     d62:	f5 2a       	or	r15, r21
     d64:	84 e0       	ldi	r24, 0x04	; 4
     d66:	f8 2a       	or	r15, r24
     d68:	28 c0       	rjmp	.+80     	; 0xdba <vfprintf+0xe8>
     d6a:	98 e0       	ldi	r25, 0x08	; 8
     d6c:	f9 2a       	or	r15, r25
     d6e:	25 c0       	rjmp	.+74     	; 0xdba <vfprintf+0xe8>
     d70:	e0 e1       	ldi	r30, 0x10	; 16
     d72:	fe 2a       	or	r15, r30
     d74:	22 c0       	rjmp	.+68     	; 0xdba <vfprintf+0xe8>
     d76:	f7 fc       	sbrc	r15, 7
     d78:	29 c0       	rjmp	.+82     	; 0xdcc <vfprintf+0xfa>
     d7a:	89 2f       	mov	r24, r25
     d7c:	80 53       	subi	r24, 0x30	; 48
     d7e:	8a 30       	cpi	r24, 0x0A	; 10
     d80:	70 f4       	brcc	.+28     	; 0xd9e <vfprintf+0xcc>
     d82:	f6 fe       	sbrs	r15, 6
     d84:	05 c0       	rjmp	.+10     	; 0xd90 <vfprintf+0xbe>
     d86:	98 9c       	mul	r9, r8
     d88:	90 2c       	mov	r9, r0
     d8a:	11 24       	eor	r1, r1
     d8c:	98 0e       	add	r9, r24
     d8e:	15 c0       	rjmp	.+42     	; 0xdba <vfprintf+0xe8>
     d90:	e8 9c       	mul	r14, r8
     d92:	e0 2c       	mov	r14, r0
     d94:	11 24       	eor	r1, r1
     d96:	e8 0e       	add	r14, r24
     d98:	f0 e2       	ldi	r31, 0x20	; 32
     d9a:	ff 2a       	or	r15, r31
     d9c:	0e c0       	rjmp	.+28     	; 0xdba <vfprintf+0xe8>
     d9e:	9e 32       	cpi	r25, 0x2E	; 46
     da0:	29 f4       	brne	.+10     	; 0xdac <vfprintf+0xda>
     da2:	f6 fc       	sbrc	r15, 6
     da4:	6b c1       	rjmp	.+726    	; 0x107c <vfprintf+0x3aa>
     da6:	40 e4       	ldi	r20, 0x40	; 64
     da8:	f4 2a       	or	r15, r20
     daa:	07 c0       	rjmp	.+14     	; 0xdba <vfprintf+0xe8>
     dac:	9c 36       	cpi	r25, 0x6C	; 108
     dae:	19 f4       	brne	.+6      	; 0xdb6 <vfprintf+0xe4>
     db0:	50 e8       	ldi	r21, 0x80	; 128
     db2:	f5 2a       	or	r15, r21
     db4:	02 c0       	rjmp	.+4      	; 0xdba <vfprintf+0xe8>
     db6:	98 36       	cpi	r25, 0x68	; 104
     db8:	49 f4       	brne	.+18     	; 0xdcc <vfprintf+0xfa>
     dba:	f2 01       	movw	r30, r4
     dbc:	23 fd       	sbrc	r18, 3
     dbe:	95 91       	lpm	r25, Z+
     dc0:	23 ff       	sbrs	r18, 3
     dc2:	91 91       	ld	r25, Z+
     dc4:	2f 01       	movw	r4, r30
     dc6:	99 23       	and	r25, r25
     dc8:	09 f0       	breq	.+2      	; 0xdcc <vfprintf+0xfa>
     dca:	b8 cf       	rjmp	.-144    	; 0xd3c <vfprintf+0x6a>
     dcc:	89 2f       	mov	r24, r25
     dce:	85 54       	subi	r24, 0x45	; 69
     dd0:	83 30       	cpi	r24, 0x03	; 3
     dd2:	18 f0       	brcs	.+6      	; 0xdda <vfprintf+0x108>
     dd4:	80 52       	subi	r24, 0x20	; 32
     dd6:	83 30       	cpi	r24, 0x03	; 3
     dd8:	38 f4       	brcc	.+14     	; 0xde8 <vfprintf+0x116>
     dda:	44 e0       	ldi	r20, 0x04	; 4
     ddc:	50 e0       	ldi	r21, 0x00	; 0
     dde:	a4 0e       	add	r10, r20
     de0:	b5 1e       	adc	r11, r21
     de2:	5f e3       	ldi	r21, 0x3F	; 63
     de4:	59 83       	std	Y+1, r21	; 0x01
     de6:	0f c0       	rjmp	.+30     	; 0xe06 <vfprintf+0x134>
     de8:	93 36       	cpi	r25, 0x63	; 99
     dea:	31 f0       	breq	.+12     	; 0xdf8 <vfprintf+0x126>
     dec:	93 37       	cpi	r25, 0x73	; 115
     dee:	79 f0       	breq	.+30     	; 0xe0e <vfprintf+0x13c>
     df0:	93 35       	cpi	r25, 0x53	; 83
     df2:	09 f0       	breq	.+2      	; 0xdf6 <vfprintf+0x124>
     df4:	56 c0       	rjmp	.+172    	; 0xea2 <vfprintf+0x1d0>
     df6:	20 c0       	rjmp	.+64     	; 0xe38 <vfprintf+0x166>
     df8:	f5 01       	movw	r30, r10
     dfa:	80 81       	ld	r24, Z
     dfc:	89 83       	std	Y+1, r24	; 0x01
     dfe:	42 e0       	ldi	r20, 0x02	; 2
     e00:	50 e0       	ldi	r21, 0x00	; 0
     e02:	a4 0e       	add	r10, r20
     e04:	b5 1e       	adc	r11, r21
     e06:	61 01       	movw	r12, r2
     e08:	01 e0       	ldi	r16, 0x01	; 1
     e0a:	10 e0       	ldi	r17, 0x00	; 0
     e0c:	12 c0       	rjmp	.+36     	; 0xe32 <vfprintf+0x160>
     e0e:	f5 01       	movw	r30, r10
     e10:	c0 80       	ld	r12, Z
     e12:	d1 80       	ldd	r13, Z+1	; 0x01
     e14:	f6 fc       	sbrc	r15, 6
     e16:	03 c0       	rjmp	.+6      	; 0xe1e <vfprintf+0x14c>
     e18:	6f ef       	ldi	r22, 0xFF	; 255
     e1a:	7f ef       	ldi	r23, 0xFF	; 255
     e1c:	02 c0       	rjmp	.+4      	; 0xe22 <vfprintf+0x150>
     e1e:	69 2d       	mov	r22, r9
     e20:	70 e0       	ldi	r23, 0x00	; 0
     e22:	42 e0       	ldi	r20, 0x02	; 2
     e24:	50 e0       	ldi	r21, 0x00	; 0
     e26:	a4 0e       	add	r10, r20
     e28:	b5 1e       	adc	r11, r21
     e2a:	c6 01       	movw	r24, r12
     e2c:	0e 94 51 08 	call	0x10a2	; 0x10a2 <strnlen>
     e30:	8c 01       	movw	r16, r24
     e32:	5f e7       	ldi	r21, 0x7F	; 127
     e34:	f5 22       	and	r15, r21
     e36:	14 c0       	rjmp	.+40     	; 0xe60 <vfprintf+0x18e>
     e38:	f5 01       	movw	r30, r10
     e3a:	c0 80       	ld	r12, Z
     e3c:	d1 80       	ldd	r13, Z+1	; 0x01
     e3e:	f6 fc       	sbrc	r15, 6
     e40:	03 c0       	rjmp	.+6      	; 0xe48 <vfprintf+0x176>
     e42:	6f ef       	ldi	r22, 0xFF	; 255
     e44:	7f ef       	ldi	r23, 0xFF	; 255
     e46:	02 c0       	rjmp	.+4      	; 0xe4c <vfprintf+0x17a>
     e48:	69 2d       	mov	r22, r9
     e4a:	70 e0       	ldi	r23, 0x00	; 0
     e4c:	42 e0       	ldi	r20, 0x02	; 2
     e4e:	50 e0       	ldi	r21, 0x00	; 0
     e50:	a4 0e       	add	r10, r20
     e52:	b5 1e       	adc	r11, r21
     e54:	c6 01       	movw	r24, r12
     e56:	0e 94 46 08 	call	0x108c	; 0x108c <strnlen_P>
     e5a:	8c 01       	movw	r16, r24
     e5c:	50 e8       	ldi	r21, 0x80	; 128
     e5e:	f5 2a       	or	r15, r21
     e60:	f3 fe       	sbrs	r15, 3
     e62:	07 c0       	rjmp	.+14     	; 0xe72 <vfprintf+0x1a0>
     e64:	1a c0       	rjmp	.+52     	; 0xe9a <vfprintf+0x1c8>
     e66:	80 e2       	ldi	r24, 0x20	; 32
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	b3 01       	movw	r22, r6
     e6c:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <fputc>
     e70:	ea 94       	dec	r14
     e72:	8e 2d       	mov	r24, r14
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	08 17       	cp	r16, r24
     e78:	19 07       	cpc	r17, r25
     e7a:	a8 f3       	brcs	.-22     	; 0xe66 <vfprintf+0x194>
     e7c:	0e c0       	rjmp	.+28     	; 0xe9a <vfprintf+0x1c8>
     e7e:	f6 01       	movw	r30, r12
     e80:	f7 fc       	sbrc	r15, 7
     e82:	85 91       	lpm	r24, Z+
     e84:	f7 fe       	sbrs	r15, 7
     e86:	81 91       	ld	r24, Z+
     e88:	6f 01       	movw	r12, r30
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	b3 01       	movw	r22, r6
     e8e:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <fputc>
     e92:	e1 10       	cpse	r14, r1
     e94:	ea 94       	dec	r14
     e96:	01 50       	subi	r16, 0x01	; 1
     e98:	10 40       	sbci	r17, 0x00	; 0
     e9a:	01 15       	cp	r16, r1
     e9c:	11 05       	cpc	r17, r1
     e9e:	79 f7       	brne	.-34     	; 0xe7e <vfprintf+0x1ac>
     ea0:	ea c0       	rjmp	.+468    	; 0x1076 <vfprintf+0x3a4>
     ea2:	94 36       	cpi	r25, 0x64	; 100
     ea4:	11 f0       	breq	.+4      	; 0xeaa <vfprintf+0x1d8>
     ea6:	99 36       	cpi	r25, 0x69	; 105
     ea8:	69 f5       	brne	.+90     	; 0xf04 <vfprintf+0x232>
     eaa:	f7 fe       	sbrs	r15, 7
     eac:	08 c0       	rjmp	.+16     	; 0xebe <vfprintf+0x1ec>
     eae:	f5 01       	movw	r30, r10
     eb0:	20 81       	ld	r18, Z
     eb2:	31 81       	ldd	r19, Z+1	; 0x01
     eb4:	42 81       	ldd	r20, Z+2	; 0x02
     eb6:	53 81       	ldd	r21, Z+3	; 0x03
     eb8:	84 e0       	ldi	r24, 0x04	; 4
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	0a c0       	rjmp	.+20     	; 0xed2 <vfprintf+0x200>
     ebe:	f5 01       	movw	r30, r10
     ec0:	80 81       	ld	r24, Z
     ec2:	91 81       	ldd	r25, Z+1	; 0x01
     ec4:	9c 01       	movw	r18, r24
     ec6:	44 27       	eor	r20, r20
     ec8:	37 fd       	sbrc	r19, 7
     eca:	40 95       	com	r20
     ecc:	54 2f       	mov	r21, r20
     ece:	82 e0       	ldi	r24, 0x02	; 2
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	a8 0e       	add	r10, r24
     ed4:	b9 1e       	adc	r11, r25
     ed6:	9f e6       	ldi	r25, 0x6F	; 111
     ed8:	f9 22       	and	r15, r25
     eda:	57 ff       	sbrs	r21, 7
     edc:	09 c0       	rjmp	.+18     	; 0xef0 <vfprintf+0x21e>
     ede:	50 95       	com	r21
     ee0:	40 95       	com	r20
     ee2:	30 95       	com	r19
     ee4:	21 95       	neg	r18
     ee6:	3f 4f       	sbci	r19, 0xFF	; 255
     ee8:	4f 4f       	sbci	r20, 0xFF	; 255
     eea:	5f 4f       	sbci	r21, 0xFF	; 255
     eec:	e0 e8       	ldi	r30, 0x80	; 128
     eee:	fe 2a       	or	r15, r30
     ef0:	ca 01       	movw	r24, r20
     ef2:	b9 01       	movw	r22, r18
     ef4:	a1 01       	movw	r20, r2
     ef6:	2a e0       	ldi	r18, 0x0A	; 10
     ef8:	30 e0       	ldi	r19, 0x00	; 0
     efa:	0e 94 88 08 	call	0x1110	; 0x1110 <__ultoa_invert>
     efe:	d8 2e       	mov	r13, r24
     f00:	d2 18       	sub	r13, r2
     f02:	40 c0       	rjmp	.+128    	; 0xf84 <vfprintf+0x2b2>
     f04:	95 37       	cpi	r25, 0x75	; 117
     f06:	29 f4       	brne	.+10     	; 0xf12 <vfprintf+0x240>
     f08:	1f 2d       	mov	r17, r15
     f0a:	1f 7e       	andi	r17, 0xEF	; 239
     f0c:	2a e0       	ldi	r18, 0x0A	; 10
     f0e:	30 e0       	ldi	r19, 0x00	; 0
     f10:	1d c0       	rjmp	.+58     	; 0xf4c <vfprintf+0x27a>
     f12:	1f 2d       	mov	r17, r15
     f14:	19 7f       	andi	r17, 0xF9	; 249
     f16:	9f 36       	cpi	r25, 0x6F	; 111
     f18:	61 f0       	breq	.+24     	; 0xf32 <vfprintf+0x260>
     f1a:	90 37       	cpi	r25, 0x70	; 112
     f1c:	20 f4       	brcc	.+8      	; 0xf26 <vfprintf+0x254>
     f1e:	98 35       	cpi	r25, 0x58	; 88
     f20:	09 f0       	breq	.+2      	; 0xf24 <vfprintf+0x252>
     f22:	ac c0       	rjmp	.+344    	; 0x107c <vfprintf+0x3aa>
     f24:	0f c0       	rjmp	.+30     	; 0xf44 <vfprintf+0x272>
     f26:	90 37       	cpi	r25, 0x70	; 112
     f28:	39 f0       	breq	.+14     	; 0xf38 <vfprintf+0x266>
     f2a:	98 37       	cpi	r25, 0x78	; 120
     f2c:	09 f0       	breq	.+2      	; 0xf30 <vfprintf+0x25e>
     f2e:	a6 c0       	rjmp	.+332    	; 0x107c <vfprintf+0x3aa>
     f30:	04 c0       	rjmp	.+8      	; 0xf3a <vfprintf+0x268>
     f32:	28 e0       	ldi	r18, 0x08	; 8
     f34:	30 e0       	ldi	r19, 0x00	; 0
     f36:	0a c0       	rjmp	.+20     	; 0xf4c <vfprintf+0x27a>
     f38:	10 61       	ori	r17, 0x10	; 16
     f3a:	14 fd       	sbrc	r17, 4
     f3c:	14 60       	ori	r17, 0x04	; 4
     f3e:	20 e1       	ldi	r18, 0x10	; 16
     f40:	30 e0       	ldi	r19, 0x00	; 0
     f42:	04 c0       	rjmp	.+8      	; 0xf4c <vfprintf+0x27a>
     f44:	14 fd       	sbrc	r17, 4
     f46:	16 60       	ori	r17, 0x06	; 6
     f48:	20 e1       	ldi	r18, 0x10	; 16
     f4a:	32 e0       	ldi	r19, 0x02	; 2
     f4c:	17 ff       	sbrs	r17, 7
     f4e:	08 c0       	rjmp	.+16     	; 0xf60 <vfprintf+0x28e>
     f50:	f5 01       	movw	r30, r10
     f52:	60 81       	ld	r22, Z
     f54:	71 81       	ldd	r23, Z+1	; 0x01
     f56:	82 81       	ldd	r24, Z+2	; 0x02
     f58:	93 81       	ldd	r25, Z+3	; 0x03
     f5a:	44 e0       	ldi	r20, 0x04	; 4
     f5c:	50 e0       	ldi	r21, 0x00	; 0
     f5e:	08 c0       	rjmp	.+16     	; 0xf70 <vfprintf+0x29e>
     f60:	f5 01       	movw	r30, r10
     f62:	80 81       	ld	r24, Z
     f64:	91 81       	ldd	r25, Z+1	; 0x01
     f66:	bc 01       	movw	r22, r24
     f68:	80 e0       	ldi	r24, 0x00	; 0
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	42 e0       	ldi	r20, 0x02	; 2
     f6e:	50 e0       	ldi	r21, 0x00	; 0
     f70:	a4 0e       	add	r10, r20
     f72:	b5 1e       	adc	r11, r21
     f74:	a1 01       	movw	r20, r2
     f76:	0e 94 88 08 	call	0x1110	; 0x1110 <__ultoa_invert>
     f7a:	d8 2e       	mov	r13, r24
     f7c:	d2 18       	sub	r13, r2
     f7e:	8f e7       	ldi	r24, 0x7F	; 127
     f80:	f8 2e       	mov	r15, r24
     f82:	f1 22       	and	r15, r17
     f84:	f6 fe       	sbrs	r15, 6
     f86:	0b c0       	rjmp	.+22     	; 0xf9e <vfprintf+0x2cc>
     f88:	5e ef       	ldi	r21, 0xFE	; 254
     f8a:	f5 22       	and	r15, r21
     f8c:	d9 14       	cp	r13, r9
     f8e:	38 f4       	brcc	.+14     	; 0xf9e <vfprintf+0x2cc>
     f90:	f4 fe       	sbrs	r15, 4
     f92:	07 c0       	rjmp	.+14     	; 0xfa2 <vfprintf+0x2d0>
     f94:	f2 fc       	sbrc	r15, 2
     f96:	05 c0       	rjmp	.+10     	; 0xfa2 <vfprintf+0x2d0>
     f98:	8f ee       	ldi	r24, 0xEF	; 239
     f9a:	f8 22       	and	r15, r24
     f9c:	02 c0       	rjmp	.+4      	; 0xfa2 <vfprintf+0x2d0>
     f9e:	1d 2d       	mov	r17, r13
     fa0:	01 c0       	rjmp	.+2      	; 0xfa4 <vfprintf+0x2d2>
     fa2:	19 2d       	mov	r17, r9
     fa4:	f4 fe       	sbrs	r15, 4
     fa6:	0d c0       	rjmp	.+26     	; 0xfc2 <vfprintf+0x2f0>
     fa8:	fe 01       	movw	r30, r28
     faa:	ed 0d       	add	r30, r13
     fac:	f1 1d       	adc	r31, r1
     fae:	80 81       	ld	r24, Z
     fb0:	80 33       	cpi	r24, 0x30	; 48
     fb2:	19 f4       	brne	.+6      	; 0xfba <vfprintf+0x2e8>
     fb4:	99 ee       	ldi	r25, 0xE9	; 233
     fb6:	f9 22       	and	r15, r25
     fb8:	08 c0       	rjmp	.+16     	; 0xfca <vfprintf+0x2f8>
     fba:	1f 5f       	subi	r17, 0xFF	; 255
     fbc:	f2 fe       	sbrs	r15, 2
     fbe:	05 c0       	rjmp	.+10     	; 0xfca <vfprintf+0x2f8>
     fc0:	03 c0       	rjmp	.+6      	; 0xfc8 <vfprintf+0x2f6>
     fc2:	8f 2d       	mov	r24, r15
     fc4:	86 78       	andi	r24, 0x86	; 134
     fc6:	09 f0       	breq	.+2      	; 0xfca <vfprintf+0x2f8>
     fc8:	1f 5f       	subi	r17, 0xFF	; 255
     fca:	0f 2d       	mov	r16, r15
     fcc:	f3 fc       	sbrc	r15, 3
     fce:	14 c0       	rjmp	.+40     	; 0xff8 <vfprintf+0x326>
     fd0:	f0 fe       	sbrs	r15, 0
     fd2:	0f c0       	rjmp	.+30     	; 0xff2 <vfprintf+0x320>
     fd4:	1e 15       	cp	r17, r14
     fd6:	10 f0       	brcs	.+4      	; 0xfdc <vfprintf+0x30a>
     fd8:	9d 2c       	mov	r9, r13
     fda:	0b c0       	rjmp	.+22     	; 0xff2 <vfprintf+0x320>
     fdc:	9d 2c       	mov	r9, r13
     fde:	9e 0c       	add	r9, r14
     fe0:	91 1a       	sub	r9, r17
     fe2:	1e 2d       	mov	r17, r14
     fe4:	06 c0       	rjmp	.+12     	; 0xff2 <vfprintf+0x320>
     fe6:	80 e2       	ldi	r24, 0x20	; 32
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	b3 01       	movw	r22, r6
     fec:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <fputc>
     ff0:	1f 5f       	subi	r17, 0xFF	; 255
     ff2:	1e 15       	cp	r17, r14
     ff4:	c0 f3       	brcs	.-16     	; 0xfe6 <vfprintf+0x314>
     ff6:	04 c0       	rjmp	.+8      	; 0x1000 <vfprintf+0x32e>
     ff8:	1e 15       	cp	r17, r14
     ffa:	10 f4       	brcc	.+4      	; 0x1000 <vfprintf+0x32e>
     ffc:	e1 1a       	sub	r14, r17
     ffe:	01 c0       	rjmp	.+2      	; 0x1002 <vfprintf+0x330>
    1000:	ee 24       	eor	r14, r14
    1002:	04 ff       	sbrs	r16, 4
    1004:	0f c0       	rjmp	.+30     	; 0x1024 <vfprintf+0x352>
    1006:	80 e3       	ldi	r24, 0x30	; 48
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	b3 01       	movw	r22, r6
    100c:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <fputc>
    1010:	02 ff       	sbrs	r16, 2
    1012:	1d c0       	rjmp	.+58     	; 0x104e <vfprintf+0x37c>
    1014:	01 fd       	sbrc	r16, 1
    1016:	03 c0       	rjmp	.+6      	; 0x101e <vfprintf+0x34c>
    1018:	88 e7       	ldi	r24, 0x78	; 120
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	0e c0       	rjmp	.+28     	; 0x103a <vfprintf+0x368>
    101e:	88 e5       	ldi	r24, 0x58	; 88
    1020:	90 e0       	ldi	r25, 0x00	; 0
    1022:	0b c0       	rjmp	.+22     	; 0x103a <vfprintf+0x368>
    1024:	80 2f       	mov	r24, r16
    1026:	86 78       	andi	r24, 0x86	; 134
    1028:	91 f0       	breq	.+36     	; 0x104e <vfprintf+0x37c>
    102a:	01 ff       	sbrs	r16, 1
    102c:	02 c0       	rjmp	.+4      	; 0x1032 <vfprintf+0x360>
    102e:	8b e2       	ldi	r24, 0x2B	; 43
    1030:	01 c0       	rjmp	.+2      	; 0x1034 <vfprintf+0x362>
    1032:	80 e2       	ldi	r24, 0x20	; 32
    1034:	f7 fc       	sbrc	r15, 7
    1036:	8d e2       	ldi	r24, 0x2D	; 45
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	b3 01       	movw	r22, r6
    103c:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <fputc>
    1040:	06 c0       	rjmp	.+12     	; 0x104e <vfprintf+0x37c>
    1042:	80 e3       	ldi	r24, 0x30	; 48
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	b3 01       	movw	r22, r6
    1048:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <fputc>
    104c:	9a 94       	dec	r9
    104e:	d9 14       	cp	r13, r9
    1050:	c0 f3       	brcs	.-16     	; 0x1042 <vfprintf+0x370>
    1052:	da 94       	dec	r13
    1054:	f1 01       	movw	r30, r2
    1056:	ed 0d       	add	r30, r13
    1058:	f1 1d       	adc	r31, r1
    105a:	80 81       	ld	r24, Z
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	b3 01       	movw	r22, r6
    1060:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <fputc>
    1064:	dd 20       	and	r13, r13
    1066:	a9 f7       	brne	.-22     	; 0x1052 <vfprintf+0x380>
    1068:	06 c0       	rjmp	.+12     	; 0x1076 <vfprintf+0x3a4>
    106a:	80 e2       	ldi	r24, 0x20	; 32
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	b3 01       	movw	r22, r6
    1070:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <fputc>
    1074:	ea 94       	dec	r14
    1076:	ee 20       	and	r14, r14
    1078:	c1 f7       	brne	.-16     	; 0x106a <vfprintf+0x398>
    107a:	43 ce       	rjmp	.-890    	; 0xd02 <vfprintf+0x30>
    107c:	f3 01       	movw	r30, r6
    107e:	66 81       	ldd	r22, Z+6	; 0x06
    1080:	77 81       	ldd	r23, Z+7	; 0x07
    1082:	cb 01       	movw	r24, r22
    1084:	2b 96       	adiw	r28, 0x0b	; 11
    1086:	e2 e1       	ldi	r30, 0x12	; 18
    1088:	0c 94 02 09 	jmp	0x1204	; 0x1204 <__epilogue_restores__>

0000108c <strnlen_P>:
    108c:	fc 01       	movw	r30, r24
    108e:	05 90       	lpm	r0, Z+
    1090:	61 50       	subi	r22, 0x01	; 1
    1092:	70 40       	sbci	r23, 0x00	; 0
    1094:	01 10       	cpse	r0, r1
    1096:	d8 f7       	brcc	.-10     	; 0x108e <strnlen_P+0x2>
    1098:	80 95       	com	r24
    109a:	90 95       	com	r25
    109c:	8e 0f       	add	r24, r30
    109e:	9f 1f       	adc	r25, r31
    10a0:	08 95       	ret

000010a2 <strnlen>:
    10a2:	fc 01       	movw	r30, r24
    10a4:	61 50       	subi	r22, 0x01	; 1
    10a6:	70 40       	sbci	r23, 0x00	; 0
    10a8:	01 90       	ld	r0, Z+
    10aa:	01 10       	cpse	r0, r1
    10ac:	d8 f7       	brcc	.-10     	; 0x10a4 <strnlen+0x2>
    10ae:	80 95       	com	r24
    10b0:	90 95       	com	r25
    10b2:	8e 0f       	add	r24, r30
    10b4:	9f 1f       	adc	r25, r31
    10b6:	08 95       	ret

000010b8 <fputc>:
    10b8:	0f 93       	push	r16
    10ba:	1f 93       	push	r17
    10bc:	cf 93       	push	r28
    10be:	df 93       	push	r29
    10c0:	8c 01       	movw	r16, r24
    10c2:	eb 01       	movw	r28, r22
    10c4:	8b 81       	ldd	r24, Y+3	; 0x03
    10c6:	81 ff       	sbrs	r24, 1
    10c8:	1b c0       	rjmp	.+54     	; 0x1100 <fputc+0x48>
    10ca:	82 ff       	sbrs	r24, 2
    10cc:	0d c0       	rjmp	.+26     	; 0x10e8 <fputc+0x30>
    10ce:	2e 81       	ldd	r18, Y+6	; 0x06
    10d0:	3f 81       	ldd	r19, Y+7	; 0x07
    10d2:	8c 81       	ldd	r24, Y+4	; 0x04
    10d4:	9d 81       	ldd	r25, Y+5	; 0x05
    10d6:	28 17       	cp	r18, r24
    10d8:	39 07       	cpc	r19, r25
    10da:	64 f4       	brge	.+24     	; 0x10f4 <fputc+0x3c>
    10dc:	e8 81       	ld	r30, Y
    10de:	f9 81       	ldd	r31, Y+1	; 0x01
    10e0:	01 93       	st	Z+, r16
    10e2:	f9 83       	std	Y+1, r31	; 0x01
    10e4:	e8 83       	st	Y, r30
    10e6:	06 c0       	rjmp	.+12     	; 0x10f4 <fputc+0x3c>
    10e8:	e8 85       	ldd	r30, Y+8	; 0x08
    10ea:	f9 85       	ldd	r31, Y+9	; 0x09
    10ec:	80 2f       	mov	r24, r16
    10ee:	09 95       	icall
    10f0:	89 2b       	or	r24, r25
    10f2:	31 f4       	brne	.+12     	; 0x1100 <fputc+0x48>
    10f4:	8e 81       	ldd	r24, Y+6	; 0x06
    10f6:	9f 81       	ldd	r25, Y+7	; 0x07
    10f8:	01 96       	adiw	r24, 0x01	; 1
    10fa:	9f 83       	std	Y+7, r25	; 0x07
    10fc:	8e 83       	std	Y+6, r24	; 0x06
    10fe:	02 c0       	rjmp	.+4      	; 0x1104 <fputc+0x4c>
    1100:	0f ef       	ldi	r16, 0xFF	; 255
    1102:	1f ef       	ldi	r17, 0xFF	; 255
    1104:	c8 01       	movw	r24, r16
    1106:	df 91       	pop	r29
    1108:	cf 91       	pop	r28
    110a:	1f 91       	pop	r17
    110c:	0f 91       	pop	r16
    110e:	08 95       	ret

00001110 <__ultoa_invert>:
    1110:	fa 01       	movw	r30, r20
    1112:	aa 27       	eor	r26, r26
    1114:	28 30       	cpi	r18, 0x08	; 8
    1116:	51 f1       	breq	.+84     	; 0x116c <__ultoa_invert+0x5c>
    1118:	20 31       	cpi	r18, 0x10	; 16
    111a:	81 f1       	breq	.+96     	; 0x117c <__ultoa_invert+0x6c>
    111c:	e8 94       	clt
    111e:	6f 93       	push	r22
    1120:	6e 7f       	andi	r22, 0xFE	; 254
    1122:	6e 5f       	subi	r22, 0xFE	; 254
    1124:	7f 4f       	sbci	r23, 0xFF	; 255
    1126:	8f 4f       	sbci	r24, 0xFF	; 255
    1128:	9f 4f       	sbci	r25, 0xFF	; 255
    112a:	af 4f       	sbci	r26, 0xFF	; 255
    112c:	b1 e0       	ldi	r27, 0x01	; 1
    112e:	3e d0       	rcall	.+124    	; 0x11ac <__ultoa_invert+0x9c>
    1130:	b4 e0       	ldi	r27, 0x04	; 4
    1132:	3c d0       	rcall	.+120    	; 0x11ac <__ultoa_invert+0x9c>
    1134:	67 0f       	add	r22, r23
    1136:	78 1f       	adc	r23, r24
    1138:	89 1f       	adc	r24, r25
    113a:	9a 1f       	adc	r25, r26
    113c:	a1 1d       	adc	r26, r1
    113e:	68 0f       	add	r22, r24
    1140:	79 1f       	adc	r23, r25
    1142:	8a 1f       	adc	r24, r26
    1144:	91 1d       	adc	r25, r1
    1146:	a1 1d       	adc	r26, r1
    1148:	6a 0f       	add	r22, r26
    114a:	71 1d       	adc	r23, r1
    114c:	81 1d       	adc	r24, r1
    114e:	91 1d       	adc	r25, r1
    1150:	a1 1d       	adc	r26, r1
    1152:	20 d0       	rcall	.+64     	; 0x1194 <__ultoa_invert+0x84>
    1154:	09 f4       	brne	.+2      	; 0x1158 <__ultoa_invert+0x48>
    1156:	68 94       	set
    1158:	3f 91       	pop	r19
    115a:	2a e0       	ldi	r18, 0x0A	; 10
    115c:	26 9f       	mul	r18, r22
    115e:	11 24       	eor	r1, r1
    1160:	30 19       	sub	r19, r0
    1162:	30 5d       	subi	r19, 0xD0	; 208
    1164:	31 93       	st	Z+, r19
    1166:	de f6       	brtc	.-74     	; 0x111e <__ultoa_invert+0xe>
    1168:	cf 01       	movw	r24, r30
    116a:	08 95       	ret
    116c:	46 2f       	mov	r20, r22
    116e:	47 70       	andi	r20, 0x07	; 7
    1170:	40 5d       	subi	r20, 0xD0	; 208
    1172:	41 93       	st	Z+, r20
    1174:	b3 e0       	ldi	r27, 0x03	; 3
    1176:	0f d0       	rcall	.+30     	; 0x1196 <__ultoa_invert+0x86>
    1178:	c9 f7       	brne	.-14     	; 0x116c <__ultoa_invert+0x5c>
    117a:	f6 cf       	rjmp	.-20     	; 0x1168 <__ultoa_invert+0x58>
    117c:	46 2f       	mov	r20, r22
    117e:	4f 70       	andi	r20, 0x0F	; 15
    1180:	40 5d       	subi	r20, 0xD0	; 208
    1182:	4a 33       	cpi	r20, 0x3A	; 58
    1184:	18 f0       	brcs	.+6      	; 0x118c <__ultoa_invert+0x7c>
    1186:	49 5d       	subi	r20, 0xD9	; 217
    1188:	31 fd       	sbrc	r19, 1
    118a:	40 52       	subi	r20, 0x20	; 32
    118c:	41 93       	st	Z+, r20
    118e:	02 d0       	rcall	.+4      	; 0x1194 <__ultoa_invert+0x84>
    1190:	a9 f7       	brne	.-22     	; 0x117c <__ultoa_invert+0x6c>
    1192:	ea cf       	rjmp	.-44     	; 0x1168 <__ultoa_invert+0x58>
    1194:	b4 e0       	ldi	r27, 0x04	; 4
    1196:	a6 95       	lsr	r26
    1198:	97 95       	ror	r25
    119a:	87 95       	ror	r24
    119c:	77 95       	ror	r23
    119e:	67 95       	ror	r22
    11a0:	ba 95       	dec	r27
    11a2:	c9 f7       	brne	.-14     	; 0x1196 <__ultoa_invert+0x86>
    11a4:	00 97       	sbiw	r24, 0x00	; 0
    11a6:	61 05       	cpc	r22, r1
    11a8:	71 05       	cpc	r23, r1
    11aa:	08 95       	ret
    11ac:	9b 01       	movw	r18, r22
    11ae:	ac 01       	movw	r20, r24
    11b0:	0a 2e       	mov	r0, r26
    11b2:	06 94       	lsr	r0
    11b4:	57 95       	ror	r21
    11b6:	47 95       	ror	r20
    11b8:	37 95       	ror	r19
    11ba:	27 95       	ror	r18
    11bc:	ba 95       	dec	r27
    11be:	c9 f7       	brne	.-14     	; 0x11b2 <__ultoa_invert+0xa2>
    11c0:	62 0f       	add	r22, r18
    11c2:	73 1f       	adc	r23, r19
    11c4:	84 1f       	adc	r24, r20
    11c6:	95 1f       	adc	r25, r21
    11c8:	a0 1d       	adc	r26, r0
    11ca:	08 95       	ret

000011cc <__prologue_saves__>:
    11cc:	2f 92       	push	r2
    11ce:	3f 92       	push	r3
    11d0:	4f 92       	push	r4
    11d2:	5f 92       	push	r5
    11d4:	6f 92       	push	r6
    11d6:	7f 92       	push	r7
    11d8:	8f 92       	push	r8
    11da:	9f 92       	push	r9
    11dc:	af 92       	push	r10
    11de:	bf 92       	push	r11
    11e0:	cf 92       	push	r12
    11e2:	df 92       	push	r13
    11e4:	ef 92       	push	r14
    11e6:	ff 92       	push	r15
    11e8:	0f 93       	push	r16
    11ea:	1f 93       	push	r17
    11ec:	cf 93       	push	r28
    11ee:	df 93       	push	r29
    11f0:	cd b7       	in	r28, 0x3d	; 61
    11f2:	de b7       	in	r29, 0x3e	; 62
    11f4:	ca 1b       	sub	r28, r26
    11f6:	db 0b       	sbc	r29, r27
    11f8:	0f b6       	in	r0, 0x3f	; 63
    11fa:	f8 94       	cli
    11fc:	de bf       	out	0x3e, r29	; 62
    11fe:	0f be       	out	0x3f, r0	; 63
    1200:	cd bf       	out	0x3d, r28	; 61
    1202:	09 94       	ijmp

00001204 <__epilogue_restores__>:
    1204:	2a 88       	ldd	r2, Y+18	; 0x12
    1206:	39 88       	ldd	r3, Y+17	; 0x11
    1208:	48 88       	ldd	r4, Y+16	; 0x10
    120a:	5f 84       	ldd	r5, Y+15	; 0x0f
    120c:	6e 84       	ldd	r6, Y+14	; 0x0e
    120e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1210:	8c 84       	ldd	r8, Y+12	; 0x0c
    1212:	9b 84       	ldd	r9, Y+11	; 0x0b
    1214:	aa 84       	ldd	r10, Y+10	; 0x0a
    1216:	b9 84       	ldd	r11, Y+9	; 0x09
    1218:	c8 84       	ldd	r12, Y+8	; 0x08
    121a:	df 80       	ldd	r13, Y+7	; 0x07
    121c:	ee 80       	ldd	r14, Y+6	; 0x06
    121e:	fd 80       	ldd	r15, Y+5	; 0x05
    1220:	0c 81       	ldd	r16, Y+4	; 0x04
    1222:	1b 81       	ldd	r17, Y+3	; 0x03
    1224:	aa 81       	ldd	r26, Y+2	; 0x02
    1226:	b9 81       	ldd	r27, Y+1	; 0x01
    1228:	ce 0f       	add	r28, r30
    122a:	d1 1d       	adc	r29, r1
    122c:	0f b6       	in	r0, 0x3f	; 63
    122e:	f8 94       	cli
    1230:	de bf       	out	0x3e, r29	; 62
    1232:	0f be       	out	0x3f, r0	; 63
    1234:	cd bf       	out	0x3d, r28	; 61
    1236:	ed 01       	movw	r28, r26
    1238:	08 95       	ret

0000123a <_exit>:
    123a:	f8 94       	cli

0000123c <__stop_program>:
    123c:	ff cf       	rjmp	.-2      	; 0x123c <__stop_program>
