
AVR32_Drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000205c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000d0  00800060  0000205c  000020f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800130  00800130  000021c0  2**0
                  ALLOC
  3 .stab         00001464  00000000  00000000  000021c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000e65  00000000  00000000  00003624  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00004489  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  000045c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00004739  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00006382  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  0000726d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  0000801c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  0000817c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00008409  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00008bd7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e5       	ldi	r30, 0x5C	; 92
      68:	f0 e2       	ldi	r31, 0x20	; 32
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 33       	cpi	r26, 0x30	; 48
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e3       	ldi	r26, 0x30	; 48
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a6 33       	cpi	r26, 0x36	; 54
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <main>
      8a:	0c 94 2c 10 	jmp	0x2058	; 0x2058 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 63 0d 	jmp	0x1ac6	; 0x1ac6 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	ae e1       	ldi	r26, 0x1E	; 30
     128:	b1 e0       	ldi	r27, 0x01	; 1
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 7f 0d 	jmp	0x1afe	; 0x1afe <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 6f 0d 	jmp	0x1ade	; 0x1ade <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 6f 0d 	jmp	0x1ade	; 0x1ade <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 63 0d 	jmp	0x1ac6	; 0x1ac6 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	8e e1       	ldi	r24, 0x1E	; 30
     496:	91 e0       	ldi	r25, 0x01	; 1
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 7f 0d 	jmp	0x1afe	; 0x1afe <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 6f 0d 	jmp	0x1ade	; 0x1ade <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 6f 0d 	jmp	0x1ade	; 0x1ade <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 6f 0d 	jmp	0x1ade	; 0x1ade <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 73 0d 	jmp	0x1ae6	; 0x1ae6 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 8f 0d 	jmp	0x1b1e	; 0x1b1e <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <GPIO_setPortValue>:
#include "GPIO.h"

void GPIO_setPortValue(u8 portId, u8 value)
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	00 d0       	rcall	.+0      	; 0xb4c <GPIO_setPortValue+0x6>
     b4c:	00 d0       	rcall	.+0      	; 0xb4e <GPIO_setPortValue+0x8>
     b4e:	cd b7       	in	r28, 0x3d	; 61
     b50:	de b7       	in	r29, 0x3e	; 62
     b52:	89 83       	std	Y+1, r24	; 0x01
     b54:	6a 83       	std	Y+2, r22	; 0x02
    if ((PORTA != portId) && (PORTB != portId) && (PORTC != portId) && (PORTD != portId))
     b56:	89 81       	ldd	r24, Y+1	; 0x01
     b58:	88 23       	and	r24, r24
     b5a:	b1 f0       	breq	.+44     	; 0xb88 <GPIO_setPortValue+0x42>
     b5c:	89 81       	ldd	r24, Y+1	; 0x01
     b5e:	81 30       	cpi	r24, 0x01	; 1
     b60:	99 f0       	breq	.+38     	; 0xb88 <GPIO_setPortValue+0x42>
     b62:	89 81       	ldd	r24, Y+1	; 0x01
     b64:	82 30       	cpi	r24, 0x02	; 2
     b66:	81 f0       	breq	.+32     	; 0xb88 <GPIO_setPortValue+0x42>
     b68:	89 81       	ldd	r24, Y+1	; 0x01
     b6a:	83 30       	cpi	r24, 0x03	; 3
     b6c:	69 f0       	breq	.+26     	; 0xb88 <GPIO_setPortValue+0x42>
    {
        printf("WRONG ID!");
     b6e:	00 d0       	rcall	.+0      	; 0xb70 <GPIO_setPortValue+0x2a>
     b70:	ed b7       	in	r30, 0x3d	; 61
     b72:	fe b7       	in	r31, 0x3e	; 62
     b74:	31 96       	adiw	r30, 0x01	; 1
     b76:	80 e6       	ldi	r24, 0x60	; 96
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	91 83       	std	Z+1, r25	; 0x01
     b7c:	80 83       	st	Z, r24
     b7e:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
     b82:	0f 90       	pop	r0
     b84:	0f 90       	pop	r0
     b86:	dd c0       	rjmp	.+442    	; 0xd42 <GPIO_setPortValue+0x1fc>
    }
    else
    {
        switch (portId)
     b88:	89 81       	ldd	r24, Y+1	; 0x01
     b8a:	28 2f       	mov	r18, r24
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	3c 83       	std	Y+4, r19	; 0x04
     b90:	2b 83       	std	Y+3, r18	; 0x03
     b92:	8b 81       	ldd	r24, Y+3	; 0x03
     b94:	9c 81       	ldd	r25, Y+4	; 0x04
     b96:	81 30       	cpi	r24, 0x01	; 1
     b98:	91 05       	cpc	r25, r1
     b9a:	09 f4       	brne	.+2      	; 0xb9e <GPIO_setPortValue+0x58>
     b9c:	46 c0       	rjmp	.+140    	; 0xc2a <GPIO_setPortValue+0xe4>
     b9e:	2b 81       	ldd	r18, Y+3	; 0x03
     ba0:	3c 81       	ldd	r19, Y+4	; 0x04
     ba2:	22 30       	cpi	r18, 0x02	; 2
     ba4:	31 05       	cpc	r19, r1
     ba6:	2c f4       	brge	.+10     	; 0xbb2 <GPIO_setPortValue+0x6c>
     ba8:	8b 81       	ldd	r24, Y+3	; 0x03
     baa:	9c 81       	ldd	r25, Y+4	; 0x04
     bac:	00 97       	sbiw	r24, 0x00	; 0
     bae:	71 f0       	breq	.+28     	; 0xbcc <GPIO_setPortValue+0x86>
     bb0:	c8 c0       	rjmp	.+400    	; 0xd42 <GPIO_setPortValue+0x1fc>
     bb2:	2b 81       	ldd	r18, Y+3	; 0x03
     bb4:	3c 81       	ldd	r19, Y+4	; 0x04
     bb6:	22 30       	cpi	r18, 0x02	; 2
     bb8:	31 05       	cpc	r19, r1
     bba:	09 f4       	brne	.+2      	; 0xbbe <GPIO_setPortValue+0x78>
     bbc:	65 c0       	rjmp	.+202    	; 0xc88 <GPIO_setPortValue+0x142>
     bbe:	8b 81       	ldd	r24, Y+3	; 0x03
     bc0:	9c 81       	ldd	r25, Y+4	; 0x04
     bc2:	83 30       	cpi	r24, 0x03	; 3
     bc4:	91 05       	cpc	r25, r1
     bc6:	09 f4       	brne	.+2      	; 0xbca <GPIO_setPortValue+0x84>
     bc8:	8e c0       	rjmp	.+284    	; 0xce6 <GPIO_setPortValue+0x1a0>
     bca:	bb c0       	rjmp	.+374    	; 0xd42 <GPIO_setPortValue+0x1fc>
        {
        case PORTA:
            PORTA_Ptr = value;
     bcc:	eb e3       	ldi	r30, 0x3B	; 59
     bce:	f0 e0       	ldi	r31, 0x00	; 0
     bd0:	8a 81       	ldd	r24, Y+2	; 0x02
     bd2:	80 83       	st	Z, r24
            printf("0x%x in PortAs", value);
     bd4:	8a 81       	ldd	r24, Y+2	; 0x02
     bd6:	28 2f       	mov	r18, r24
     bd8:	30 e0       	ldi	r19, 0x00	; 0
     bda:	00 d0       	rcall	.+0      	; 0xbdc <GPIO_setPortValue+0x96>
     bdc:	00 d0       	rcall	.+0      	; 0xbde <GPIO_setPortValue+0x98>
     bde:	ed b7       	in	r30, 0x3d	; 61
     be0:	fe b7       	in	r31, 0x3e	; 62
     be2:	31 96       	adiw	r30, 0x01	; 1
     be4:	8a e6       	ldi	r24, 0x6A	; 106
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	91 83       	std	Z+1, r25	; 0x01
     bea:	80 83       	st	Z, r24
     bec:	33 83       	std	Z+3, r19	; 0x03
     bee:	22 83       	std	Z+2, r18	; 0x02
     bf0:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
     bf4:	0f 90       	pop	r0
     bf6:	0f 90       	pop	r0
     bf8:	0f 90       	pop	r0
     bfa:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", PORTA_Ptr);
     bfc:	eb e3       	ldi	r30, 0x3B	; 59
     bfe:	f0 e0       	ldi	r31, 0x00	; 0
     c00:	80 81       	ld	r24, Z
     c02:	28 2f       	mov	r18, r24
     c04:	30 e0       	ldi	r19, 0x00	; 0
     c06:	00 d0       	rcall	.+0      	; 0xc08 <GPIO_setPortValue+0xc2>
     c08:	00 d0       	rcall	.+0      	; 0xc0a <GPIO_setPortValue+0xc4>
     c0a:	ed b7       	in	r30, 0x3d	; 61
     c0c:	fe b7       	in	r31, 0x3e	; 62
     c0e:	31 96       	adiw	r30, 0x01	; 1
     c10:	89 e7       	ldi	r24, 0x79	; 121
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	91 83       	std	Z+1, r25	; 0x01
     c16:	80 83       	st	Z, r24
     c18:	33 83       	std	Z+3, r19	; 0x03
     c1a:	22 83       	std	Z+2, r18	; 0x02
     c1c:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
     c20:	0f 90       	pop	r0
     c22:	0f 90       	pop	r0
     c24:	0f 90       	pop	r0
     c26:	0f 90       	pop	r0
     c28:	8c c0       	rjmp	.+280    	; 0xd42 <GPIO_setPortValue+0x1fc>
            break;
        case PORTB:
            PORTB_Ptr = value;
     c2a:	e8 e3       	ldi	r30, 0x38	; 56
     c2c:	f0 e0       	ldi	r31, 0x00	; 0
     c2e:	8a 81       	ldd	r24, Y+2	; 0x02
     c30:	80 83       	st	Z, r24
            printf("0x%x in PortBs", value);
     c32:	8a 81       	ldd	r24, Y+2	; 0x02
     c34:	28 2f       	mov	r18, r24
     c36:	30 e0       	ldi	r19, 0x00	; 0
     c38:	00 d0       	rcall	.+0      	; 0xc3a <GPIO_setPortValue+0xf4>
     c3a:	00 d0       	rcall	.+0      	; 0xc3c <GPIO_setPortValue+0xf6>
     c3c:	ed b7       	in	r30, 0x3d	; 61
     c3e:	fe b7       	in	r31, 0x3e	; 62
     c40:	31 96       	adiw	r30, 0x01	; 1
     c42:	8c e9       	ldi	r24, 0x9C	; 156
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	91 83       	std	Z+1, r25	; 0x01
     c48:	80 83       	st	Z, r24
     c4a:	33 83       	std	Z+3, r19	; 0x03
     c4c:	22 83       	std	Z+2, r18	; 0x02
     c4e:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
     c52:	0f 90       	pop	r0
     c54:	0f 90       	pop	r0
     c56:	0f 90       	pop	r0
     c58:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", PORTA_Ptr);
     c5a:	eb e3       	ldi	r30, 0x3B	; 59
     c5c:	f0 e0       	ldi	r31, 0x00	; 0
     c5e:	80 81       	ld	r24, Z
     c60:	28 2f       	mov	r18, r24
     c62:	30 e0       	ldi	r19, 0x00	; 0
     c64:	00 d0       	rcall	.+0      	; 0xc66 <GPIO_setPortValue+0x120>
     c66:	00 d0       	rcall	.+0      	; 0xc68 <GPIO_setPortValue+0x122>
     c68:	ed b7       	in	r30, 0x3d	; 61
     c6a:	fe b7       	in	r31, 0x3e	; 62
     c6c:	31 96       	adiw	r30, 0x01	; 1
     c6e:	89 e7       	ldi	r24, 0x79	; 121
     c70:	90 e0       	ldi	r25, 0x00	; 0
     c72:	91 83       	std	Z+1, r25	; 0x01
     c74:	80 83       	st	Z, r24
     c76:	33 83       	std	Z+3, r19	; 0x03
     c78:	22 83       	std	Z+2, r18	; 0x02
     c7a:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
     c7e:	0f 90       	pop	r0
     c80:	0f 90       	pop	r0
     c82:	0f 90       	pop	r0
     c84:	0f 90       	pop	r0
     c86:	5d c0       	rjmp	.+186    	; 0xd42 <GPIO_setPortValue+0x1fc>
            break;
        case PORTC:
            PORTC_Ptr = value;
     c88:	e5 e3       	ldi	r30, 0x35	; 53
     c8a:	f0 e0       	ldi	r31, 0x00	; 0
     c8c:	8a 81       	ldd	r24, Y+2	; 0x02
     c8e:	80 83       	st	Z, r24
            printf("0x%x in PortCs", value);
     c90:	8a 81       	ldd	r24, Y+2	; 0x02
     c92:	28 2f       	mov	r18, r24
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	00 d0       	rcall	.+0      	; 0xc98 <GPIO_setPortValue+0x152>
     c98:	00 d0       	rcall	.+0      	; 0xc9a <GPIO_setPortValue+0x154>
     c9a:	ed b7       	in	r30, 0x3d	; 61
     c9c:	fe b7       	in	r31, 0x3e	; 62
     c9e:	31 96       	adiw	r30, 0x01	; 1
     ca0:	8b ea       	ldi	r24, 0xAB	; 171
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	91 83       	std	Z+1, r25	; 0x01
     ca6:	80 83       	st	Z, r24
     ca8:	33 83       	std	Z+3, r19	; 0x03
     caa:	22 83       	std	Z+2, r18	; 0x02
     cac:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
     cb0:	0f 90       	pop	r0
     cb2:	0f 90       	pop	r0
     cb4:	0f 90       	pop	r0
     cb6:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", PORTC_Ptr);
     cb8:	e5 e3       	ldi	r30, 0x35	; 53
     cba:	f0 e0       	ldi	r31, 0x00	; 0
     cbc:	80 81       	ld	r24, Z
     cbe:	28 2f       	mov	r18, r24
     cc0:	30 e0       	ldi	r19, 0x00	; 0
     cc2:	00 d0       	rcall	.+0      	; 0xcc4 <GPIO_setPortValue+0x17e>
     cc4:	00 d0       	rcall	.+0      	; 0xcc6 <GPIO_setPortValue+0x180>
     cc6:	ed b7       	in	r30, 0x3d	; 61
     cc8:	fe b7       	in	r31, 0x3e	; 62
     cca:	31 96       	adiw	r30, 0x01	; 1
     ccc:	89 e7       	ldi	r24, 0x79	; 121
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	91 83       	std	Z+1, r25	; 0x01
     cd2:	80 83       	st	Z, r24
     cd4:	33 83       	std	Z+3, r19	; 0x03
     cd6:	22 83       	std	Z+2, r18	; 0x02
     cd8:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
     cdc:	0f 90       	pop	r0
     cde:	0f 90       	pop	r0
     ce0:	0f 90       	pop	r0
     ce2:	0f 90       	pop	r0
     ce4:	2e c0       	rjmp	.+92     	; 0xd42 <GPIO_setPortValue+0x1fc>
            break;
        case PORTD:
            PORTD_Ptr = value;
     ce6:	e2 e3       	ldi	r30, 0x32	; 50
     ce8:	f0 e0       	ldi	r31, 0x00	; 0
     cea:	8a 81       	ldd	r24, Y+2	; 0x02
     cec:	80 83       	st	Z, r24
            printf("0x%x in PortD", value);
     cee:	8a 81       	ldd	r24, Y+2	; 0x02
     cf0:	28 2f       	mov	r18, r24
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	00 d0       	rcall	.+0      	; 0xcf6 <GPIO_setPortValue+0x1b0>
     cf6:	00 d0       	rcall	.+0      	; 0xcf8 <GPIO_setPortValue+0x1b2>
     cf8:	ed b7       	in	r30, 0x3d	; 61
     cfa:	fe b7       	in	r31, 0x3e	; 62
     cfc:	31 96       	adiw	r30, 0x01	; 1
     cfe:	8a eb       	ldi	r24, 0xBA	; 186
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	91 83       	std	Z+1, r25	; 0x01
     d04:	80 83       	st	Z, r24
     d06:	33 83       	std	Z+3, r19	; 0x03
     d08:	22 83       	std	Z+2, r18	; 0x02
     d0a:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
     d0e:	0f 90       	pop	r0
     d10:	0f 90       	pop	r0
     d12:	0f 90       	pop	r0
     d14:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", PORTA_Ptr);
     d16:	eb e3       	ldi	r30, 0x3B	; 59
     d18:	f0 e0       	ldi	r31, 0x00	; 0
     d1a:	80 81       	ld	r24, Z
     d1c:	28 2f       	mov	r18, r24
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	00 d0       	rcall	.+0      	; 0xd22 <GPIO_setPortValue+0x1dc>
     d22:	00 d0       	rcall	.+0      	; 0xd24 <GPIO_setPortValue+0x1de>
     d24:	ed b7       	in	r30, 0x3d	; 61
     d26:	fe b7       	in	r31, 0x3e	; 62
     d28:	31 96       	adiw	r30, 0x01	; 1
     d2a:	89 e7       	ldi	r24, 0x79	; 121
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	91 83       	std	Z+1, r25	; 0x01
     d30:	80 83       	st	Z, r24
     d32:	33 83       	std	Z+3, r19	; 0x03
     d34:	22 83       	std	Z+2, r18	; 0x02
     d36:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
     d3a:	0f 90       	pop	r0
     d3c:	0f 90       	pop	r0
     d3e:	0f 90       	pop	r0
     d40:	0f 90       	pop	r0

        default:
            break;
        }
    }
}
     d42:	0f 90       	pop	r0
     d44:	0f 90       	pop	r0
     d46:	0f 90       	pop	r0
     d48:	0f 90       	pop	r0
     d4a:	cf 91       	pop	r28
     d4c:	df 91       	pop	r29
     d4e:	08 95       	ret

00000d50 <GPIO_setPinValue>:

void GPIO_setPinValue(u8 portId, u8 PinId, u8 value)
{
     d50:	df 93       	push	r29
     d52:	cf 93       	push	r28
     d54:	cd b7       	in	r28, 0x3d	; 61
     d56:	de b7       	in	r29, 0x3e	; 62
     d58:	27 97       	sbiw	r28, 0x07	; 7
     d5a:	0f b6       	in	r0, 0x3f	; 63
     d5c:	f8 94       	cli
     d5e:	de bf       	out	0x3e, r29	; 62
     d60:	0f be       	out	0x3f, r0	; 63
     d62:	cd bf       	out	0x3d, r28	; 61
     d64:	89 83       	std	Y+1, r24	; 0x01
     d66:	6a 83       	std	Y+2, r22	; 0x02
     d68:	4b 83       	std	Y+3, r20	; 0x03
    if ((PORTA != portId) && (PORTB != portId) && (PORTC != portId) && (PORTD != portId))
     d6a:	89 81       	ldd	r24, Y+1	; 0x01
     d6c:	88 23       	and	r24, r24
     d6e:	b1 f0       	breq	.+44     	; 0xd9c <GPIO_setPinValue+0x4c>
     d70:	89 81       	ldd	r24, Y+1	; 0x01
     d72:	81 30       	cpi	r24, 0x01	; 1
     d74:	99 f0       	breq	.+38     	; 0xd9c <GPIO_setPinValue+0x4c>
     d76:	89 81       	ldd	r24, Y+1	; 0x01
     d78:	82 30       	cpi	r24, 0x02	; 2
     d7a:	81 f0       	breq	.+32     	; 0xd9c <GPIO_setPinValue+0x4c>
     d7c:	89 81       	ldd	r24, Y+1	; 0x01
     d7e:	83 30       	cpi	r24, 0x03	; 3
     d80:	69 f0       	breq	.+26     	; 0xd9c <GPIO_setPinValue+0x4c>
    {
        printf("WRONG ID!");
     d82:	00 d0       	rcall	.+0      	; 0xd84 <GPIO_setPinValue+0x34>
     d84:	ed b7       	in	r30, 0x3d	; 61
     d86:	fe b7       	in	r31, 0x3e	; 62
     d88:	31 96       	adiw	r30, 0x01	; 1
     d8a:	80 e6       	ldi	r24, 0x60	; 96
     d8c:	90 e0       	ldi	r25, 0x00	; 0
     d8e:	91 83       	std	Z+1, r25	; 0x01
     d90:	80 83       	st	Z, r24
     d92:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
     d96:	0f 90       	pop	r0
     d98:	0f 90       	pop	r0
     d9a:	52 c1       	rjmp	.+676    	; 0x1040 <GPIO_setPinValue+0x2f0>
    }
    else
    {
        if (value == high_value)
     d9c:	8b 81       	ldd	r24, Y+3	; 0x03
     d9e:	81 30       	cpi	r24, 0x01	; 1
     da0:	09 f0       	breq	.+2      	; 0xda4 <GPIO_setPinValue+0x54>
     da2:	92 c0       	rjmp	.+292    	; 0xec8 <GPIO_setPinValue+0x178>
        {
            switch (portId)
     da4:	89 81       	ldd	r24, Y+1	; 0x01
     da6:	28 2f       	mov	r18, r24
     da8:	30 e0       	ldi	r19, 0x00	; 0
     daa:	3f 83       	std	Y+7, r19	; 0x07
     dac:	2e 83       	std	Y+6, r18	; 0x06
     dae:	6e 81       	ldd	r22, Y+6	; 0x06
     db0:	7f 81       	ldd	r23, Y+7	; 0x07
     db2:	61 30       	cpi	r22, 0x01	; 1
     db4:	71 05       	cpc	r23, r1
     db6:	69 f1       	breq	.+90     	; 0xe12 <GPIO_setPinValue+0xc2>
     db8:	8e 81       	ldd	r24, Y+6	; 0x06
     dba:	9f 81       	ldd	r25, Y+7	; 0x07
     dbc:	82 30       	cpi	r24, 0x02	; 2
     dbe:	91 05       	cpc	r25, r1
     dc0:	34 f4       	brge	.+12     	; 0xdce <GPIO_setPinValue+0x7e>
     dc2:	2e 81       	ldd	r18, Y+6	; 0x06
     dc4:	3f 81       	ldd	r19, Y+7	; 0x07
     dc6:	21 15       	cp	r18, r1
     dc8:	31 05       	cpc	r19, r1
     dca:	69 f0       	breq	.+26     	; 0xde6 <GPIO_setPinValue+0x96>
     dcc:	64 c0       	rjmp	.+200    	; 0xe96 <GPIO_setPinValue+0x146>
     dce:	6e 81       	ldd	r22, Y+6	; 0x06
     dd0:	7f 81       	ldd	r23, Y+7	; 0x07
     dd2:	62 30       	cpi	r22, 0x02	; 2
     dd4:	71 05       	cpc	r23, r1
     dd6:	99 f1       	breq	.+102    	; 0xe3e <GPIO_setPinValue+0xee>
     dd8:	8e 81       	ldd	r24, Y+6	; 0x06
     dda:	9f 81       	ldd	r25, Y+7	; 0x07
     ddc:	83 30       	cpi	r24, 0x03	; 3
     dde:	91 05       	cpc	r25, r1
     de0:	09 f4       	brne	.+2      	; 0xde4 <GPIO_setPinValue+0x94>
     de2:	43 c0       	rjmp	.+134    	; 0xe6a <GPIO_setPinValue+0x11a>
     de4:	58 c0       	rjmp	.+176    	; 0xe96 <GPIO_setPinValue+0x146>
            {
            case PORTA:
                PORTA_Ptr = PORTA_Ptr | (value << PinId);
     de6:	ab e3       	ldi	r26, 0x3B	; 59
     de8:	b0 e0       	ldi	r27, 0x00	; 0
     dea:	eb e3       	ldi	r30, 0x3B	; 59
     dec:	f0 e0       	ldi	r31, 0x00	; 0
     dee:	80 81       	ld	r24, Z
     df0:	48 2f       	mov	r20, r24
     df2:	8b 81       	ldd	r24, Y+3	; 0x03
     df4:	28 2f       	mov	r18, r24
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	8a 81       	ldd	r24, Y+2	; 0x02
     dfa:	88 2f       	mov	r24, r24
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	b9 01       	movw	r22, r18
     e00:	02 c0       	rjmp	.+4      	; 0xe06 <GPIO_setPinValue+0xb6>
     e02:	66 0f       	add	r22, r22
     e04:	77 1f       	adc	r23, r23
     e06:	8a 95       	dec	r24
     e08:	e2 f7       	brpl	.-8      	; 0xe02 <GPIO_setPinValue+0xb2>
     e0a:	cb 01       	movw	r24, r22
     e0c:	84 2b       	or	r24, r20
     e0e:	8c 93       	st	X, r24
     e10:	17 c1       	rjmp	.+558    	; 0x1040 <GPIO_setPinValue+0x2f0>
                break;
            case PORTB:
                PORTB_Ptr = PORTB_Ptr | (value << PinId);
     e12:	a8 e3       	ldi	r26, 0x38	; 56
     e14:	b0 e0       	ldi	r27, 0x00	; 0
     e16:	e8 e3       	ldi	r30, 0x38	; 56
     e18:	f0 e0       	ldi	r31, 0x00	; 0
     e1a:	80 81       	ld	r24, Z
     e1c:	48 2f       	mov	r20, r24
     e1e:	8b 81       	ldd	r24, Y+3	; 0x03
     e20:	28 2f       	mov	r18, r24
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	8a 81       	ldd	r24, Y+2	; 0x02
     e26:	88 2f       	mov	r24, r24
     e28:	90 e0       	ldi	r25, 0x00	; 0
     e2a:	b9 01       	movw	r22, r18
     e2c:	02 c0       	rjmp	.+4      	; 0xe32 <GPIO_setPinValue+0xe2>
     e2e:	66 0f       	add	r22, r22
     e30:	77 1f       	adc	r23, r23
     e32:	8a 95       	dec	r24
     e34:	e2 f7       	brpl	.-8      	; 0xe2e <GPIO_setPinValue+0xde>
     e36:	cb 01       	movw	r24, r22
     e38:	84 2b       	or	r24, r20
     e3a:	8c 93       	st	X, r24
     e3c:	01 c1       	rjmp	.+514    	; 0x1040 <GPIO_setPinValue+0x2f0>
                break;
            case PORTC:
                PORTC_Ptr = PORTC_Ptr | (value << PinId);
     e3e:	a5 e3       	ldi	r26, 0x35	; 53
     e40:	b0 e0       	ldi	r27, 0x00	; 0
     e42:	e5 e3       	ldi	r30, 0x35	; 53
     e44:	f0 e0       	ldi	r31, 0x00	; 0
     e46:	80 81       	ld	r24, Z
     e48:	48 2f       	mov	r20, r24
     e4a:	8b 81       	ldd	r24, Y+3	; 0x03
     e4c:	28 2f       	mov	r18, r24
     e4e:	30 e0       	ldi	r19, 0x00	; 0
     e50:	8a 81       	ldd	r24, Y+2	; 0x02
     e52:	88 2f       	mov	r24, r24
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	b9 01       	movw	r22, r18
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <GPIO_setPinValue+0x10e>
     e5a:	66 0f       	add	r22, r22
     e5c:	77 1f       	adc	r23, r23
     e5e:	8a 95       	dec	r24
     e60:	e2 f7       	brpl	.-8      	; 0xe5a <GPIO_setPinValue+0x10a>
     e62:	cb 01       	movw	r24, r22
     e64:	84 2b       	or	r24, r20
     e66:	8c 93       	st	X, r24
     e68:	eb c0       	rjmp	.+470    	; 0x1040 <GPIO_setPinValue+0x2f0>
                break;
            case PORTD:
                PORTD_Ptr = PORTD_Ptr | (value << PinId);
     e6a:	a2 e3       	ldi	r26, 0x32	; 50
     e6c:	b0 e0       	ldi	r27, 0x00	; 0
     e6e:	e2 e3       	ldi	r30, 0x32	; 50
     e70:	f0 e0       	ldi	r31, 0x00	; 0
     e72:	80 81       	ld	r24, Z
     e74:	48 2f       	mov	r20, r24
     e76:	8b 81       	ldd	r24, Y+3	; 0x03
     e78:	28 2f       	mov	r18, r24
     e7a:	30 e0       	ldi	r19, 0x00	; 0
     e7c:	8a 81       	ldd	r24, Y+2	; 0x02
     e7e:	88 2f       	mov	r24, r24
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	b9 01       	movw	r22, r18
     e84:	02 c0       	rjmp	.+4      	; 0xe8a <GPIO_setPinValue+0x13a>
     e86:	66 0f       	add	r22, r22
     e88:	77 1f       	adc	r23, r23
     e8a:	8a 95       	dec	r24
     e8c:	e2 f7       	brpl	.-8      	; 0xe86 <GPIO_setPinValue+0x136>
     e8e:	cb 01       	movw	r24, r22
     e90:	84 2b       	or	r24, r20
     e92:	8c 93       	st	X, r24
     e94:	d5 c0       	rjmp	.+426    	; 0x1040 <GPIO_setPinValue+0x2f0>
                break;
            default:
                PORTA_Ptr = PORTA_Ptr | 0x00;
     e96:	ab e3       	ldi	r26, 0x3B	; 59
     e98:	b0 e0       	ldi	r27, 0x00	; 0
     e9a:	eb e3       	ldi	r30, 0x3B	; 59
     e9c:	f0 e0       	ldi	r31, 0x00	; 0
     e9e:	80 81       	ld	r24, Z
     ea0:	8c 93       	st	X, r24
                PORTA_Ptr = PORTA_Ptr | 0x00;
     ea2:	ab e3       	ldi	r26, 0x3B	; 59
     ea4:	b0 e0       	ldi	r27, 0x00	; 0
     ea6:	eb e3       	ldi	r30, 0x3B	; 59
     ea8:	f0 e0       	ldi	r31, 0x00	; 0
     eaa:	80 81       	ld	r24, Z
     eac:	8c 93       	st	X, r24
                PORTA_Ptr = PORTA_Ptr | 0x00;
     eae:	ab e3       	ldi	r26, 0x3B	; 59
     eb0:	b0 e0       	ldi	r27, 0x00	; 0
     eb2:	eb e3       	ldi	r30, 0x3B	; 59
     eb4:	f0 e0       	ldi	r31, 0x00	; 0
     eb6:	80 81       	ld	r24, Z
     eb8:	8c 93       	st	X, r24
                PORTD_Ptr = PORTD_Ptr | 0x00;
     eba:	a2 e3       	ldi	r26, 0x32	; 50
     ebc:	b0 e0       	ldi	r27, 0x00	; 0
     ebe:	e2 e3       	ldi	r30, 0x32	; 50
     ec0:	f0 e0       	ldi	r31, 0x00	; 0
     ec2:	80 81       	ld	r24, Z
     ec4:	8c 93       	st	X, r24
     ec6:	bc c0       	rjmp	.+376    	; 0x1040 <GPIO_setPinValue+0x2f0>
                break;
            }
        }
        else if (value == low_value)
     ec8:	8b 81       	ldd	r24, Y+3	; 0x03
     eca:	88 23       	and	r24, r24
     ecc:	09 f0       	breq	.+2      	; 0xed0 <GPIO_setPinValue+0x180>
     ece:	a4 c0       	rjmp	.+328    	; 0x1018 <GPIO_setPinValue+0x2c8>
        {
            switch (portId)
     ed0:	89 81       	ldd	r24, Y+1	; 0x01
     ed2:	28 2f       	mov	r18, r24
     ed4:	30 e0       	ldi	r19, 0x00	; 0
     ed6:	3d 83       	std	Y+5, r19	; 0x05
     ed8:	2c 83       	std	Y+4, r18	; 0x04
     eda:	6c 81       	ldd	r22, Y+4	; 0x04
     edc:	7d 81       	ldd	r23, Y+5	; 0x05
     ede:	61 30       	cpi	r22, 0x01	; 1
     ee0:	71 05       	cpc	r23, r1
     ee2:	09 f4       	brne	.+2      	; 0xee6 <GPIO_setPinValue+0x196>
     ee4:	41 c0       	rjmp	.+130    	; 0xf68 <GPIO_setPinValue+0x218>
     ee6:	8c 81       	ldd	r24, Y+4	; 0x04
     ee8:	9d 81       	ldd	r25, Y+5	; 0x05
     eea:	82 30       	cpi	r24, 0x02	; 2
     eec:	91 05       	cpc	r25, r1
     eee:	34 f4       	brge	.+12     	; 0xefc <GPIO_setPinValue+0x1ac>
     ef0:	2c 81       	ldd	r18, Y+4	; 0x04
     ef2:	3d 81       	ldd	r19, Y+5	; 0x05
     ef4:	21 15       	cp	r18, r1
     ef6:	31 05       	cpc	r19, r1
     ef8:	71 f0       	breq	.+28     	; 0xf16 <GPIO_setPinValue+0x1c6>
     efa:	75 c0       	rjmp	.+234    	; 0xfe6 <GPIO_setPinValue+0x296>
     efc:	6c 81       	ldd	r22, Y+4	; 0x04
     efe:	7d 81       	ldd	r23, Y+5	; 0x05
     f00:	62 30       	cpi	r22, 0x02	; 2
     f02:	71 05       	cpc	r23, r1
     f04:	09 f4       	brne	.+2      	; 0xf08 <GPIO_setPinValue+0x1b8>
     f06:	45 c0       	rjmp	.+138    	; 0xf92 <GPIO_setPinValue+0x242>
     f08:	8c 81       	ldd	r24, Y+4	; 0x04
     f0a:	9d 81       	ldd	r25, Y+5	; 0x05
     f0c:	83 30       	cpi	r24, 0x03	; 3
     f0e:	91 05       	cpc	r25, r1
     f10:	09 f4       	brne	.+2      	; 0xf14 <GPIO_setPinValue+0x1c4>
     f12:	54 c0       	rjmp	.+168    	; 0xfbc <GPIO_setPinValue+0x26c>
     f14:	68 c0       	rjmp	.+208    	; 0xfe6 <GPIO_setPinValue+0x296>
            {
            case PORTA:
                printf("%i", value);
     f16:	8b 81       	ldd	r24, Y+3	; 0x03
     f18:	28 2f       	mov	r18, r24
     f1a:	30 e0       	ldi	r19, 0x00	; 0
     f1c:	00 d0       	rcall	.+0      	; 0xf1e <GPIO_setPinValue+0x1ce>
     f1e:	00 d0       	rcall	.+0      	; 0xf20 <GPIO_setPinValue+0x1d0>
     f20:	ed b7       	in	r30, 0x3d	; 61
     f22:	fe b7       	in	r31, 0x3e	; 62
     f24:	31 96       	adiw	r30, 0x01	; 1
     f26:	88 ec       	ldi	r24, 0xC8	; 200
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	91 83       	std	Z+1, r25	; 0x01
     f2c:	80 83       	st	Z, r24
     f2e:	33 83       	std	Z+3, r19	; 0x03
     f30:	22 83       	std	Z+2, r18	; 0x02
     f32:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
     f36:	0f 90       	pop	r0
     f38:	0f 90       	pop	r0
     f3a:	0f 90       	pop	r0
     f3c:	0f 90       	pop	r0
                PORTA_Ptr = PORTA_Ptr & ~(1 << PinId);
     f3e:	ab e3       	ldi	r26, 0x3B	; 59
     f40:	b0 e0       	ldi	r27, 0x00	; 0
     f42:	eb e3       	ldi	r30, 0x3B	; 59
     f44:	f0 e0       	ldi	r31, 0x00	; 0
     f46:	80 81       	ld	r24, Z
     f48:	48 2f       	mov	r20, r24
     f4a:	8a 81       	ldd	r24, Y+2	; 0x02
     f4c:	28 2f       	mov	r18, r24
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	81 e0       	ldi	r24, 0x01	; 1
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	02 2e       	mov	r0, r18
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <GPIO_setPinValue+0x20c>
     f58:	88 0f       	add	r24, r24
     f5a:	99 1f       	adc	r25, r25
     f5c:	0a 94       	dec	r0
     f5e:	e2 f7       	brpl	.-8      	; 0xf58 <GPIO_setPinValue+0x208>
     f60:	80 95       	com	r24
     f62:	84 23       	and	r24, r20
     f64:	8c 93       	st	X, r24
     f66:	6c c0       	rjmp	.+216    	; 0x1040 <GPIO_setPinValue+0x2f0>
                break;      
            case PORTB:
                PORTB_Ptr = PORTB_Ptr & ~(1 << PinId);
     f68:	a8 e3       	ldi	r26, 0x38	; 56
     f6a:	b0 e0       	ldi	r27, 0x00	; 0
     f6c:	e8 e3       	ldi	r30, 0x38	; 56
     f6e:	f0 e0       	ldi	r31, 0x00	; 0
     f70:	80 81       	ld	r24, Z
     f72:	48 2f       	mov	r20, r24
     f74:	8a 81       	ldd	r24, Y+2	; 0x02
     f76:	28 2f       	mov	r18, r24
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	81 e0       	ldi	r24, 0x01	; 1
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	02 2e       	mov	r0, r18
     f80:	02 c0       	rjmp	.+4      	; 0xf86 <GPIO_setPinValue+0x236>
     f82:	88 0f       	add	r24, r24
     f84:	99 1f       	adc	r25, r25
     f86:	0a 94       	dec	r0
     f88:	e2 f7       	brpl	.-8      	; 0xf82 <GPIO_setPinValue+0x232>
     f8a:	80 95       	com	r24
     f8c:	84 23       	and	r24, r20
     f8e:	8c 93       	st	X, r24
     f90:	57 c0       	rjmp	.+174    	; 0x1040 <GPIO_setPinValue+0x2f0>
                break;
            case PORTC:
                PORTC_Ptr = PORTC_Ptr & ~(1 << PinId);
     f92:	a5 e3       	ldi	r26, 0x35	; 53
     f94:	b0 e0       	ldi	r27, 0x00	; 0
     f96:	e5 e3       	ldi	r30, 0x35	; 53
     f98:	f0 e0       	ldi	r31, 0x00	; 0
     f9a:	80 81       	ld	r24, Z
     f9c:	48 2f       	mov	r20, r24
     f9e:	8a 81       	ldd	r24, Y+2	; 0x02
     fa0:	28 2f       	mov	r18, r24
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	81 e0       	ldi	r24, 0x01	; 1
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	02 2e       	mov	r0, r18
     faa:	02 c0       	rjmp	.+4      	; 0xfb0 <GPIO_setPinValue+0x260>
     fac:	88 0f       	add	r24, r24
     fae:	99 1f       	adc	r25, r25
     fb0:	0a 94       	dec	r0
     fb2:	e2 f7       	brpl	.-8      	; 0xfac <GPIO_setPinValue+0x25c>
     fb4:	80 95       	com	r24
     fb6:	84 23       	and	r24, r20
     fb8:	8c 93       	st	X, r24
     fba:	42 c0       	rjmp	.+132    	; 0x1040 <GPIO_setPinValue+0x2f0>
                break;
            case PORTD:
                PORTD_Ptr = PORTD_Ptr & ~(1 << PinId);
     fbc:	a2 e3       	ldi	r26, 0x32	; 50
     fbe:	b0 e0       	ldi	r27, 0x00	; 0
     fc0:	e2 e3       	ldi	r30, 0x32	; 50
     fc2:	f0 e0       	ldi	r31, 0x00	; 0
     fc4:	80 81       	ld	r24, Z
     fc6:	48 2f       	mov	r20, r24
     fc8:	8a 81       	ldd	r24, Y+2	; 0x02
     fca:	28 2f       	mov	r18, r24
     fcc:	30 e0       	ldi	r19, 0x00	; 0
     fce:	81 e0       	ldi	r24, 0x01	; 1
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	02 2e       	mov	r0, r18
     fd4:	02 c0       	rjmp	.+4      	; 0xfda <GPIO_setPinValue+0x28a>
     fd6:	88 0f       	add	r24, r24
     fd8:	99 1f       	adc	r25, r25
     fda:	0a 94       	dec	r0
     fdc:	e2 f7       	brpl	.-8      	; 0xfd6 <GPIO_setPinValue+0x286>
     fde:	80 95       	com	r24
     fe0:	84 23       	and	r24, r20
     fe2:	8c 93       	st	X, r24
     fe4:	2d c0       	rjmp	.+90     	; 0x1040 <GPIO_setPinValue+0x2f0>
                break;
            default:
                PORTA_Ptr = PORTA_Ptr | 0x00;
     fe6:	ab e3       	ldi	r26, 0x3B	; 59
     fe8:	b0 e0       	ldi	r27, 0x00	; 0
     fea:	eb e3       	ldi	r30, 0x3B	; 59
     fec:	f0 e0       	ldi	r31, 0x00	; 0
     fee:	80 81       	ld	r24, Z
     ff0:	8c 93       	st	X, r24
                PORTA_Ptr = PORTA_Ptr | 0x00;
     ff2:	ab e3       	ldi	r26, 0x3B	; 59
     ff4:	b0 e0       	ldi	r27, 0x00	; 0
     ff6:	eb e3       	ldi	r30, 0x3B	; 59
     ff8:	f0 e0       	ldi	r31, 0x00	; 0
     ffa:	80 81       	ld	r24, Z
     ffc:	8c 93       	st	X, r24
                PORTA_Ptr = PORTA_Ptr | 0x00;
     ffe:	ab e3       	ldi	r26, 0x3B	; 59
    1000:	b0 e0       	ldi	r27, 0x00	; 0
    1002:	eb e3       	ldi	r30, 0x3B	; 59
    1004:	f0 e0       	ldi	r31, 0x00	; 0
    1006:	80 81       	ld	r24, Z
    1008:	8c 93       	st	X, r24
                PORTD_Ptr = PORTD_Ptr | 0x00;
    100a:	a2 e3       	ldi	r26, 0x32	; 50
    100c:	b0 e0       	ldi	r27, 0x00	; 0
    100e:	e2 e3       	ldi	r30, 0x32	; 50
    1010:	f0 e0       	ldi	r31, 0x00	; 0
    1012:	80 81       	ld	r24, Z
    1014:	8c 93       	st	X, r24
    1016:	14 c0       	rjmp	.+40     	; 0x1040 <GPIO_setPinValue+0x2f0>
                break;
            }
        }
        else
        {
            printf("can not assign 0%x to the pin", value);
    1018:	8b 81       	ldd	r24, Y+3	; 0x03
    101a:	28 2f       	mov	r18, r24
    101c:	30 e0       	ldi	r19, 0x00	; 0
    101e:	00 d0       	rcall	.+0      	; 0x1020 <GPIO_setPinValue+0x2d0>
    1020:	00 d0       	rcall	.+0      	; 0x1022 <GPIO_setPinValue+0x2d2>
    1022:	ed b7       	in	r30, 0x3d	; 61
    1024:	fe b7       	in	r31, 0x3e	; 62
    1026:	31 96       	adiw	r30, 0x01	; 1
    1028:	8b ec       	ldi	r24, 0xCB	; 203
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	91 83       	std	Z+1, r25	; 0x01
    102e:	80 83       	st	Z, r24
    1030:	33 83       	std	Z+3, r19	; 0x03
    1032:	22 83       	std	Z+2, r18	; 0x02
    1034:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
    1038:	0f 90       	pop	r0
    103a:	0f 90       	pop	r0
    103c:	0f 90       	pop	r0
    103e:	0f 90       	pop	r0
        }
    }
}
    1040:	27 96       	adiw	r28, 0x07	; 7
    1042:	0f b6       	in	r0, 0x3f	; 63
    1044:	f8 94       	cli
    1046:	de bf       	out	0x3e, r29	; 62
    1048:	0f be       	out	0x3f, r0	; 63
    104a:	cd bf       	out	0x3d, r28	; 61
    104c:	cf 91       	pop	r28
    104e:	df 91       	pop	r29
    1050:	08 95       	ret

00001052 <GPIO_setPortDirection>:

void GPIO_setPortDirection(u8 portId, u8 PortDirectionValue)
{
    1052:	df 93       	push	r29
    1054:	cf 93       	push	r28
    1056:	00 d0       	rcall	.+0      	; 0x1058 <GPIO_setPortDirection+0x6>
    1058:	00 d0       	rcall	.+0      	; 0x105a <GPIO_setPortDirection+0x8>
    105a:	cd b7       	in	r28, 0x3d	; 61
    105c:	de b7       	in	r29, 0x3e	; 62
    105e:	89 83       	std	Y+1, r24	; 0x01
    1060:	6a 83       	std	Y+2, r22	; 0x02
    if ((PORTA != portId) && (PORTB != portId) && (PORTC != portId) && (PORTD != portId))
    1062:	89 81       	ldd	r24, Y+1	; 0x01
    1064:	88 23       	and	r24, r24
    1066:	b1 f0       	breq	.+44     	; 0x1094 <GPIO_setPortDirection+0x42>
    1068:	89 81       	ldd	r24, Y+1	; 0x01
    106a:	81 30       	cpi	r24, 0x01	; 1
    106c:	99 f0       	breq	.+38     	; 0x1094 <GPIO_setPortDirection+0x42>
    106e:	89 81       	ldd	r24, Y+1	; 0x01
    1070:	82 30       	cpi	r24, 0x02	; 2
    1072:	81 f0       	breq	.+32     	; 0x1094 <GPIO_setPortDirection+0x42>
    1074:	89 81       	ldd	r24, Y+1	; 0x01
    1076:	83 30       	cpi	r24, 0x03	; 3
    1078:	69 f0       	breq	.+26     	; 0x1094 <GPIO_setPortDirection+0x42>
    {
        printf("WRONG ID!");
    107a:	00 d0       	rcall	.+0      	; 0x107c <GPIO_setPortDirection+0x2a>
    107c:	ed b7       	in	r30, 0x3d	; 61
    107e:	fe b7       	in	r31, 0x3e	; 62
    1080:	31 96       	adiw	r30, 0x01	; 1
    1082:	80 e6       	ldi	r24, 0x60	; 96
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	91 83       	std	Z+1, r25	; 0x01
    1088:	80 83       	st	Z, r24
    108a:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
    108e:	0f 90       	pop	r0
    1090:	0f 90       	pop	r0
    1092:	f6 c0       	rjmp	.+492    	; 0x1280 <GPIO_setPortDirection+0x22e>
    }
    else
    {
        switch (portId)
    1094:	89 81       	ldd	r24, Y+1	; 0x01
    1096:	28 2f       	mov	r18, r24
    1098:	30 e0       	ldi	r19, 0x00	; 0
    109a:	3c 83       	std	Y+4, r19	; 0x04
    109c:	2b 83       	std	Y+3, r18	; 0x03
    109e:	8b 81       	ldd	r24, Y+3	; 0x03
    10a0:	9c 81       	ldd	r25, Y+4	; 0x04
    10a2:	81 30       	cpi	r24, 0x01	; 1
    10a4:	91 05       	cpc	r25, r1
    10a6:	09 f4       	brne	.+2      	; 0x10aa <GPIO_setPortDirection+0x58>
    10a8:	46 c0       	rjmp	.+140    	; 0x1136 <GPIO_setPortDirection+0xe4>
    10aa:	2b 81       	ldd	r18, Y+3	; 0x03
    10ac:	3c 81       	ldd	r19, Y+4	; 0x04
    10ae:	22 30       	cpi	r18, 0x02	; 2
    10b0:	31 05       	cpc	r19, r1
    10b2:	2c f4       	brge	.+10     	; 0x10be <GPIO_setPortDirection+0x6c>
    10b4:	8b 81       	ldd	r24, Y+3	; 0x03
    10b6:	9c 81       	ldd	r25, Y+4	; 0x04
    10b8:	00 97       	sbiw	r24, 0x00	; 0
    10ba:	71 f0       	breq	.+28     	; 0x10d8 <GPIO_setPortDirection+0x86>
    10bc:	c9 c0       	rjmp	.+402    	; 0x1250 <GPIO_setPortDirection+0x1fe>
    10be:	2b 81       	ldd	r18, Y+3	; 0x03
    10c0:	3c 81       	ldd	r19, Y+4	; 0x04
    10c2:	22 30       	cpi	r18, 0x02	; 2
    10c4:	31 05       	cpc	r19, r1
    10c6:	09 f4       	brne	.+2      	; 0x10ca <GPIO_setPortDirection+0x78>
    10c8:	65 c0       	rjmp	.+202    	; 0x1194 <GPIO_setPortDirection+0x142>
    10ca:	8b 81       	ldd	r24, Y+3	; 0x03
    10cc:	9c 81       	ldd	r25, Y+4	; 0x04
    10ce:	83 30       	cpi	r24, 0x03	; 3
    10d0:	91 05       	cpc	r25, r1
    10d2:	09 f4       	brne	.+2      	; 0x10d6 <GPIO_setPortDirection+0x84>
    10d4:	8e c0       	rjmp	.+284    	; 0x11f2 <GPIO_setPortDirection+0x1a0>
    10d6:	bc c0       	rjmp	.+376    	; 0x1250 <GPIO_setPortDirection+0x1fe>
        {
        case PORTA:
            DDRA_Ptr = PortDirectionValue;
    10d8:	ea e3       	ldi	r30, 0x3A	; 58
    10da:	f0 e0       	ldi	r31, 0x00	; 0
    10dc:	8a 81       	ldd	r24, Y+2	; 0x02
    10de:	80 83       	st	Z, r24
            printf("Direction 0x%x in PortAs", PortDirectionValue);
    10e0:	8a 81       	ldd	r24, Y+2	; 0x02
    10e2:	28 2f       	mov	r18, r24
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	00 d0       	rcall	.+0      	; 0x10e8 <GPIO_setPortDirection+0x96>
    10e8:	00 d0       	rcall	.+0      	; 0x10ea <GPIO_setPortDirection+0x98>
    10ea:	ed b7       	in	r30, 0x3d	; 61
    10ec:	fe b7       	in	r31, 0x3e	; 62
    10ee:	31 96       	adiw	r30, 0x01	; 1
    10f0:	89 ee       	ldi	r24, 0xE9	; 233
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	91 83       	std	Z+1, r25	; 0x01
    10f6:	80 83       	st	Z, r24
    10f8:	33 83       	std	Z+3, r19	; 0x03
    10fa:	22 83       	std	Z+2, r18	; 0x02
    10fc:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
    1100:	0f 90       	pop	r0
    1102:	0f 90       	pop	r0
    1104:	0f 90       	pop	r0
    1106:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", DDRA_Ptr);
    1108:	ea e3       	ldi	r30, 0x3A	; 58
    110a:	f0 e0       	ldi	r31, 0x00	; 0
    110c:	80 81       	ld	r24, Z
    110e:	28 2f       	mov	r18, r24
    1110:	30 e0       	ldi	r19, 0x00	; 0
    1112:	00 d0       	rcall	.+0      	; 0x1114 <GPIO_setPortDirection+0xc2>
    1114:	00 d0       	rcall	.+0      	; 0x1116 <GPIO_setPortDirection+0xc4>
    1116:	ed b7       	in	r30, 0x3d	; 61
    1118:	fe b7       	in	r31, 0x3e	; 62
    111a:	31 96       	adiw	r30, 0x01	; 1
    111c:	89 e7       	ldi	r24, 0x79	; 121
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	91 83       	std	Z+1, r25	; 0x01
    1122:	80 83       	st	Z, r24
    1124:	33 83       	std	Z+3, r19	; 0x03
    1126:	22 83       	std	Z+2, r18	; 0x02
    1128:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
    112c:	0f 90       	pop	r0
    112e:	0f 90       	pop	r0
    1130:	0f 90       	pop	r0
    1132:	0f 90       	pop	r0
    1134:	a5 c0       	rjmp	.+330    	; 0x1280 <GPIO_setPortDirection+0x22e>
            break;
        case PORTB:
            DDRB_Ptr = PortDirectionValue;
    1136:	e7 e3       	ldi	r30, 0x37	; 55
    1138:	f0 e0       	ldi	r31, 0x00	; 0
    113a:	8a 81       	ldd	r24, Y+2	; 0x02
    113c:	80 83       	st	Z, r24
            printf("0x%x in PortB", PortDirectionValue);
    113e:	8a 81       	ldd	r24, Y+2	; 0x02
    1140:	28 2f       	mov	r18, r24
    1142:	30 e0       	ldi	r19, 0x00	; 0
    1144:	00 d0       	rcall	.+0      	; 0x1146 <GPIO_setPortDirection+0xf4>
    1146:	00 d0       	rcall	.+0      	; 0x1148 <GPIO_setPortDirection+0xf6>
    1148:	ed b7       	in	r30, 0x3d	; 61
    114a:	fe b7       	in	r31, 0x3e	; 62
    114c:	31 96       	adiw	r30, 0x01	; 1
    114e:	82 e0       	ldi	r24, 0x02	; 2
    1150:	91 e0       	ldi	r25, 0x01	; 1
    1152:	91 83       	std	Z+1, r25	; 0x01
    1154:	80 83       	st	Z, r24
    1156:	33 83       	std	Z+3, r19	; 0x03
    1158:	22 83       	std	Z+2, r18	; 0x02
    115a:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
    115e:	0f 90       	pop	r0
    1160:	0f 90       	pop	r0
    1162:	0f 90       	pop	r0
    1164:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", DDRB_Ptr);
    1166:	e7 e3       	ldi	r30, 0x37	; 55
    1168:	f0 e0       	ldi	r31, 0x00	; 0
    116a:	80 81       	ld	r24, Z
    116c:	28 2f       	mov	r18, r24
    116e:	30 e0       	ldi	r19, 0x00	; 0
    1170:	00 d0       	rcall	.+0      	; 0x1172 <GPIO_setPortDirection+0x120>
    1172:	00 d0       	rcall	.+0      	; 0x1174 <GPIO_setPortDirection+0x122>
    1174:	ed b7       	in	r30, 0x3d	; 61
    1176:	fe b7       	in	r31, 0x3e	; 62
    1178:	31 96       	adiw	r30, 0x01	; 1
    117a:	89 e7       	ldi	r24, 0x79	; 121
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	91 83       	std	Z+1, r25	; 0x01
    1180:	80 83       	st	Z, r24
    1182:	33 83       	std	Z+3, r19	; 0x03
    1184:	22 83       	std	Z+2, r18	; 0x02
    1186:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
    118a:	0f 90       	pop	r0
    118c:	0f 90       	pop	r0
    118e:	0f 90       	pop	r0
    1190:	0f 90       	pop	r0
    1192:	76 c0       	rjmp	.+236    	; 0x1280 <GPIO_setPortDirection+0x22e>
            break;
        case PORTC:
            DDRC_Ptr = PortDirectionValue;
    1194:	e4 e3       	ldi	r30, 0x34	; 52
    1196:	f0 e0       	ldi	r31, 0x00	; 0
    1198:	8a 81       	ldd	r24, Y+2	; 0x02
    119a:	80 83       	st	Z, r24
            printf("0x%x in PortC", PortDirectionValue);
    119c:	8a 81       	ldd	r24, Y+2	; 0x02
    119e:	28 2f       	mov	r18, r24
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	00 d0       	rcall	.+0      	; 0x11a4 <GPIO_setPortDirection+0x152>
    11a4:	00 d0       	rcall	.+0      	; 0x11a6 <GPIO_setPortDirection+0x154>
    11a6:	ed b7       	in	r30, 0x3d	; 61
    11a8:	fe b7       	in	r31, 0x3e	; 62
    11aa:	31 96       	adiw	r30, 0x01	; 1
    11ac:	80 e1       	ldi	r24, 0x10	; 16
    11ae:	91 e0       	ldi	r25, 0x01	; 1
    11b0:	91 83       	std	Z+1, r25	; 0x01
    11b2:	80 83       	st	Z, r24
    11b4:	33 83       	std	Z+3, r19	; 0x03
    11b6:	22 83       	std	Z+2, r18	; 0x02
    11b8:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
    11bc:	0f 90       	pop	r0
    11be:	0f 90       	pop	r0
    11c0:	0f 90       	pop	r0
    11c2:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", DDRC_Ptr);
    11c4:	e4 e3       	ldi	r30, 0x34	; 52
    11c6:	f0 e0       	ldi	r31, 0x00	; 0
    11c8:	80 81       	ld	r24, Z
    11ca:	28 2f       	mov	r18, r24
    11cc:	30 e0       	ldi	r19, 0x00	; 0
    11ce:	00 d0       	rcall	.+0      	; 0x11d0 <GPIO_setPortDirection+0x17e>
    11d0:	00 d0       	rcall	.+0      	; 0x11d2 <GPIO_setPortDirection+0x180>
    11d2:	ed b7       	in	r30, 0x3d	; 61
    11d4:	fe b7       	in	r31, 0x3e	; 62
    11d6:	31 96       	adiw	r30, 0x01	; 1
    11d8:	89 e7       	ldi	r24, 0x79	; 121
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	91 83       	std	Z+1, r25	; 0x01
    11de:	80 83       	st	Z, r24
    11e0:	33 83       	std	Z+3, r19	; 0x03
    11e2:	22 83       	std	Z+2, r18	; 0x02
    11e4:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
    11e8:	0f 90       	pop	r0
    11ea:	0f 90       	pop	r0
    11ec:	0f 90       	pop	r0
    11ee:	0f 90       	pop	r0
    11f0:	47 c0       	rjmp	.+142    	; 0x1280 <GPIO_setPortDirection+0x22e>
            break;
        case PORTD:
            DDRD_Ptr = PortDirectionValue;
    11f2:	e1 e3       	ldi	r30, 0x31	; 49
    11f4:	f0 e0       	ldi	r31, 0x00	; 0
    11f6:	8a 81       	ldd	r24, Y+2	; 0x02
    11f8:	80 83       	st	Z, r24
            printf("0x%x in PortD", PortDirectionValue);
    11fa:	8a 81       	ldd	r24, Y+2	; 0x02
    11fc:	28 2f       	mov	r18, r24
    11fe:	30 e0       	ldi	r19, 0x00	; 0
    1200:	00 d0       	rcall	.+0      	; 0x1202 <GPIO_setPortDirection+0x1b0>
    1202:	00 d0       	rcall	.+0      	; 0x1204 <GPIO_setPortDirection+0x1b2>
    1204:	ed b7       	in	r30, 0x3d	; 61
    1206:	fe b7       	in	r31, 0x3e	; 62
    1208:	31 96       	adiw	r30, 0x01	; 1
    120a:	8a eb       	ldi	r24, 0xBA	; 186
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	91 83       	std	Z+1, r25	; 0x01
    1210:	80 83       	st	Z, r24
    1212:	33 83       	std	Z+3, r19	; 0x03
    1214:	22 83       	std	Z+2, r18	; 0x02
    1216:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
    121a:	0f 90       	pop	r0
    121c:	0f 90       	pop	r0
    121e:	0f 90       	pop	r0
    1220:	0f 90       	pop	r0
            printf("Value assigned to PORTA_Ptr: 0x%x\n", DDRD_Ptr);
    1222:	e1 e3       	ldi	r30, 0x31	; 49
    1224:	f0 e0       	ldi	r31, 0x00	; 0
    1226:	80 81       	ld	r24, Z
    1228:	28 2f       	mov	r18, r24
    122a:	30 e0       	ldi	r19, 0x00	; 0
    122c:	00 d0       	rcall	.+0      	; 0x122e <GPIO_setPortDirection+0x1dc>
    122e:	00 d0       	rcall	.+0      	; 0x1230 <GPIO_setPortDirection+0x1de>
    1230:	ed b7       	in	r30, 0x3d	; 61
    1232:	fe b7       	in	r31, 0x3e	; 62
    1234:	31 96       	adiw	r30, 0x01	; 1
    1236:	89 e7       	ldi	r24, 0x79	; 121
    1238:	90 e0       	ldi	r25, 0x00	; 0
    123a:	91 83       	std	Z+1, r25	; 0x01
    123c:	80 83       	st	Z, r24
    123e:	33 83       	std	Z+3, r19	; 0x03
    1240:	22 83       	std	Z+2, r18	; 0x02
    1242:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
    1246:	0f 90       	pop	r0
    1248:	0f 90       	pop	r0
    124a:	0f 90       	pop	r0
    124c:	0f 90       	pop	r0
    124e:	18 c0       	rjmp	.+48     	; 0x1280 <GPIO_setPortDirection+0x22e>
            break;

        default:
            DDRA_Ptr |= (0x00);
    1250:	aa e3       	ldi	r26, 0x3A	; 58
    1252:	b0 e0       	ldi	r27, 0x00	; 0
    1254:	ea e3       	ldi	r30, 0x3A	; 58
    1256:	f0 e0       	ldi	r31, 0x00	; 0
    1258:	80 81       	ld	r24, Z
    125a:	8c 93       	st	X, r24
            DDRB_Ptr |= (0x00);
    125c:	a7 e3       	ldi	r26, 0x37	; 55
    125e:	b0 e0       	ldi	r27, 0x00	; 0
    1260:	e7 e3       	ldi	r30, 0x37	; 55
    1262:	f0 e0       	ldi	r31, 0x00	; 0
    1264:	80 81       	ld	r24, Z
    1266:	8c 93       	st	X, r24
            DDRC_Ptr |= (0x00);
    1268:	a4 e3       	ldi	r26, 0x34	; 52
    126a:	b0 e0       	ldi	r27, 0x00	; 0
    126c:	e4 e3       	ldi	r30, 0x34	; 52
    126e:	f0 e0       	ldi	r31, 0x00	; 0
    1270:	80 81       	ld	r24, Z
    1272:	8c 93       	st	X, r24
            DDRD_Ptr |= (0x00);
    1274:	a1 e3       	ldi	r26, 0x31	; 49
    1276:	b0 e0       	ldi	r27, 0x00	; 0
    1278:	e1 e3       	ldi	r30, 0x31	; 49
    127a:	f0 e0       	ldi	r31, 0x00	; 0
    127c:	80 81       	ld	r24, Z
    127e:	8c 93       	st	X, r24
            break;
        }
    }
}
    1280:	0f 90       	pop	r0
    1282:	0f 90       	pop	r0
    1284:	0f 90       	pop	r0
    1286:	0f 90       	pop	r0
    1288:	cf 91       	pop	r28
    128a:	df 91       	pop	r29
    128c:	08 95       	ret

0000128e <GPIO_setPindDirection>:

void GPIO_setPindDirection(u8 portId, u8 PinId, u8 PintDirectionValue)
{
    128e:	df 93       	push	r29
    1290:	cf 93       	push	r28
    1292:	cd b7       	in	r28, 0x3d	; 61
    1294:	de b7       	in	r29, 0x3e	; 62
    1296:	27 97       	sbiw	r28, 0x07	; 7
    1298:	0f b6       	in	r0, 0x3f	; 63
    129a:	f8 94       	cli
    129c:	de bf       	out	0x3e, r29	; 62
    129e:	0f be       	out	0x3f, r0	; 63
    12a0:	cd bf       	out	0x3d, r28	; 61
    12a2:	89 83       	std	Y+1, r24	; 0x01
    12a4:	6a 83       	std	Y+2, r22	; 0x02
    12a6:	4b 83       	std	Y+3, r20	; 0x03
    if ((PORTA != portId) && (PORTB != portId) && (PORTC != portId) && (PORTD != portId))
    12a8:	89 81       	ldd	r24, Y+1	; 0x01
    12aa:	88 23       	and	r24, r24
    12ac:	b1 f0       	breq	.+44     	; 0x12da <GPIO_setPindDirection+0x4c>
    12ae:	89 81       	ldd	r24, Y+1	; 0x01
    12b0:	81 30       	cpi	r24, 0x01	; 1
    12b2:	99 f0       	breq	.+38     	; 0x12da <GPIO_setPindDirection+0x4c>
    12b4:	89 81       	ldd	r24, Y+1	; 0x01
    12b6:	82 30       	cpi	r24, 0x02	; 2
    12b8:	81 f0       	breq	.+32     	; 0x12da <GPIO_setPindDirection+0x4c>
    12ba:	89 81       	ldd	r24, Y+1	; 0x01
    12bc:	83 30       	cpi	r24, 0x03	; 3
    12be:	69 f0       	breq	.+26     	; 0x12da <GPIO_setPindDirection+0x4c>
    {
        printf("WRONG ID!");
    12c0:	00 d0       	rcall	.+0      	; 0x12c2 <GPIO_setPindDirection+0x34>
    12c2:	ed b7       	in	r30, 0x3d	; 61
    12c4:	fe b7       	in	r31, 0x3e	; 62
    12c6:	31 96       	adiw	r30, 0x01	; 1
    12c8:	80 e6       	ldi	r24, 0x60	; 96
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	91 83       	std	Z+1, r25	; 0x01
    12ce:	80 83       	st	Z, r24
    12d0:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
    12d4:	0f 90       	pop	r0
    12d6:	0f 90       	pop	r0
    12d8:	44 c1       	rjmp	.+648    	; 0x1562 <GPIO_setPindDirection+0x2d4>
    }
    else
    {
        if (Output_direction == PintDirectionValue)
    12da:	8b 81       	ldd	r24, Y+3	; 0x03
    12dc:	81 30       	cpi	r24, 0x01	; 1
    12de:	09 f0       	breq	.+2      	; 0x12e2 <GPIO_setPindDirection+0x54>
    12e0:	92 c0       	rjmp	.+292    	; 0x1406 <GPIO_setPindDirection+0x178>
        {
            switch (portId)
    12e2:	89 81       	ldd	r24, Y+1	; 0x01
    12e4:	28 2f       	mov	r18, r24
    12e6:	30 e0       	ldi	r19, 0x00	; 0
    12e8:	3f 83       	std	Y+7, r19	; 0x07
    12ea:	2e 83       	std	Y+6, r18	; 0x06
    12ec:	6e 81       	ldd	r22, Y+6	; 0x06
    12ee:	7f 81       	ldd	r23, Y+7	; 0x07
    12f0:	61 30       	cpi	r22, 0x01	; 1
    12f2:	71 05       	cpc	r23, r1
    12f4:	69 f1       	breq	.+90     	; 0x1350 <GPIO_setPindDirection+0xc2>
    12f6:	8e 81       	ldd	r24, Y+6	; 0x06
    12f8:	9f 81       	ldd	r25, Y+7	; 0x07
    12fa:	82 30       	cpi	r24, 0x02	; 2
    12fc:	91 05       	cpc	r25, r1
    12fe:	34 f4       	brge	.+12     	; 0x130c <GPIO_setPindDirection+0x7e>
    1300:	2e 81       	ldd	r18, Y+6	; 0x06
    1302:	3f 81       	ldd	r19, Y+7	; 0x07
    1304:	21 15       	cp	r18, r1
    1306:	31 05       	cpc	r19, r1
    1308:	69 f0       	breq	.+26     	; 0x1324 <GPIO_setPindDirection+0x96>
    130a:	64 c0       	rjmp	.+200    	; 0x13d4 <GPIO_setPindDirection+0x146>
    130c:	6e 81       	ldd	r22, Y+6	; 0x06
    130e:	7f 81       	ldd	r23, Y+7	; 0x07
    1310:	62 30       	cpi	r22, 0x02	; 2
    1312:	71 05       	cpc	r23, r1
    1314:	99 f1       	breq	.+102    	; 0x137c <GPIO_setPindDirection+0xee>
    1316:	8e 81       	ldd	r24, Y+6	; 0x06
    1318:	9f 81       	ldd	r25, Y+7	; 0x07
    131a:	83 30       	cpi	r24, 0x03	; 3
    131c:	91 05       	cpc	r25, r1
    131e:	09 f4       	brne	.+2      	; 0x1322 <GPIO_setPindDirection+0x94>
    1320:	43 c0       	rjmp	.+134    	; 0x13a8 <GPIO_setPindDirection+0x11a>
    1322:	58 c0       	rjmp	.+176    	; 0x13d4 <GPIO_setPindDirection+0x146>
            {
            case PORTA:
                DDRA_Ptr = DDRA_Ptr | (PintDirectionValue << PinId);
    1324:	aa e3       	ldi	r26, 0x3A	; 58
    1326:	b0 e0       	ldi	r27, 0x00	; 0
    1328:	ea e3       	ldi	r30, 0x3A	; 58
    132a:	f0 e0       	ldi	r31, 0x00	; 0
    132c:	80 81       	ld	r24, Z
    132e:	48 2f       	mov	r20, r24
    1330:	8b 81       	ldd	r24, Y+3	; 0x03
    1332:	28 2f       	mov	r18, r24
    1334:	30 e0       	ldi	r19, 0x00	; 0
    1336:	8a 81       	ldd	r24, Y+2	; 0x02
    1338:	88 2f       	mov	r24, r24
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	b9 01       	movw	r22, r18
    133e:	02 c0       	rjmp	.+4      	; 0x1344 <GPIO_setPindDirection+0xb6>
    1340:	66 0f       	add	r22, r22
    1342:	77 1f       	adc	r23, r23
    1344:	8a 95       	dec	r24
    1346:	e2 f7       	brpl	.-8      	; 0x1340 <GPIO_setPindDirection+0xb2>
    1348:	cb 01       	movw	r24, r22
    134a:	84 2b       	or	r24, r20
    134c:	8c 93       	st	X, r24
    134e:	09 c1       	rjmp	.+530    	; 0x1562 <GPIO_setPindDirection+0x2d4>
                break;
            case PORTB:
                DDRB_Ptr = DDRB_Ptr | (PintDirectionValue << PinId);
    1350:	a7 e3       	ldi	r26, 0x37	; 55
    1352:	b0 e0       	ldi	r27, 0x00	; 0
    1354:	e7 e3       	ldi	r30, 0x37	; 55
    1356:	f0 e0       	ldi	r31, 0x00	; 0
    1358:	80 81       	ld	r24, Z
    135a:	48 2f       	mov	r20, r24
    135c:	8b 81       	ldd	r24, Y+3	; 0x03
    135e:	28 2f       	mov	r18, r24
    1360:	30 e0       	ldi	r19, 0x00	; 0
    1362:	8a 81       	ldd	r24, Y+2	; 0x02
    1364:	88 2f       	mov	r24, r24
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	b9 01       	movw	r22, r18
    136a:	02 c0       	rjmp	.+4      	; 0x1370 <GPIO_setPindDirection+0xe2>
    136c:	66 0f       	add	r22, r22
    136e:	77 1f       	adc	r23, r23
    1370:	8a 95       	dec	r24
    1372:	e2 f7       	brpl	.-8      	; 0x136c <GPIO_setPindDirection+0xde>
    1374:	cb 01       	movw	r24, r22
    1376:	84 2b       	or	r24, r20
    1378:	8c 93       	st	X, r24
    137a:	f3 c0       	rjmp	.+486    	; 0x1562 <GPIO_setPindDirection+0x2d4>
                break;
            case PORTC:
                DDRC_Ptr = DDRC_Ptr | (PintDirectionValue << PinId);
    137c:	a4 e3       	ldi	r26, 0x34	; 52
    137e:	b0 e0       	ldi	r27, 0x00	; 0
    1380:	e4 e3       	ldi	r30, 0x34	; 52
    1382:	f0 e0       	ldi	r31, 0x00	; 0
    1384:	80 81       	ld	r24, Z
    1386:	48 2f       	mov	r20, r24
    1388:	8b 81       	ldd	r24, Y+3	; 0x03
    138a:	28 2f       	mov	r18, r24
    138c:	30 e0       	ldi	r19, 0x00	; 0
    138e:	8a 81       	ldd	r24, Y+2	; 0x02
    1390:	88 2f       	mov	r24, r24
    1392:	90 e0       	ldi	r25, 0x00	; 0
    1394:	b9 01       	movw	r22, r18
    1396:	02 c0       	rjmp	.+4      	; 0x139c <GPIO_setPindDirection+0x10e>
    1398:	66 0f       	add	r22, r22
    139a:	77 1f       	adc	r23, r23
    139c:	8a 95       	dec	r24
    139e:	e2 f7       	brpl	.-8      	; 0x1398 <GPIO_setPindDirection+0x10a>
    13a0:	cb 01       	movw	r24, r22
    13a2:	84 2b       	or	r24, r20
    13a4:	8c 93       	st	X, r24
    13a6:	dd c0       	rjmp	.+442    	; 0x1562 <GPIO_setPindDirection+0x2d4>
                break;
            case PORTD:
                DDRD_Ptr = DDRD_Ptr | (PintDirectionValue << PinId);
    13a8:	a1 e3       	ldi	r26, 0x31	; 49
    13aa:	b0 e0       	ldi	r27, 0x00	; 0
    13ac:	e1 e3       	ldi	r30, 0x31	; 49
    13ae:	f0 e0       	ldi	r31, 0x00	; 0
    13b0:	80 81       	ld	r24, Z
    13b2:	48 2f       	mov	r20, r24
    13b4:	8b 81       	ldd	r24, Y+3	; 0x03
    13b6:	28 2f       	mov	r18, r24
    13b8:	30 e0       	ldi	r19, 0x00	; 0
    13ba:	8a 81       	ldd	r24, Y+2	; 0x02
    13bc:	88 2f       	mov	r24, r24
    13be:	90 e0       	ldi	r25, 0x00	; 0
    13c0:	b9 01       	movw	r22, r18
    13c2:	02 c0       	rjmp	.+4      	; 0x13c8 <GPIO_setPindDirection+0x13a>
    13c4:	66 0f       	add	r22, r22
    13c6:	77 1f       	adc	r23, r23
    13c8:	8a 95       	dec	r24
    13ca:	e2 f7       	brpl	.-8      	; 0x13c4 <GPIO_setPindDirection+0x136>
    13cc:	cb 01       	movw	r24, r22
    13ce:	84 2b       	or	r24, r20
    13d0:	8c 93       	st	X, r24
    13d2:	c7 c0       	rjmp	.+398    	; 0x1562 <GPIO_setPindDirection+0x2d4>
                break;
            default:
                DDRA_Ptr |= (0x00);
    13d4:	aa e3       	ldi	r26, 0x3A	; 58
    13d6:	b0 e0       	ldi	r27, 0x00	; 0
    13d8:	ea e3       	ldi	r30, 0x3A	; 58
    13da:	f0 e0       	ldi	r31, 0x00	; 0
    13dc:	80 81       	ld	r24, Z
    13de:	8c 93       	st	X, r24
                DDRB_Ptr |= (0x00);
    13e0:	a7 e3       	ldi	r26, 0x37	; 55
    13e2:	b0 e0       	ldi	r27, 0x00	; 0
    13e4:	e7 e3       	ldi	r30, 0x37	; 55
    13e6:	f0 e0       	ldi	r31, 0x00	; 0
    13e8:	80 81       	ld	r24, Z
    13ea:	8c 93       	st	X, r24
                DDRC_Ptr |= (0x00);
    13ec:	a4 e3       	ldi	r26, 0x34	; 52
    13ee:	b0 e0       	ldi	r27, 0x00	; 0
    13f0:	e4 e3       	ldi	r30, 0x34	; 52
    13f2:	f0 e0       	ldi	r31, 0x00	; 0
    13f4:	80 81       	ld	r24, Z
    13f6:	8c 93       	st	X, r24
                DDRD_Ptr |= (0x00);
    13f8:	a1 e3       	ldi	r26, 0x31	; 49
    13fa:	b0 e0       	ldi	r27, 0x00	; 0
    13fc:	e1 e3       	ldi	r30, 0x31	; 49
    13fe:	f0 e0       	ldi	r31, 0x00	; 0
    1400:	80 81       	ld	r24, Z
    1402:	8c 93       	st	X, r24
    1404:	ae c0       	rjmp	.+348    	; 0x1562 <GPIO_setPindDirection+0x2d4>
                break;
            }
        }
        else if (low_value == PintDirectionValue)
    1406:	8b 81       	ldd	r24, Y+3	; 0x03
    1408:	88 23       	and	r24, r24
    140a:	09 f0       	breq	.+2      	; 0x140e <GPIO_setPindDirection+0x180>
    140c:	96 c0       	rjmp	.+300    	; 0x153a <GPIO_setPindDirection+0x2ac>
        {
            switch (portId)
    140e:	89 81       	ldd	r24, Y+1	; 0x01
    1410:	28 2f       	mov	r18, r24
    1412:	30 e0       	ldi	r19, 0x00	; 0
    1414:	3d 83       	std	Y+5, r19	; 0x05
    1416:	2c 83       	std	Y+4, r18	; 0x04
    1418:	6c 81       	ldd	r22, Y+4	; 0x04
    141a:	7d 81       	ldd	r23, Y+5	; 0x05
    141c:	61 30       	cpi	r22, 0x01	; 1
    141e:	71 05       	cpc	r23, r1
    1420:	71 f1       	breq	.+92     	; 0x147e <GPIO_setPindDirection+0x1f0>
    1422:	8c 81       	ldd	r24, Y+4	; 0x04
    1424:	9d 81       	ldd	r25, Y+5	; 0x05
    1426:	82 30       	cpi	r24, 0x02	; 2
    1428:	91 05       	cpc	r25, r1
    142a:	34 f4       	brge	.+12     	; 0x1438 <GPIO_setPindDirection+0x1aa>
    142c:	2c 81       	ldd	r18, Y+4	; 0x04
    142e:	3d 81       	ldd	r19, Y+5	; 0x05
    1430:	21 15       	cp	r18, r1
    1432:	31 05       	cpc	r19, r1
    1434:	69 f0       	breq	.+26     	; 0x1450 <GPIO_setPindDirection+0x1c2>
    1436:	68 c0       	rjmp	.+208    	; 0x1508 <GPIO_setPindDirection+0x27a>
    1438:	6c 81       	ldd	r22, Y+4	; 0x04
    143a:	7d 81       	ldd	r23, Y+5	; 0x05
    143c:	62 30       	cpi	r22, 0x02	; 2
    143e:	71 05       	cpc	r23, r1
    1440:	a9 f1       	breq	.+106    	; 0x14ac <GPIO_setPindDirection+0x21e>
    1442:	8c 81       	ldd	r24, Y+4	; 0x04
    1444:	9d 81       	ldd	r25, Y+5	; 0x05
    1446:	83 30       	cpi	r24, 0x03	; 3
    1448:	91 05       	cpc	r25, r1
    144a:	09 f4       	brne	.+2      	; 0x144e <GPIO_setPindDirection+0x1c0>
    144c:	46 c0       	rjmp	.+140    	; 0x14da <GPIO_setPindDirection+0x24c>
    144e:	5c c0       	rjmp	.+184    	; 0x1508 <GPIO_setPindDirection+0x27a>
            {
            case PORTA:

                DDRA_Ptr = DDRA_Ptr & ~(PintDirectionValue << PinId);
    1450:	aa e3       	ldi	r26, 0x3A	; 58
    1452:	b0 e0       	ldi	r27, 0x00	; 0
    1454:	ea e3       	ldi	r30, 0x3A	; 58
    1456:	f0 e0       	ldi	r31, 0x00	; 0
    1458:	80 81       	ld	r24, Z
    145a:	48 2f       	mov	r20, r24
    145c:	8b 81       	ldd	r24, Y+3	; 0x03
    145e:	28 2f       	mov	r18, r24
    1460:	30 e0       	ldi	r19, 0x00	; 0
    1462:	8a 81       	ldd	r24, Y+2	; 0x02
    1464:	88 2f       	mov	r24, r24
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	b9 01       	movw	r22, r18
    146a:	02 c0       	rjmp	.+4      	; 0x1470 <GPIO_setPindDirection+0x1e2>
    146c:	66 0f       	add	r22, r22
    146e:	77 1f       	adc	r23, r23
    1470:	8a 95       	dec	r24
    1472:	e2 f7       	brpl	.-8      	; 0x146c <GPIO_setPindDirection+0x1de>
    1474:	cb 01       	movw	r24, r22
    1476:	80 95       	com	r24
    1478:	84 23       	and	r24, r20
    147a:	8c 93       	st	X, r24
    147c:	72 c0       	rjmp	.+228    	; 0x1562 <GPIO_setPindDirection+0x2d4>
                break;
            case PORTB:
                DDRB_Ptr = DDRB_Ptr & ~(PintDirectionValue << PinId);
    147e:	a7 e3       	ldi	r26, 0x37	; 55
    1480:	b0 e0       	ldi	r27, 0x00	; 0
    1482:	e7 e3       	ldi	r30, 0x37	; 55
    1484:	f0 e0       	ldi	r31, 0x00	; 0
    1486:	80 81       	ld	r24, Z
    1488:	48 2f       	mov	r20, r24
    148a:	8b 81       	ldd	r24, Y+3	; 0x03
    148c:	28 2f       	mov	r18, r24
    148e:	30 e0       	ldi	r19, 0x00	; 0
    1490:	8a 81       	ldd	r24, Y+2	; 0x02
    1492:	88 2f       	mov	r24, r24
    1494:	90 e0       	ldi	r25, 0x00	; 0
    1496:	b9 01       	movw	r22, r18
    1498:	02 c0       	rjmp	.+4      	; 0x149e <GPIO_setPindDirection+0x210>
    149a:	66 0f       	add	r22, r22
    149c:	77 1f       	adc	r23, r23
    149e:	8a 95       	dec	r24
    14a0:	e2 f7       	brpl	.-8      	; 0x149a <GPIO_setPindDirection+0x20c>
    14a2:	cb 01       	movw	r24, r22
    14a4:	80 95       	com	r24
    14a6:	84 23       	and	r24, r20
    14a8:	8c 93       	st	X, r24
    14aa:	5b c0       	rjmp	.+182    	; 0x1562 <GPIO_setPindDirection+0x2d4>
                break;
            case PORTC:
                DDRC_Ptr = DDRC_Ptr & ~(PintDirectionValue << PinId);
    14ac:	a4 e3       	ldi	r26, 0x34	; 52
    14ae:	b0 e0       	ldi	r27, 0x00	; 0
    14b0:	e4 e3       	ldi	r30, 0x34	; 52
    14b2:	f0 e0       	ldi	r31, 0x00	; 0
    14b4:	80 81       	ld	r24, Z
    14b6:	48 2f       	mov	r20, r24
    14b8:	8b 81       	ldd	r24, Y+3	; 0x03
    14ba:	28 2f       	mov	r18, r24
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	8a 81       	ldd	r24, Y+2	; 0x02
    14c0:	88 2f       	mov	r24, r24
    14c2:	90 e0       	ldi	r25, 0x00	; 0
    14c4:	b9 01       	movw	r22, r18
    14c6:	02 c0       	rjmp	.+4      	; 0x14cc <GPIO_setPindDirection+0x23e>
    14c8:	66 0f       	add	r22, r22
    14ca:	77 1f       	adc	r23, r23
    14cc:	8a 95       	dec	r24
    14ce:	e2 f7       	brpl	.-8      	; 0x14c8 <GPIO_setPindDirection+0x23a>
    14d0:	cb 01       	movw	r24, r22
    14d2:	80 95       	com	r24
    14d4:	84 23       	and	r24, r20
    14d6:	8c 93       	st	X, r24
    14d8:	44 c0       	rjmp	.+136    	; 0x1562 <GPIO_setPindDirection+0x2d4>
                break;
            case PORTD:
                DDRD_Ptr = DDRD_Ptr & ~(PintDirectionValue << PinId);
    14da:	a1 e3       	ldi	r26, 0x31	; 49
    14dc:	b0 e0       	ldi	r27, 0x00	; 0
    14de:	e1 e3       	ldi	r30, 0x31	; 49
    14e0:	f0 e0       	ldi	r31, 0x00	; 0
    14e2:	80 81       	ld	r24, Z
    14e4:	48 2f       	mov	r20, r24
    14e6:	8b 81       	ldd	r24, Y+3	; 0x03
    14e8:	28 2f       	mov	r18, r24
    14ea:	30 e0       	ldi	r19, 0x00	; 0
    14ec:	8a 81       	ldd	r24, Y+2	; 0x02
    14ee:	88 2f       	mov	r24, r24
    14f0:	90 e0       	ldi	r25, 0x00	; 0
    14f2:	b9 01       	movw	r22, r18
    14f4:	02 c0       	rjmp	.+4      	; 0x14fa <GPIO_setPindDirection+0x26c>
    14f6:	66 0f       	add	r22, r22
    14f8:	77 1f       	adc	r23, r23
    14fa:	8a 95       	dec	r24
    14fc:	e2 f7       	brpl	.-8      	; 0x14f6 <GPIO_setPindDirection+0x268>
    14fe:	cb 01       	movw	r24, r22
    1500:	80 95       	com	r24
    1502:	84 23       	and	r24, r20
    1504:	8c 93       	st	X, r24
    1506:	2d c0       	rjmp	.+90     	; 0x1562 <GPIO_setPindDirection+0x2d4>
                break;
            default:
                DDRA_Ptr |= (0x00);
    1508:	aa e3       	ldi	r26, 0x3A	; 58
    150a:	b0 e0       	ldi	r27, 0x00	; 0
    150c:	ea e3       	ldi	r30, 0x3A	; 58
    150e:	f0 e0       	ldi	r31, 0x00	; 0
    1510:	80 81       	ld	r24, Z
    1512:	8c 93       	st	X, r24
                DDRB_Ptr |= (0x00);
    1514:	a7 e3       	ldi	r26, 0x37	; 55
    1516:	b0 e0       	ldi	r27, 0x00	; 0
    1518:	e7 e3       	ldi	r30, 0x37	; 55
    151a:	f0 e0       	ldi	r31, 0x00	; 0
    151c:	80 81       	ld	r24, Z
    151e:	8c 93       	st	X, r24
                DDRC_Ptr |= (0x00);
    1520:	a4 e3       	ldi	r26, 0x34	; 52
    1522:	b0 e0       	ldi	r27, 0x00	; 0
    1524:	e4 e3       	ldi	r30, 0x34	; 52
    1526:	f0 e0       	ldi	r31, 0x00	; 0
    1528:	80 81       	ld	r24, Z
    152a:	8c 93       	st	X, r24
                DDRD_Ptr |= (0x00);
    152c:	a1 e3       	ldi	r26, 0x31	; 49
    152e:	b0 e0       	ldi	r27, 0x00	; 0
    1530:	e1 e3       	ldi	r30, 0x31	; 49
    1532:	f0 e0       	ldi	r31, 0x00	; 0
    1534:	80 81       	ld	r24, Z
    1536:	8c 93       	st	X, r24
    1538:	14 c0       	rjmp	.+40     	; 0x1562 <GPIO_setPindDirection+0x2d4>
                break;
            }
        }
        else
        {
            printf("can not assign 0%x to the pin", PintDirectionValue);
    153a:	8b 81       	ldd	r24, Y+3	; 0x03
    153c:	28 2f       	mov	r18, r24
    153e:	30 e0       	ldi	r19, 0x00	; 0
    1540:	00 d0       	rcall	.+0      	; 0x1542 <GPIO_setPindDirection+0x2b4>
    1542:	00 d0       	rcall	.+0      	; 0x1544 <GPIO_setPindDirection+0x2b6>
    1544:	ed b7       	in	r30, 0x3d	; 61
    1546:	fe b7       	in	r31, 0x3e	; 62
    1548:	31 96       	adiw	r30, 0x01	; 1
    154a:	8b ec       	ldi	r24, 0xCB	; 203
    154c:	90 e0       	ldi	r25, 0x00	; 0
    154e:	91 83       	std	Z+1, r25	; 0x01
    1550:	80 83       	st	Z, r24
    1552:	33 83       	std	Z+3, r19	; 0x03
    1554:	22 83       	std	Z+2, r18	; 0x02
    1556:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
    155a:	0f 90       	pop	r0
    155c:	0f 90       	pop	r0
    155e:	0f 90       	pop	r0
    1560:	0f 90       	pop	r0
        }
    }
}
    1562:	27 96       	adiw	r28, 0x07	; 7
    1564:	0f b6       	in	r0, 0x3f	; 63
    1566:	f8 94       	cli
    1568:	de bf       	out	0x3e, r29	; 62
    156a:	0f be       	out	0x3f, r0	; 63
    156c:	cd bf       	out	0x3d, r28	; 61
    156e:	cf 91       	pop	r28
    1570:	df 91       	pop	r29
    1572:	08 95       	ret

00001574 <GPIO_getPortValue>:

u8 GPIO_getPortValue(u8 portId)
{
    1574:	df 93       	push	r29
    1576:	cf 93       	push	r28
    1578:	00 d0       	rcall	.+0      	; 0x157a <GPIO_getPortValue+0x6>
    157a:	00 d0       	rcall	.+0      	; 0x157c <GPIO_getPortValue+0x8>
    157c:	cd b7       	in	r28, 0x3d	; 61
    157e:	de b7       	in	r29, 0x3e	; 62
    1580:	8a 83       	std	Y+2, r24	; 0x02
    u8 portValue = NULL;
    1582:	19 82       	std	Y+1, r1	; 0x01
    if ((PORTA != portId) && (PORTB != portId) && (PORTC != portId) && (PORTD != portId))
    1584:	8a 81       	ldd	r24, Y+2	; 0x02
    1586:	88 23       	and	r24, r24
    1588:	b1 f0       	breq	.+44     	; 0x15b6 <GPIO_getPortValue+0x42>
    158a:	8a 81       	ldd	r24, Y+2	; 0x02
    158c:	81 30       	cpi	r24, 0x01	; 1
    158e:	99 f0       	breq	.+38     	; 0x15b6 <GPIO_getPortValue+0x42>
    1590:	8a 81       	ldd	r24, Y+2	; 0x02
    1592:	82 30       	cpi	r24, 0x02	; 2
    1594:	81 f0       	breq	.+32     	; 0x15b6 <GPIO_getPortValue+0x42>
    1596:	8a 81       	ldd	r24, Y+2	; 0x02
    1598:	83 30       	cpi	r24, 0x03	; 3
    159a:	69 f0       	breq	.+26     	; 0x15b6 <GPIO_getPortValue+0x42>
    {
        printf("WRONG ID!");
    159c:	00 d0       	rcall	.+0      	; 0x159e <GPIO_getPortValue+0x2a>
    159e:	ed b7       	in	r30, 0x3d	; 61
    15a0:	fe b7       	in	r31, 0x3e	; 62
    15a2:	31 96       	adiw	r30, 0x01	; 1
    15a4:	80 e6       	ldi	r24, 0x60	; 96
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	91 83       	std	Z+1, r25	; 0x01
    15aa:	80 83       	st	Z, r24
    15ac:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
    15b0:	0f 90       	pop	r0
    15b2:	0f 90       	pop	r0
    15b4:	32 c0       	rjmp	.+100    	; 0x161a <GPIO_getPortValue+0xa6>
    }
    else
    {
        switch (portId)
    15b6:	8a 81       	ldd	r24, Y+2	; 0x02
    15b8:	28 2f       	mov	r18, r24
    15ba:	30 e0       	ldi	r19, 0x00	; 0
    15bc:	3c 83       	std	Y+4, r19	; 0x04
    15be:	2b 83       	std	Y+3, r18	; 0x03
    15c0:	8b 81       	ldd	r24, Y+3	; 0x03
    15c2:	9c 81       	ldd	r25, Y+4	; 0x04
    15c4:	81 30       	cpi	r24, 0x01	; 1
    15c6:	91 05       	cpc	r25, r1
    15c8:	d1 f0       	breq	.+52     	; 0x15fe <GPIO_getPortValue+0x8a>
    15ca:	2b 81       	ldd	r18, Y+3	; 0x03
    15cc:	3c 81       	ldd	r19, Y+4	; 0x04
    15ce:	22 30       	cpi	r18, 0x02	; 2
    15d0:	31 05       	cpc	r19, r1
    15d2:	2c f4       	brge	.+10     	; 0x15de <GPIO_getPortValue+0x6a>
    15d4:	8b 81       	ldd	r24, Y+3	; 0x03
    15d6:	9c 81       	ldd	r25, Y+4	; 0x04
    15d8:	00 97       	sbiw	r24, 0x00	; 0
    15da:	61 f0       	breq	.+24     	; 0x15f4 <GPIO_getPortValue+0x80>
    15dc:	1e c0       	rjmp	.+60     	; 0x161a <GPIO_getPortValue+0xa6>
    15de:	2b 81       	ldd	r18, Y+3	; 0x03
    15e0:	3c 81       	ldd	r19, Y+4	; 0x04
    15e2:	22 30       	cpi	r18, 0x02	; 2
    15e4:	31 05       	cpc	r19, r1
    15e6:	81 f0       	breq	.+32     	; 0x1608 <GPIO_getPortValue+0x94>
    15e8:	8b 81       	ldd	r24, Y+3	; 0x03
    15ea:	9c 81       	ldd	r25, Y+4	; 0x04
    15ec:	83 30       	cpi	r24, 0x03	; 3
    15ee:	91 05       	cpc	r25, r1
    15f0:	81 f0       	breq	.+32     	; 0x1612 <GPIO_getPortValue+0x9e>
    15f2:	13 c0       	rjmp	.+38     	; 0x161a <GPIO_getPortValue+0xa6>
        {
        case PORTA:
            portValue = PINA_Ptr;
    15f4:	e9 e3       	ldi	r30, 0x39	; 57
    15f6:	f0 e0       	ldi	r31, 0x00	; 0
    15f8:	80 81       	ld	r24, Z
    15fa:	89 83       	std	Y+1, r24	; 0x01
    15fc:	0e c0       	rjmp	.+28     	; 0x161a <GPIO_getPortValue+0xa6>
            break;
        case PORTB:
            portValue = PINB_Ptr;
    15fe:	e6 e3       	ldi	r30, 0x36	; 54
    1600:	f0 e0       	ldi	r31, 0x00	; 0
    1602:	80 81       	ld	r24, Z
    1604:	89 83       	std	Y+1, r24	; 0x01
    1606:	09 c0       	rjmp	.+18     	; 0x161a <GPIO_getPortValue+0xa6>
            break;
        case PORTC:
            portValue = PINC_Ptr;
    1608:	e3 e3       	ldi	r30, 0x33	; 51
    160a:	f0 e0       	ldi	r31, 0x00	; 0
    160c:	80 81       	ld	r24, Z
    160e:	89 83       	std	Y+1, r24	; 0x01
    1610:	04 c0       	rjmp	.+8      	; 0x161a <GPIO_getPortValue+0xa6>
            break;
        case PORTD:
            portValue = PIND_Ptr;
    1612:	e0 e3       	ldi	r30, 0x30	; 48
    1614:	f0 e0       	ldi	r31, 0x00	; 0
    1616:	80 81       	ld	r24, Z
    1618:	89 83       	std	Y+1, r24	; 0x01
        default:
            break;
        }
    }
    
    return portValue;
    161a:	89 81       	ldd	r24, Y+1	; 0x01
}
    161c:	0f 90       	pop	r0
    161e:	0f 90       	pop	r0
    1620:	0f 90       	pop	r0
    1622:	0f 90       	pop	r0
    1624:	cf 91       	pop	r28
    1626:	df 91       	pop	r29
    1628:	08 95       	ret

0000162a <GPIO_PinValue>:

u8 GPIO_PinValue(u8 portId, u8 PinId)
{
    162a:	df 93       	push	r29
    162c:	cf 93       	push	r28
    162e:	00 d0       	rcall	.+0      	; 0x1630 <GPIO_PinValue+0x6>
    1630:	00 d0       	rcall	.+0      	; 0x1632 <GPIO_PinValue+0x8>
    1632:	0f 92       	push	r0
    1634:	cd b7       	in	r28, 0x3d	; 61
    1636:	de b7       	in	r29, 0x3e	; 62
    1638:	8a 83       	std	Y+2, r24	; 0x02
    163a:	6b 83       	std	Y+3, r22	; 0x03
    //1 
    u8 PinValue = NULL;
    163c:	19 82       	std	Y+1, r1	; 0x01
    if ((PORTA != portId) && (PORTB != portId) && (PORTC != portId) && (PORTD != portId))
    163e:	8a 81       	ldd	r24, Y+2	; 0x02
    1640:	88 23       	and	r24, r24
    1642:	b1 f0       	breq	.+44     	; 0x1670 <GPIO_PinValue+0x46>
    1644:	8a 81       	ldd	r24, Y+2	; 0x02
    1646:	81 30       	cpi	r24, 0x01	; 1
    1648:	99 f0       	breq	.+38     	; 0x1670 <GPIO_PinValue+0x46>
    164a:	8a 81       	ldd	r24, Y+2	; 0x02
    164c:	82 30       	cpi	r24, 0x02	; 2
    164e:	81 f0       	breq	.+32     	; 0x1670 <GPIO_PinValue+0x46>
    1650:	8a 81       	ldd	r24, Y+2	; 0x02
    1652:	83 30       	cpi	r24, 0x03	; 3
    1654:	69 f0       	breq	.+26     	; 0x1670 <GPIO_PinValue+0x46>
    {
        printf("WRONG ID!");
    1656:	00 d0       	rcall	.+0      	; 0x1658 <GPIO_PinValue+0x2e>
    1658:	ed b7       	in	r30, 0x3d	; 61
    165a:	fe b7       	in	r31, 0x3e	; 62
    165c:	31 96       	adiw	r30, 0x01	; 1
    165e:	80 e6       	ldi	r24, 0x60	; 96
    1660:	90 e0       	ldi	r25, 0x00	; 0
    1662:	91 83       	std	Z+1, r25	; 0x01
    1664:	80 83       	st	Z, r24
    1666:	0e 94 9a 0d 	call	0x1b34	; 0x1b34 <printf>
    166a:	0f 90       	pop	r0
    166c:	0f 90       	pop	r0
    166e:	67 c0       	rjmp	.+206    	; 0x173e <GPIO_PinValue+0x114>
    }
    else
    {
        switch (portId)
    1670:	8a 81       	ldd	r24, Y+2	; 0x02
    1672:	28 2f       	mov	r18, r24
    1674:	30 e0       	ldi	r19, 0x00	; 0
    1676:	3d 83       	std	Y+5, r19	; 0x05
    1678:	2c 83       	std	Y+4, r18	; 0x04
    167a:	4c 81       	ldd	r20, Y+4	; 0x04
    167c:	5d 81       	ldd	r21, Y+5	; 0x05
    167e:	41 30       	cpi	r20, 0x01	; 1
    1680:	51 05       	cpc	r21, r1
    1682:	41 f1       	breq	.+80     	; 0x16d4 <GPIO_PinValue+0xaa>
    1684:	8c 81       	ldd	r24, Y+4	; 0x04
    1686:	9d 81       	ldd	r25, Y+5	; 0x05
    1688:	82 30       	cpi	r24, 0x02	; 2
    168a:	91 05       	cpc	r25, r1
    168c:	34 f4       	brge	.+12     	; 0x169a <GPIO_PinValue+0x70>
    168e:	2c 81       	ldd	r18, Y+4	; 0x04
    1690:	3d 81       	ldd	r19, Y+5	; 0x05
    1692:	21 15       	cp	r18, r1
    1694:	31 05       	cpc	r19, r1
    1696:	61 f0       	breq	.+24     	; 0x16b0 <GPIO_PinValue+0x86>
    1698:	52 c0       	rjmp	.+164    	; 0x173e <GPIO_PinValue+0x114>
    169a:	4c 81       	ldd	r20, Y+4	; 0x04
    169c:	5d 81       	ldd	r21, Y+5	; 0x05
    169e:	42 30       	cpi	r20, 0x02	; 2
    16a0:	51 05       	cpc	r21, r1
    16a2:	51 f1       	breq	.+84     	; 0x16f8 <GPIO_PinValue+0xce>
    16a4:	8c 81       	ldd	r24, Y+4	; 0x04
    16a6:	9d 81       	ldd	r25, Y+5	; 0x05
    16a8:	83 30       	cpi	r24, 0x03	; 3
    16aa:	91 05       	cpc	r25, r1
    16ac:	b9 f1       	breq	.+110    	; 0x171c <GPIO_PinValue+0xf2>
    16ae:	47 c0       	rjmp	.+142    	; 0x173e <GPIO_PinValue+0x114>
        {
        case PORTA:
            PinValue = (PINA_Ptr>>PinId) &1;
    16b0:	e9 e3       	ldi	r30, 0x39	; 57
    16b2:	f0 e0       	ldi	r31, 0x00	; 0
    16b4:	80 81       	ld	r24, Z
    16b6:	28 2f       	mov	r18, r24
    16b8:	30 e0       	ldi	r19, 0x00	; 0
    16ba:	8b 81       	ldd	r24, Y+3	; 0x03
    16bc:	88 2f       	mov	r24, r24
    16be:	90 e0       	ldi	r25, 0x00	; 0
    16c0:	a9 01       	movw	r20, r18
    16c2:	02 c0       	rjmp	.+4      	; 0x16c8 <GPIO_PinValue+0x9e>
    16c4:	55 95       	asr	r21
    16c6:	47 95       	ror	r20
    16c8:	8a 95       	dec	r24
    16ca:	e2 f7       	brpl	.-8      	; 0x16c4 <GPIO_PinValue+0x9a>
    16cc:	ca 01       	movw	r24, r20
    16ce:	81 70       	andi	r24, 0x01	; 1
    16d0:	89 83       	std	Y+1, r24	; 0x01
    16d2:	35 c0       	rjmp	.+106    	; 0x173e <GPIO_PinValue+0x114>
            break;
        case PORTB:
            PinValue = (PINB_Ptr>>PinId) &1;
    16d4:	e6 e3       	ldi	r30, 0x36	; 54
    16d6:	f0 e0       	ldi	r31, 0x00	; 0
    16d8:	80 81       	ld	r24, Z
    16da:	28 2f       	mov	r18, r24
    16dc:	30 e0       	ldi	r19, 0x00	; 0
    16de:	8b 81       	ldd	r24, Y+3	; 0x03
    16e0:	88 2f       	mov	r24, r24
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	a9 01       	movw	r20, r18
    16e6:	02 c0       	rjmp	.+4      	; 0x16ec <GPIO_PinValue+0xc2>
    16e8:	55 95       	asr	r21
    16ea:	47 95       	ror	r20
    16ec:	8a 95       	dec	r24
    16ee:	e2 f7       	brpl	.-8      	; 0x16e8 <GPIO_PinValue+0xbe>
    16f0:	ca 01       	movw	r24, r20
    16f2:	81 70       	andi	r24, 0x01	; 1
    16f4:	89 83       	std	Y+1, r24	; 0x01
    16f6:	23 c0       	rjmp	.+70     	; 0x173e <GPIO_PinValue+0x114>
            break;
        case PORTC:
            PinValue = (PINC_Ptr>>PinId) &1;
    16f8:	e3 e3       	ldi	r30, 0x33	; 51
    16fa:	f0 e0       	ldi	r31, 0x00	; 0
    16fc:	80 81       	ld	r24, Z
    16fe:	28 2f       	mov	r18, r24
    1700:	30 e0       	ldi	r19, 0x00	; 0
    1702:	8b 81       	ldd	r24, Y+3	; 0x03
    1704:	88 2f       	mov	r24, r24
    1706:	90 e0       	ldi	r25, 0x00	; 0
    1708:	a9 01       	movw	r20, r18
    170a:	02 c0       	rjmp	.+4      	; 0x1710 <GPIO_PinValue+0xe6>
    170c:	55 95       	asr	r21
    170e:	47 95       	ror	r20
    1710:	8a 95       	dec	r24
    1712:	e2 f7       	brpl	.-8      	; 0x170c <GPIO_PinValue+0xe2>
    1714:	ca 01       	movw	r24, r20
    1716:	81 70       	andi	r24, 0x01	; 1
    1718:	89 83       	std	Y+1, r24	; 0x01
    171a:	11 c0       	rjmp	.+34     	; 0x173e <GPIO_PinValue+0x114>
            break;
        case PORTD:
            PinValue = (PIND_Ptr>>PinId) &1;
    171c:	e0 e3       	ldi	r30, 0x30	; 48
    171e:	f0 e0       	ldi	r31, 0x00	; 0
    1720:	80 81       	ld	r24, Z
    1722:	28 2f       	mov	r18, r24
    1724:	30 e0       	ldi	r19, 0x00	; 0
    1726:	8b 81       	ldd	r24, Y+3	; 0x03
    1728:	88 2f       	mov	r24, r24
    172a:	90 e0       	ldi	r25, 0x00	; 0
    172c:	a9 01       	movw	r20, r18
    172e:	02 c0       	rjmp	.+4      	; 0x1734 <GPIO_PinValue+0x10a>
    1730:	55 95       	asr	r21
    1732:	47 95       	ror	r20
    1734:	8a 95       	dec	r24
    1736:	e2 f7       	brpl	.-8      	; 0x1730 <GPIO_PinValue+0x106>
    1738:	ca 01       	movw	r24, r20
    173a:	81 70       	andi	r24, 0x01	; 1
    173c:	89 83       	std	Y+1, r24	; 0x01
            break;
        default:
            break;
        }
    }
    return PinValue;
    173e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1740:	0f 90       	pop	r0
    1742:	0f 90       	pop	r0
    1744:	0f 90       	pop	r0
    1746:	0f 90       	pop	r0
    1748:	0f 90       	pop	r0
    174a:	cf 91       	pop	r28
    174c:	df 91       	pop	r29
    174e:	08 95       	ret

00001750 <LED_ON>:
 *  Created on: Aug 22, 2023
 *      Author: ahmedomar
 */

Error_state LED_ON()
{
    1750:	df 93       	push	r29
    1752:	cf 93       	push	r28
    1754:	00 d0       	rcall	.+0      	; 0x1756 <LED_ON+0x6>
    1756:	00 d0       	rcall	.+0      	; 0x1758 <LED_ON+0x8>
    1758:	cd b7       	in	r28, 0x3d	; 61
    175a:	de b7       	in	r29, 0x3e	; 62
    // make local variables for error and pointer
    Error_state local_error = NULL_POINTER;
    175c:	1c 82       	std	Y+4, r1	; 0x04
    // if the devloper in hal layer need to change the index
    LED_T *LED_PTR = &Arr_Leds[1];
    175e:	8b e2       	ldi	r24, 0x2B	; 43
    1760:	91 e0       	ldi	r25, 0x01	; 1
    1762:	9b 83       	std	Y+3, r25	; 0x03
    1764:	8a 83       	std	Y+2, r24	; 0x02
    // first check the null pointer
    if (NULL == LED_PTR)
    1766:	8a 81       	ldd	r24, Y+2	; 0x02
    1768:	9b 81       	ldd	r25, Y+3	; 0x03
    176a:	00 97       	sbiw	r24, 0x00	; 0
    176c:	11 f4       	brne	.+4      	; 0x1772 <LED_ON+0x22>
    {
        local_error = NULL_POINTER;
    176e:	1c 82       	std	Y+4, r1	; 0x04
    1770:	37 c0       	rjmp	.+110    	; 0x17e0 <LED_ON+0x90>
    }
    else
    {
        // check led is valid
        for (u8 LoopIteratorOne = 0; LoopIteratorOne < NumberOfLeds; LoopIteratorOne++)
    1772:	19 82       	std	Y+1, r1	; 0x01
    1774:	0e c0       	rjmp	.+28     	; 0x1792 <LED_ON+0x42>
        {
            if (LoopIteratorOne == LED_PTR->LED_ID)
    1776:	ea 81       	ldd	r30, Y+2	; 0x02
    1778:	fb 81       	ldd	r31, Y+3	; 0x03
    177a:	90 81       	ld	r25, Z
    177c:	89 81       	ldd	r24, Y+1	; 0x01
    177e:	98 17       	cp	r25, r24
    1780:	19 f4       	brne	.+6      	; 0x1788 <LED_ON+0x38>
            {
                local_error = LED_VALID;
    1782:	82 e0       	ldi	r24, 0x02	; 2
    1784:	8c 83       	std	Y+4, r24	; 0x04
    1786:	0a c0       	rjmp	.+20     	; 0x179c <LED_ON+0x4c>
                break;
            }
            else
            {
                local_error = LED_NOT_VALID;
    1788:	81 e0       	ldi	r24, 0x01	; 1
    178a:	8c 83       	std	Y+4, r24	; 0x04
        local_error = NULL_POINTER;
    }
    else
    {
        // check led is valid
        for (u8 LoopIteratorOne = 0; LoopIteratorOne < NumberOfLeds; LoopIteratorOne++)
    178c:	89 81       	ldd	r24, Y+1	; 0x01
    178e:	8f 5f       	subi	r24, 0xFF	; 255
    1790:	89 83       	std	Y+1, r24	; 0x01
    1792:	90 91 26 01 	lds	r25, 0x0126
    1796:	89 81       	ldd	r24, Y+1	; 0x01
    1798:	89 17       	cp	r24, r25
    179a:	68 f3       	brcs	.-38     	; 0x1776 <LED_ON+0x26>
            else
            {
                local_error = LED_NOT_VALID;
            }
        }
        if (LED_VALID == local_error)
    179c:	8c 81       	ldd	r24, Y+4	; 0x04
    179e:	82 30       	cpi	r24, 0x02	; 2
    17a0:	f9 f4       	brne	.+62     	; 0x17e0 <LED_ON+0x90>
        {
            local_error = Not_Working;
    17a2:	83 e0       	ldi	r24, 0x03	; 3
    17a4:	8c 83       	std	Y+4, r24	; 0x04
            LED_PTR->PIN_VAL = high_value;
    17a6:	ea 81       	ldd	r30, Y+2	; 0x02
    17a8:	fb 81       	ldd	r31, Y+3	; 0x03
    17aa:	81 e0       	ldi	r24, 0x01	; 1
    17ac:	83 83       	std	Z+3, r24	; 0x03
            GPIO_setPindDirection(LED_PTR->PORT, LED_PTR->PIN, Output_direction);
    17ae:	ea 81       	ldd	r30, Y+2	; 0x02
    17b0:	fb 81       	ldd	r31, Y+3	; 0x03
    17b2:	81 81       	ldd	r24, Z+1	; 0x01
    17b4:	ea 81       	ldd	r30, Y+2	; 0x02
    17b6:	fb 81       	ldd	r31, Y+3	; 0x03
    17b8:	92 81       	ldd	r25, Z+2	; 0x02
    17ba:	69 2f       	mov	r22, r25
    17bc:	41 e0       	ldi	r20, 0x01	; 1
    17be:	0e 94 47 09 	call	0x128e	; 0x128e <GPIO_setPindDirection>
            GPIO_setPinValue(LED_PTR->PORT, LED_PTR->PIN, LED_PTR->PIN_VAL);
    17c2:	ea 81       	ldd	r30, Y+2	; 0x02
    17c4:	fb 81       	ldd	r31, Y+3	; 0x03
    17c6:	81 81       	ldd	r24, Z+1	; 0x01
    17c8:	ea 81       	ldd	r30, Y+2	; 0x02
    17ca:	fb 81       	ldd	r31, Y+3	; 0x03
    17cc:	22 81       	ldd	r18, Z+2	; 0x02
    17ce:	ea 81       	ldd	r30, Y+2	; 0x02
    17d0:	fb 81       	ldd	r31, Y+3	; 0x03
    17d2:	93 81       	ldd	r25, Z+3	; 0x03
    17d4:	62 2f       	mov	r22, r18
    17d6:	49 2f       	mov	r20, r25
    17d8:	0e 94 a8 06 	call	0xd50	; 0xd50 <GPIO_setPinValue>
            local_error = Working;
    17dc:	84 e0       	ldi	r24, 0x04	; 4
    17de:	8c 83       	std	Y+4, r24	; 0x04
        else
        {
        }
    }

    return local_error;
    17e0:	8c 81       	ldd	r24, Y+4	; 0x04
}
    17e2:	0f 90       	pop	r0
    17e4:	0f 90       	pop	r0
    17e6:	0f 90       	pop	r0
    17e8:	0f 90       	pop	r0
    17ea:	cf 91       	pop	r28
    17ec:	df 91       	pop	r29
    17ee:	08 95       	ret

000017f0 <LED_OFF>:

Error_state LED_OFF()
{
    17f0:	df 93       	push	r29
    17f2:	cf 93       	push	r28
    17f4:	00 d0       	rcall	.+0      	; 0x17f6 <LED_OFF+0x6>
    17f6:	00 d0       	rcall	.+0      	; 0x17f8 <LED_OFF+0x8>
    17f8:	cd b7       	in	r28, 0x3d	; 61
    17fa:	de b7       	in	r29, 0x3e	; 62
    // make local variables for error and pointer
    Error_state local_error = NULL_POINTER;
    17fc:	1c 82       	std	Y+4, r1	; 0x04
    // if the devloper in hal layer need to change the index
    LED_T *LED_PTR = &Arr_Leds[1];
    17fe:	8b e2       	ldi	r24, 0x2B	; 43
    1800:	91 e0       	ldi	r25, 0x01	; 1
    1802:	9b 83       	std	Y+3, r25	; 0x03
    1804:	8a 83       	std	Y+2, r24	; 0x02
    // first check the null pointer
    if (NULL == LED_PTR)
    1806:	8a 81       	ldd	r24, Y+2	; 0x02
    1808:	9b 81       	ldd	r25, Y+3	; 0x03
    180a:	00 97       	sbiw	r24, 0x00	; 0
    180c:	11 f4       	brne	.+4      	; 0x1812 <LED_OFF+0x22>
    {
        local_error = NULL_POINTER;
    180e:	1c 82       	std	Y+4, r1	; 0x04
    1810:	36 c0       	rjmp	.+108    	; 0x187e <LED_OFF+0x8e>
    }
    else
    {
        // check led is valid
        for (u8 LoopIteratorOne = 0; LoopIteratorOne < NumberOfLeds; LoopIteratorOne++)
    1812:	19 82       	std	Y+1, r1	; 0x01
    1814:	0e c0       	rjmp	.+28     	; 0x1832 <LED_OFF+0x42>
        {
            if (LoopIteratorOne == LED_PTR->LED_ID)
    1816:	ea 81       	ldd	r30, Y+2	; 0x02
    1818:	fb 81       	ldd	r31, Y+3	; 0x03
    181a:	90 81       	ld	r25, Z
    181c:	89 81       	ldd	r24, Y+1	; 0x01
    181e:	98 17       	cp	r25, r24
    1820:	19 f4       	brne	.+6      	; 0x1828 <LED_OFF+0x38>
            {
                local_error = LED_VALID;
    1822:	82 e0       	ldi	r24, 0x02	; 2
    1824:	8c 83       	std	Y+4, r24	; 0x04
    1826:	0a c0       	rjmp	.+20     	; 0x183c <LED_OFF+0x4c>
                break;
            }
            else
            {
                local_error = LED_NOT_VALID;
    1828:	81 e0       	ldi	r24, 0x01	; 1
    182a:	8c 83       	std	Y+4, r24	; 0x04
        local_error = NULL_POINTER;
    }
    else
    {
        // check led is valid
        for (u8 LoopIteratorOne = 0; LoopIteratorOne < NumberOfLeds; LoopIteratorOne++)
    182c:	89 81       	ldd	r24, Y+1	; 0x01
    182e:	8f 5f       	subi	r24, 0xFF	; 255
    1830:	89 83       	std	Y+1, r24	; 0x01
    1832:	90 91 26 01 	lds	r25, 0x0126
    1836:	89 81       	ldd	r24, Y+1	; 0x01
    1838:	89 17       	cp	r24, r25
    183a:	68 f3       	brcs	.-38     	; 0x1816 <LED_OFF+0x26>
            else
            {
                local_error = LED_NOT_VALID;
            }
        }
        if (LED_VALID == local_error)
    183c:	8c 81       	ldd	r24, Y+4	; 0x04
    183e:	82 30       	cpi	r24, 0x02	; 2
    1840:	f1 f4       	brne	.+60     	; 0x187e <LED_OFF+0x8e>
        {
            local_error = Working;
    1842:	84 e0       	ldi	r24, 0x04	; 4
    1844:	8c 83       	std	Y+4, r24	; 0x04
            LED_PTR->PIN_VAL = low_value;
    1846:	ea 81       	ldd	r30, Y+2	; 0x02
    1848:	fb 81       	ldd	r31, Y+3	; 0x03
    184a:	13 82       	std	Z+3, r1	; 0x03
            GPIO_setPindDirection(LED_PTR->PORT, LED_PTR->PIN, Output_direction);
    184c:	ea 81       	ldd	r30, Y+2	; 0x02
    184e:	fb 81       	ldd	r31, Y+3	; 0x03
    1850:	81 81       	ldd	r24, Z+1	; 0x01
    1852:	ea 81       	ldd	r30, Y+2	; 0x02
    1854:	fb 81       	ldd	r31, Y+3	; 0x03
    1856:	92 81       	ldd	r25, Z+2	; 0x02
    1858:	69 2f       	mov	r22, r25
    185a:	41 e0       	ldi	r20, 0x01	; 1
    185c:	0e 94 47 09 	call	0x128e	; 0x128e <GPIO_setPindDirection>
            GPIO_setPinValue(LED_PTR->PORT, LED_PTR->PIN, LED_PTR->PIN_VAL);
    1860:	ea 81       	ldd	r30, Y+2	; 0x02
    1862:	fb 81       	ldd	r31, Y+3	; 0x03
    1864:	81 81       	ldd	r24, Z+1	; 0x01
    1866:	ea 81       	ldd	r30, Y+2	; 0x02
    1868:	fb 81       	ldd	r31, Y+3	; 0x03
    186a:	22 81       	ldd	r18, Z+2	; 0x02
    186c:	ea 81       	ldd	r30, Y+2	; 0x02
    186e:	fb 81       	ldd	r31, Y+3	; 0x03
    1870:	93 81       	ldd	r25, Z+3	; 0x03
    1872:	62 2f       	mov	r22, r18
    1874:	49 2f       	mov	r20, r25
    1876:	0e 94 a8 06 	call	0xd50	; 0xd50 <GPIO_setPinValue>
            local_error = Not_Working;
    187a:	83 e0       	ldi	r24, 0x03	; 3
    187c:	8c 83       	std	Y+4, r24	; 0x04
        else
        {
        }
    }

    return local_error;
    187e:	8c 81       	ldd	r24, Y+4	; 0x04
}
    1880:	0f 90       	pop	r0
    1882:	0f 90       	pop	r0
    1884:	0f 90       	pop	r0
    1886:	0f 90       	pop	r0
    1888:	cf 91       	pop	r28
    188a:	df 91       	pop	r29
    188c:	08 95       	ret

0000188e <Toggel_LED>:

Error_state Toggel_LED()
{
    188e:	df 93       	push	r29
    1890:	cf 93       	push	r28
    1892:	00 d0       	rcall	.+0      	; 0x1894 <Toggel_LED+0x6>
    1894:	0f 92       	push	r0
    1896:	cd b7       	in	r28, 0x3d	; 61
    1898:	de b7       	in	r29, 0x3e	; 62
	// make local variables for error and pointer
    Error_state local_error = NULL_POINTER;
    189a:	1b 82       	std	Y+3, r1	; 0x03
    // if the devloper in hal layer need to change the index
    LED_T *LED_PTR = &Arr_Leds[1];
    189c:	8b e2       	ldi	r24, 0x2B	; 43
    189e:	91 e0       	ldi	r25, 0x01	; 1
    18a0:	9a 83       	std	Y+2, r25	; 0x02
    18a2:	89 83       	std	Y+1, r24	; 0x01
    // first check the null pointer
    if (NULL == LED_PTR)
    18a4:	89 81       	ldd	r24, Y+1	; 0x01
    18a6:	9a 81       	ldd	r25, Y+2	; 0x02
    18a8:	00 97       	sbiw	r24, 0x00	; 0
    18aa:	11 f4       	brne	.+4      	; 0x18b0 <Toggel_LED+0x22>
    {
        local_error = NULL_POINTER;
    18ac:	1b 82       	std	Y+3, r1	; 0x03
    18ae:	11 c0       	rjmp	.+34     	; 0x18d2 <Toggel_LED+0x44>
    }
    else
    {
        if (high_value == LED_PTR->PIN_VAL)
    18b0:	e9 81       	ldd	r30, Y+1	; 0x01
    18b2:	fa 81       	ldd	r31, Y+2	; 0x02
    18b4:	83 81       	ldd	r24, Z+3	; 0x03
    18b6:	81 30       	cpi	r24, 0x01	; 1
    18b8:	21 f4       	brne	.+8      	; 0x18c2 <Toggel_LED+0x34>
        {
            local_error = LED_OFF();
    18ba:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <LED_OFF>
    18be:	8b 83       	std	Y+3, r24	; 0x03
    18c0:	08 c0       	rjmp	.+16     	; 0x18d2 <Toggel_LED+0x44>
        }
        else if (low_value == LED_PTR->PIN_VAL)
    18c2:	e9 81       	ldd	r30, Y+1	; 0x01
    18c4:	fa 81       	ldd	r31, Y+2	; 0x02
    18c6:	83 81       	ldd	r24, Z+3	; 0x03
    18c8:	88 23       	and	r24, r24
    18ca:	19 f4       	brne	.+6      	; 0x18d2 <Toggel_LED+0x44>
        {
            local_error = LED_ON();
    18cc:	0e 94 a8 0b 	call	0x1750	; 0x1750 <LED_ON>
    18d0:	8b 83       	std	Y+3, r24	; 0x03
        }
        
    }
    

    return local_error;
    18d2:	8b 81       	ldd	r24, Y+3	; 0x03
}
    18d4:	0f 90       	pop	r0
    18d6:	0f 90       	pop	r0
    18d8:	0f 90       	pop	r0
    18da:	cf 91       	pop	r28
    18dc:	df 91       	pop	r29
    18de:	08 95       	ret

000018e0 <main>:
 *      Author: ahmedomar
 */
#include "../HAL/LED.h"

int main(void)
{
    18e0:	df 93       	push	r29
    18e2:	cf 93       	push	r28
    18e4:	cd b7       	in	r28, 0x3d	; 61
    18e6:	de b7       	in	r29, 0x3e	; 62
    18e8:	6c 97       	sbiw	r28, 0x1c	; 28
    18ea:	0f b6       	in	r0, 0x3f	; 63
    18ec:	f8 94       	cli
    18ee:	de bf       	out	0x3e, r29	; 62
    18f0:	0f be       	out	0x3f, r0	; 63
    18f2:	cd bf       	out	0x3d, r28	; 61

	while (1)
	{
		LED_OFF();
    18f4:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <LED_OFF>
    18f8:	80 e0       	ldi	r24, 0x00	; 0
    18fa:	90 e0       	ldi	r25, 0x00	; 0
    18fc:	aa e7       	ldi	r26, 0x7A	; 122
    18fe:	b4 e4       	ldi	r27, 0x44	; 68
    1900:	89 8f       	std	Y+25, r24	; 0x19
    1902:	9a 8f       	std	Y+26, r25	; 0x1a
    1904:	ab 8f       	std	Y+27, r26	; 0x1b
    1906:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1908:	69 8d       	ldd	r22, Y+25	; 0x19
    190a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    190c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    190e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1910:	20 e0       	ldi	r18, 0x00	; 0
    1912:	30 e0       	ldi	r19, 0x00	; 0
    1914:	4a ef       	ldi	r20, 0xFA	; 250
    1916:	54 e4       	ldi	r21, 0x44	; 68
    1918:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    191c:	dc 01       	movw	r26, r24
    191e:	cb 01       	movw	r24, r22
    1920:	8d 8b       	std	Y+21, r24	; 0x15
    1922:	9e 8b       	std	Y+22, r25	; 0x16
    1924:	af 8b       	std	Y+23, r26	; 0x17
    1926:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1928:	6d 89       	ldd	r22, Y+21	; 0x15
    192a:	7e 89       	ldd	r23, Y+22	; 0x16
    192c:	8f 89       	ldd	r24, Y+23	; 0x17
    192e:	98 8d       	ldd	r25, Y+24	; 0x18
    1930:	20 e0       	ldi	r18, 0x00	; 0
    1932:	30 e0       	ldi	r19, 0x00	; 0
    1934:	40 e8       	ldi	r20, 0x80	; 128
    1936:	5f e3       	ldi	r21, 0x3F	; 63
    1938:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    193c:	88 23       	and	r24, r24
    193e:	2c f4       	brge	.+10     	; 0x194a <main+0x6a>
		__ticks = 1;
    1940:	81 e0       	ldi	r24, 0x01	; 1
    1942:	90 e0       	ldi	r25, 0x00	; 0
    1944:	9c 8b       	std	Y+20, r25	; 0x14
    1946:	8b 8b       	std	Y+19, r24	; 0x13
    1948:	3f c0       	rjmp	.+126    	; 0x19c8 <main+0xe8>
	else if (__tmp > 65535)
    194a:	6d 89       	ldd	r22, Y+21	; 0x15
    194c:	7e 89       	ldd	r23, Y+22	; 0x16
    194e:	8f 89       	ldd	r24, Y+23	; 0x17
    1950:	98 8d       	ldd	r25, Y+24	; 0x18
    1952:	20 e0       	ldi	r18, 0x00	; 0
    1954:	3f ef       	ldi	r19, 0xFF	; 255
    1956:	4f e7       	ldi	r20, 0x7F	; 127
    1958:	57 e4       	ldi	r21, 0x47	; 71
    195a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    195e:	18 16       	cp	r1, r24
    1960:	4c f5       	brge	.+82     	; 0x19b4 <main+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1962:	69 8d       	ldd	r22, Y+25	; 0x19
    1964:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1966:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1968:	9c 8d       	ldd	r25, Y+28	; 0x1c
    196a:	20 e0       	ldi	r18, 0x00	; 0
    196c:	30 e0       	ldi	r19, 0x00	; 0
    196e:	40 e2       	ldi	r20, 0x20	; 32
    1970:	51 e4       	ldi	r21, 0x41	; 65
    1972:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1976:	dc 01       	movw	r26, r24
    1978:	cb 01       	movw	r24, r22
    197a:	bc 01       	movw	r22, r24
    197c:	cd 01       	movw	r24, r26
    197e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1982:	dc 01       	movw	r26, r24
    1984:	cb 01       	movw	r24, r22
    1986:	9c 8b       	std	Y+20, r25	; 0x14
    1988:	8b 8b       	std	Y+19, r24	; 0x13
    198a:	0f c0       	rjmp	.+30     	; 0x19aa <main+0xca>
    198c:	88 ec       	ldi	r24, 0xC8	; 200
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	9a 8b       	std	Y+18, r25	; 0x12
    1992:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1994:	89 89       	ldd	r24, Y+17	; 0x11
    1996:	9a 89       	ldd	r25, Y+18	; 0x12
    1998:	01 97       	sbiw	r24, 0x01	; 1
    199a:	f1 f7       	brne	.-4      	; 0x1998 <main+0xb8>
    199c:	9a 8b       	std	Y+18, r25	; 0x12
    199e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19a0:	8b 89       	ldd	r24, Y+19	; 0x13
    19a2:	9c 89       	ldd	r25, Y+20	; 0x14
    19a4:	01 97       	sbiw	r24, 0x01	; 1
    19a6:	9c 8b       	std	Y+20, r25	; 0x14
    19a8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19aa:	8b 89       	ldd	r24, Y+19	; 0x13
    19ac:	9c 89       	ldd	r25, Y+20	; 0x14
    19ae:	00 97       	sbiw	r24, 0x00	; 0
    19b0:	69 f7       	brne	.-38     	; 0x198c <main+0xac>
    19b2:	14 c0       	rjmp	.+40     	; 0x19dc <main+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19b4:	6d 89       	ldd	r22, Y+21	; 0x15
    19b6:	7e 89       	ldd	r23, Y+22	; 0x16
    19b8:	8f 89       	ldd	r24, Y+23	; 0x17
    19ba:	98 8d       	ldd	r25, Y+24	; 0x18
    19bc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    19c0:	dc 01       	movw	r26, r24
    19c2:	cb 01       	movw	r24, r22
    19c4:	9c 8b       	std	Y+20, r25	; 0x14
    19c6:	8b 8b       	std	Y+19, r24	; 0x13
    19c8:	8b 89       	ldd	r24, Y+19	; 0x13
    19ca:	9c 89       	ldd	r25, Y+20	; 0x14
    19cc:	98 8b       	std	Y+16, r25	; 0x10
    19ce:	8f 87       	std	Y+15, r24	; 0x0f
    19d0:	8f 85       	ldd	r24, Y+15	; 0x0f
    19d2:	98 89       	ldd	r25, Y+16	; 0x10
    19d4:	01 97       	sbiw	r24, 0x01	; 1
    19d6:	f1 f7       	brne	.-4      	; 0x19d4 <main+0xf4>
    19d8:	98 8b       	std	Y+16, r25	; 0x10
    19da:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(1000);
		Toggel_LED();
    19dc:	0e 94 47 0c 	call	0x188e	; 0x188e <Toggel_LED>
    19e0:	80 e0       	ldi	r24, 0x00	; 0
    19e2:	90 e0       	ldi	r25, 0x00	; 0
    19e4:	aa e7       	ldi	r26, 0x7A	; 122
    19e6:	b4 e4       	ldi	r27, 0x44	; 68
    19e8:	8b 87       	std	Y+11, r24	; 0x0b
    19ea:	9c 87       	std	Y+12, r25	; 0x0c
    19ec:	ad 87       	std	Y+13, r26	; 0x0d
    19ee:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19f0:	6b 85       	ldd	r22, Y+11	; 0x0b
    19f2:	7c 85       	ldd	r23, Y+12	; 0x0c
    19f4:	8d 85       	ldd	r24, Y+13	; 0x0d
    19f6:	9e 85       	ldd	r25, Y+14	; 0x0e
    19f8:	20 e0       	ldi	r18, 0x00	; 0
    19fa:	30 e0       	ldi	r19, 0x00	; 0
    19fc:	4a ef       	ldi	r20, 0xFA	; 250
    19fe:	54 e4       	ldi	r21, 0x44	; 68
    1a00:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a04:	dc 01       	movw	r26, r24
    1a06:	cb 01       	movw	r24, r22
    1a08:	8f 83       	std	Y+7, r24	; 0x07
    1a0a:	98 87       	std	Y+8, r25	; 0x08
    1a0c:	a9 87       	std	Y+9, r26	; 0x09
    1a0e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1a10:	6f 81       	ldd	r22, Y+7	; 0x07
    1a12:	78 85       	ldd	r23, Y+8	; 0x08
    1a14:	89 85       	ldd	r24, Y+9	; 0x09
    1a16:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a18:	20 e0       	ldi	r18, 0x00	; 0
    1a1a:	30 e0       	ldi	r19, 0x00	; 0
    1a1c:	40 e8       	ldi	r20, 0x80	; 128
    1a1e:	5f e3       	ldi	r21, 0x3F	; 63
    1a20:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1a24:	88 23       	and	r24, r24
    1a26:	2c f4       	brge	.+10     	; 0x1a32 <main+0x152>
		__ticks = 1;
    1a28:	81 e0       	ldi	r24, 0x01	; 1
    1a2a:	90 e0       	ldi	r25, 0x00	; 0
    1a2c:	9e 83       	std	Y+6, r25	; 0x06
    1a2e:	8d 83       	std	Y+5, r24	; 0x05
    1a30:	3f c0       	rjmp	.+126    	; 0x1ab0 <main+0x1d0>
	else if (__tmp > 65535)
    1a32:	6f 81       	ldd	r22, Y+7	; 0x07
    1a34:	78 85       	ldd	r23, Y+8	; 0x08
    1a36:	89 85       	ldd	r24, Y+9	; 0x09
    1a38:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a3a:	20 e0       	ldi	r18, 0x00	; 0
    1a3c:	3f ef       	ldi	r19, 0xFF	; 255
    1a3e:	4f e7       	ldi	r20, 0x7F	; 127
    1a40:	57 e4       	ldi	r21, 0x47	; 71
    1a42:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1a46:	18 16       	cp	r1, r24
    1a48:	4c f5       	brge	.+82     	; 0x1a9c <main+0x1bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a4a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a4c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a4e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a50:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a52:	20 e0       	ldi	r18, 0x00	; 0
    1a54:	30 e0       	ldi	r19, 0x00	; 0
    1a56:	40 e2       	ldi	r20, 0x20	; 32
    1a58:	51 e4       	ldi	r21, 0x41	; 65
    1a5a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a5e:	dc 01       	movw	r26, r24
    1a60:	cb 01       	movw	r24, r22
    1a62:	bc 01       	movw	r22, r24
    1a64:	cd 01       	movw	r24, r26
    1a66:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a6a:	dc 01       	movw	r26, r24
    1a6c:	cb 01       	movw	r24, r22
    1a6e:	9e 83       	std	Y+6, r25	; 0x06
    1a70:	8d 83       	std	Y+5, r24	; 0x05
    1a72:	0f c0       	rjmp	.+30     	; 0x1a92 <main+0x1b2>
    1a74:	88 ec       	ldi	r24, 0xC8	; 200
    1a76:	90 e0       	ldi	r25, 0x00	; 0
    1a78:	9c 83       	std	Y+4, r25	; 0x04
    1a7a:	8b 83       	std	Y+3, r24	; 0x03
    1a7c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a7e:	9c 81       	ldd	r25, Y+4	; 0x04
    1a80:	01 97       	sbiw	r24, 0x01	; 1
    1a82:	f1 f7       	brne	.-4      	; 0x1a80 <main+0x1a0>
    1a84:	9c 83       	std	Y+4, r25	; 0x04
    1a86:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a88:	8d 81       	ldd	r24, Y+5	; 0x05
    1a8a:	9e 81       	ldd	r25, Y+6	; 0x06
    1a8c:	01 97       	sbiw	r24, 0x01	; 1
    1a8e:	9e 83       	std	Y+6, r25	; 0x06
    1a90:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a92:	8d 81       	ldd	r24, Y+5	; 0x05
    1a94:	9e 81       	ldd	r25, Y+6	; 0x06
    1a96:	00 97       	sbiw	r24, 0x00	; 0
    1a98:	69 f7       	brne	.-38     	; 0x1a74 <main+0x194>
    1a9a:	2c cf       	rjmp	.-424    	; 0x18f4 <main+0x14>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a9c:	6f 81       	ldd	r22, Y+7	; 0x07
    1a9e:	78 85       	ldd	r23, Y+8	; 0x08
    1aa0:	89 85       	ldd	r24, Y+9	; 0x09
    1aa2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1aa4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1aa8:	dc 01       	movw	r26, r24
    1aaa:	cb 01       	movw	r24, r22
    1aac:	9e 83       	std	Y+6, r25	; 0x06
    1aae:	8d 83       	std	Y+5, r24	; 0x05
    1ab0:	8d 81       	ldd	r24, Y+5	; 0x05
    1ab2:	9e 81       	ldd	r25, Y+6	; 0x06
    1ab4:	9a 83       	std	Y+2, r25	; 0x02
    1ab6:	89 83       	std	Y+1, r24	; 0x01
    1ab8:	89 81       	ldd	r24, Y+1	; 0x01
    1aba:	9a 81       	ldd	r25, Y+2	; 0x02
    1abc:	01 97       	sbiw	r24, 0x01	; 1
    1abe:	f1 f7       	brne	.-4      	; 0x1abc <main+0x1dc>
    1ac0:	9a 83       	std	Y+2, r25	; 0x02
    1ac2:	89 83       	std	Y+1, r24	; 0x01
    1ac4:	17 cf       	rjmp	.-466    	; 0x18f4 <main+0x14>

00001ac6 <__prologue_saves__>:
    1ac6:	2f 92       	push	r2
    1ac8:	3f 92       	push	r3
    1aca:	4f 92       	push	r4
    1acc:	5f 92       	push	r5
    1ace:	6f 92       	push	r6
    1ad0:	7f 92       	push	r7
    1ad2:	8f 92       	push	r8
    1ad4:	9f 92       	push	r9
    1ad6:	af 92       	push	r10
    1ad8:	bf 92       	push	r11
    1ada:	cf 92       	push	r12
    1adc:	df 92       	push	r13
    1ade:	ef 92       	push	r14
    1ae0:	ff 92       	push	r15
    1ae2:	0f 93       	push	r16
    1ae4:	1f 93       	push	r17
    1ae6:	cf 93       	push	r28
    1ae8:	df 93       	push	r29
    1aea:	cd b7       	in	r28, 0x3d	; 61
    1aec:	de b7       	in	r29, 0x3e	; 62
    1aee:	ca 1b       	sub	r28, r26
    1af0:	db 0b       	sbc	r29, r27
    1af2:	0f b6       	in	r0, 0x3f	; 63
    1af4:	f8 94       	cli
    1af6:	de bf       	out	0x3e, r29	; 62
    1af8:	0f be       	out	0x3f, r0	; 63
    1afa:	cd bf       	out	0x3d, r28	; 61
    1afc:	09 94       	ijmp

00001afe <__epilogue_restores__>:
    1afe:	2a 88       	ldd	r2, Y+18	; 0x12
    1b00:	39 88       	ldd	r3, Y+17	; 0x11
    1b02:	48 88       	ldd	r4, Y+16	; 0x10
    1b04:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b06:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b08:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b0a:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b0c:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b0e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b10:	b9 84       	ldd	r11, Y+9	; 0x09
    1b12:	c8 84       	ldd	r12, Y+8	; 0x08
    1b14:	df 80       	ldd	r13, Y+7	; 0x07
    1b16:	ee 80       	ldd	r14, Y+6	; 0x06
    1b18:	fd 80       	ldd	r15, Y+5	; 0x05
    1b1a:	0c 81       	ldd	r16, Y+4	; 0x04
    1b1c:	1b 81       	ldd	r17, Y+3	; 0x03
    1b1e:	aa 81       	ldd	r26, Y+2	; 0x02
    1b20:	b9 81       	ldd	r27, Y+1	; 0x01
    1b22:	ce 0f       	add	r28, r30
    1b24:	d1 1d       	adc	r29, r1
    1b26:	0f b6       	in	r0, 0x3f	; 63
    1b28:	f8 94       	cli
    1b2a:	de bf       	out	0x3e, r29	; 62
    1b2c:	0f be       	out	0x3f, r0	; 63
    1b2e:	cd bf       	out	0x3d, r28	; 61
    1b30:	ed 01       	movw	r28, r26
    1b32:	08 95       	ret

00001b34 <printf>:
    1b34:	a0 e0       	ldi	r26, 0x00	; 0
    1b36:	b0 e0       	ldi	r27, 0x00	; 0
    1b38:	e0 ea       	ldi	r30, 0xA0	; 160
    1b3a:	fd e0       	ldi	r31, 0x0D	; 13
    1b3c:	0c 94 73 0d 	jmp	0x1ae6	; 0x1ae6 <__prologue_saves__+0x20>
    1b40:	fe 01       	movw	r30, r28
    1b42:	35 96       	adiw	r30, 0x05	; 5
    1b44:	61 91       	ld	r22, Z+
    1b46:	71 91       	ld	r23, Z+
    1b48:	80 91 32 01 	lds	r24, 0x0132
    1b4c:	90 91 33 01 	lds	r25, 0x0133
    1b50:	af 01       	movw	r20, r30
    1b52:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <vfprintf>
    1b56:	20 96       	adiw	r28, 0x00	; 0
    1b58:	e2 e0       	ldi	r30, 0x02	; 2
    1b5a:	0c 94 8f 0d 	jmp	0x1b1e	; 0x1b1e <__epilogue_restores__+0x20>

00001b5e <vfprintf>:
    1b5e:	ab e0       	ldi	r26, 0x0B	; 11
    1b60:	b0 e0       	ldi	r27, 0x00	; 0
    1b62:	e5 eb       	ldi	r30, 0xB5	; 181
    1b64:	fd e0       	ldi	r31, 0x0D	; 13
    1b66:	0c 94 63 0d 	jmp	0x1ac6	; 0x1ac6 <__prologue_saves__>
    1b6a:	3c 01       	movw	r6, r24
    1b6c:	2b 01       	movw	r4, r22
    1b6e:	5a 01       	movw	r10, r20
    1b70:	fc 01       	movw	r30, r24
    1b72:	17 82       	std	Z+7, r1	; 0x07
    1b74:	16 82       	std	Z+6, r1	; 0x06
    1b76:	83 81       	ldd	r24, Z+3	; 0x03
    1b78:	81 fd       	sbrc	r24, 1
    1b7a:	03 c0       	rjmp	.+6      	; 0x1b82 <vfprintf+0x24>
    1b7c:	6f ef       	ldi	r22, 0xFF	; 255
    1b7e:	7f ef       	ldi	r23, 0xFF	; 255
    1b80:	c6 c1       	rjmp	.+908    	; 0x1f0e <vfprintf+0x3b0>
    1b82:	9a e0       	ldi	r25, 0x0A	; 10
    1b84:	89 2e       	mov	r8, r25
    1b86:	1e 01       	movw	r2, r28
    1b88:	08 94       	sec
    1b8a:	21 1c       	adc	r2, r1
    1b8c:	31 1c       	adc	r3, r1
    1b8e:	f3 01       	movw	r30, r6
    1b90:	23 81       	ldd	r18, Z+3	; 0x03
    1b92:	f2 01       	movw	r30, r4
    1b94:	23 fd       	sbrc	r18, 3
    1b96:	85 91       	lpm	r24, Z+
    1b98:	23 ff       	sbrs	r18, 3
    1b9a:	81 91       	ld	r24, Z+
    1b9c:	2f 01       	movw	r4, r30
    1b9e:	88 23       	and	r24, r24
    1ba0:	09 f4       	brne	.+2      	; 0x1ba4 <vfprintf+0x46>
    1ba2:	b2 c1       	rjmp	.+868    	; 0x1f08 <vfprintf+0x3aa>
    1ba4:	85 32       	cpi	r24, 0x25	; 37
    1ba6:	39 f4       	brne	.+14     	; 0x1bb6 <vfprintf+0x58>
    1ba8:	23 fd       	sbrc	r18, 3
    1baa:	85 91       	lpm	r24, Z+
    1bac:	23 ff       	sbrs	r18, 3
    1bae:	81 91       	ld	r24, Z+
    1bb0:	2f 01       	movw	r4, r30
    1bb2:	85 32       	cpi	r24, 0x25	; 37
    1bb4:	29 f4       	brne	.+10     	; 0x1bc0 <vfprintf+0x62>
    1bb6:	90 e0       	ldi	r25, 0x00	; 0
    1bb8:	b3 01       	movw	r22, r6
    1bba:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <fputc>
    1bbe:	e7 cf       	rjmp	.-50     	; 0x1b8e <vfprintf+0x30>
    1bc0:	98 2f       	mov	r25, r24
    1bc2:	ff 24       	eor	r15, r15
    1bc4:	ee 24       	eor	r14, r14
    1bc6:	99 24       	eor	r9, r9
    1bc8:	ff e1       	ldi	r31, 0x1F	; 31
    1bca:	ff 15       	cp	r31, r15
    1bcc:	d0 f0       	brcs	.+52     	; 0x1c02 <vfprintf+0xa4>
    1bce:	9b 32       	cpi	r25, 0x2B	; 43
    1bd0:	69 f0       	breq	.+26     	; 0x1bec <vfprintf+0x8e>
    1bd2:	9c 32       	cpi	r25, 0x2C	; 44
    1bd4:	28 f4       	brcc	.+10     	; 0x1be0 <vfprintf+0x82>
    1bd6:	90 32       	cpi	r25, 0x20	; 32
    1bd8:	59 f0       	breq	.+22     	; 0x1bf0 <vfprintf+0x92>
    1bda:	93 32       	cpi	r25, 0x23	; 35
    1bdc:	91 f4       	brne	.+36     	; 0x1c02 <vfprintf+0xa4>
    1bde:	0e c0       	rjmp	.+28     	; 0x1bfc <vfprintf+0x9e>
    1be0:	9d 32       	cpi	r25, 0x2D	; 45
    1be2:	49 f0       	breq	.+18     	; 0x1bf6 <vfprintf+0x98>
    1be4:	90 33       	cpi	r25, 0x30	; 48
    1be6:	69 f4       	brne	.+26     	; 0x1c02 <vfprintf+0xa4>
    1be8:	41 e0       	ldi	r20, 0x01	; 1
    1bea:	24 c0       	rjmp	.+72     	; 0x1c34 <vfprintf+0xd6>
    1bec:	52 e0       	ldi	r21, 0x02	; 2
    1bee:	f5 2a       	or	r15, r21
    1bf0:	84 e0       	ldi	r24, 0x04	; 4
    1bf2:	f8 2a       	or	r15, r24
    1bf4:	28 c0       	rjmp	.+80     	; 0x1c46 <vfprintf+0xe8>
    1bf6:	98 e0       	ldi	r25, 0x08	; 8
    1bf8:	f9 2a       	or	r15, r25
    1bfa:	25 c0       	rjmp	.+74     	; 0x1c46 <vfprintf+0xe8>
    1bfc:	e0 e1       	ldi	r30, 0x10	; 16
    1bfe:	fe 2a       	or	r15, r30
    1c00:	22 c0       	rjmp	.+68     	; 0x1c46 <vfprintf+0xe8>
    1c02:	f7 fc       	sbrc	r15, 7
    1c04:	29 c0       	rjmp	.+82     	; 0x1c58 <vfprintf+0xfa>
    1c06:	89 2f       	mov	r24, r25
    1c08:	80 53       	subi	r24, 0x30	; 48
    1c0a:	8a 30       	cpi	r24, 0x0A	; 10
    1c0c:	70 f4       	brcc	.+28     	; 0x1c2a <vfprintf+0xcc>
    1c0e:	f6 fe       	sbrs	r15, 6
    1c10:	05 c0       	rjmp	.+10     	; 0x1c1c <vfprintf+0xbe>
    1c12:	98 9c       	mul	r9, r8
    1c14:	90 2c       	mov	r9, r0
    1c16:	11 24       	eor	r1, r1
    1c18:	98 0e       	add	r9, r24
    1c1a:	15 c0       	rjmp	.+42     	; 0x1c46 <vfprintf+0xe8>
    1c1c:	e8 9c       	mul	r14, r8
    1c1e:	e0 2c       	mov	r14, r0
    1c20:	11 24       	eor	r1, r1
    1c22:	e8 0e       	add	r14, r24
    1c24:	f0 e2       	ldi	r31, 0x20	; 32
    1c26:	ff 2a       	or	r15, r31
    1c28:	0e c0       	rjmp	.+28     	; 0x1c46 <vfprintf+0xe8>
    1c2a:	9e 32       	cpi	r25, 0x2E	; 46
    1c2c:	29 f4       	brne	.+10     	; 0x1c38 <vfprintf+0xda>
    1c2e:	f6 fc       	sbrc	r15, 6
    1c30:	6b c1       	rjmp	.+726    	; 0x1f08 <vfprintf+0x3aa>
    1c32:	40 e4       	ldi	r20, 0x40	; 64
    1c34:	f4 2a       	or	r15, r20
    1c36:	07 c0       	rjmp	.+14     	; 0x1c46 <vfprintf+0xe8>
    1c38:	9c 36       	cpi	r25, 0x6C	; 108
    1c3a:	19 f4       	brne	.+6      	; 0x1c42 <vfprintf+0xe4>
    1c3c:	50 e8       	ldi	r21, 0x80	; 128
    1c3e:	f5 2a       	or	r15, r21
    1c40:	02 c0       	rjmp	.+4      	; 0x1c46 <vfprintf+0xe8>
    1c42:	98 36       	cpi	r25, 0x68	; 104
    1c44:	49 f4       	brne	.+18     	; 0x1c58 <vfprintf+0xfa>
    1c46:	f2 01       	movw	r30, r4
    1c48:	23 fd       	sbrc	r18, 3
    1c4a:	95 91       	lpm	r25, Z+
    1c4c:	23 ff       	sbrs	r18, 3
    1c4e:	91 91       	ld	r25, Z+
    1c50:	2f 01       	movw	r4, r30
    1c52:	99 23       	and	r25, r25
    1c54:	09 f0       	breq	.+2      	; 0x1c58 <vfprintf+0xfa>
    1c56:	b8 cf       	rjmp	.-144    	; 0x1bc8 <vfprintf+0x6a>
    1c58:	89 2f       	mov	r24, r25
    1c5a:	85 54       	subi	r24, 0x45	; 69
    1c5c:	83 30       	cpi	r24, 0x03	; 3
    1c5e:	18 f0       	brcs	.+6      	; 0x1c66 <vfprintf+0x108>
    1c60:	80 52       	subi	r24, 0x20	; 32
    1c62:	83 30       	cpi	r24, 0x03	; 3
    1c64:	38 f4       	brcc	.+14     	; 0x1c74 <vfprintf+0x116>
    1c66:	44 e0       	ldi	r20, 0x04	; 4
    1c68:	50 e0       	ldi	r21, 0x00	; 0
    1c6a:	a4 0e       	add	r10, r20
    1c6c:	b5 1e       	adc	r11, r21
    1c6e:	5f e3       	ldi	r21, 0x3F	; 63
    1c70:	59 83       	std	Y+1, r21	; 0x01
    1c72:	0f c0       	rjmp	.+30     	; 0x1c92 <vfprintf+0x134>
    1c74:	93 36       	cpi	r25, 0x63	; 99
    1c76:	31 f0       	breq	.+12     	; 0x1c84 <vfprintf+0x126>
    1c78:	93 37       	cpi	r25, 0x73	; 115
    1c7a:	79 f0       	breq	.+30     	; 0x1c9a <vfprintf+0x13c>
    1c7c:	93 35       	cpi	r25, 0x53	; 83
    1c7e:	09 f0       	breq	.+2      	; 0x1c82 <vfprintf+0x124>
    1c80:	56 c0       	rjmp	.+172    	; 0x1d2e <vfprintf+0x1d0>
    1c82:	20 c0       	rjmp	.+64     	; 0x1cc4 <vfprintf+0x166>
    1c84:	f5 01       	movw	r30, r10
    1c86:	80 81       	ld	r24, Z
    1c88:	89 83       	std	Y+1, r24	; 0x01
    1c8a:	42 e0       	ldi	r20, 0x02	; 2
    1c8c:	50 e0       	ldi	r21, 0x00	; 0
    1c8e:	a4 0e       	add	r10, r20
    1c90:	b5 1e       	adc	r11, r21
    1c92:	61 01       	movw	r12, r2
    1c94:	01 e0       	ldi	r16, 0x01	; 1
    1c96:	10 e0       	ldi	r17, 0x00	; 0
    1c98:	12 c0       	rjmp	.+36     	; 0x1cbe <vfprintf+0x160>
    1c9a:	f5 01       	movw	r30, r10
    1c9c:	c0 80       	ld	r12, Z
    1c9e:	d1 80       	ldd	r13, Z+1	; 0x01
    1ca0:	f6 fc       	sbrc	r15, 6
    1ca2:	03 c0       	rjmp	.+6      	; 0x1caa <vfprintf+0x14c>
    1ca4:	6f ef       	ldi	r22, 0xFF	; 255
    1ca6:	7f ef       	ldi	r23, 0xFF	; 255
    1ca8:	02 c0       	rjmp	.+4      	; 0x1cae <vfprintf+0x150>
    1caa:	69 2d       	mov	r22, r9
    1cac:	70 e0       	ldi	r23, 0x00	; 0
    1cae:	42 e0       	ldi	r20, 0x02	; 2
    1cb0:	50 e0       	ldi	r21, 0x00	; 0
    1cb2:	a4 0e       	add	r10, r20
    1cb4:	b5 1e       	adc	r11, r21
    1cb6:	c6 01       	movw	r24, r12
    1cb8:	0e 94 97 0f 	call	0x1f2e	; 0x1f2e <strnlen>
    1cbc:	8c 01       	movw	r16, r24
    1cbe:	5f e7       	ldi	r21, 0x7F	; 127
    1cc0:	f5 22       	and	r15, r21
    1cc2:	14 c0       	rjmp	.+40     	; 0x1cec <vfprintf+0x18e>
    1cc4:	f5 01       	movw	r30, r10
    1cc6:	c0 80       	ld	r12, Z
    1cc8:	d1 80       	ldd	r13, Z+1	; 0x01
    1cca:	f6 fc       	sbrc	r15, 6
    1ccc:	03 c0       	rjmp	.+6      	; 0x1cd4 <vfprintf+0x176>
    1cce:	6f ef       	ldi	r22, 0xFF	; 255
    1cd0:	7f ef       	ldi	r23, 0xFF	; 255
    1cd2:	02 c0       	rjmp	.+4      	; 0x1cd8 <vfprintf+0x17a>
    1cd4:	69 2d       	mov	r22, r9
    1cd6:	70 e0       	ldi	r23, 0x00	; 0
    1cd8:	42 e0       	ldi	r20, 0x02	; 2
    1cda:	50 e0       	ldi	r21, 0x00	; 0
    1cdc:	a4 0e       	add	r10, r20
    1cde:	b5 1e       	adc	r11, r21
    1ce0:	c6 01       	movw	r24, r12
    1ce2:	0e 94 8c 0f 	call	0x1f18	; 0x1f18 <strnlen_P>
    1ce6:	8c 01       	movw	r16, r24
    1ce8:	50 e8       	ldi	r21, 0x80	; 128
    1cea:	f5 2a       	or	r15, r21
    1cec:	f3 fe       	sbrs	r15, 3
    1cee:	07 c0       	rjmp	.+14     	; 0x1cfe <vfprintf+0x1a0>
    1cf0:	1a c0       	rjmp	.+52     	; 0x1d26 <vfprintf+0x1c8>
    1cf2:	80 e2       	ldi	r24, 0x20	; 32
    1cf4:	90 e0       	ldi	r25, 0x00	; 0
    1cf6:	b3 01       	movw	r22, r6
    1cf8:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <fputc>
    1cfc:	ea 94       	dec	r14
    1cfe:	8e 2d       	mov	r24, r14
    1d00:	90 e0       	ldi	r25, 0x00	; 0
    1d02:	08 17       	cp	r16, r24
    1d04:	19 07       	cpc	r17, r25
    1d06:	a8 f3       	brcs	.-22     	; 0x1cf2 <vfprintf+0x194>
    1d08:	0e c0       	rjmp	.+28     	; 0x1d26 <vfprintf+0x1c8>
    1d0a:	f6 01       	movw	r30, r12
    1d0c:	f7 fc       	sbrc	r15, 7
    1d0e:	85 91       	lpm	r24, Z+
    1d10:	f7 fe       	sbrs	r15, 7
    1d12:	81 91       	ld	r24, Z+
    1d14:	6f 01       	movw	r12, r30
    1d16:	90 e0       	ldi	r25, 0x00	; 0
    1d18:	b3 01       	movw	r22, r6
    1d1a:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <fputc>
    1d1e:	e1 10       	cpse	r14, r1
    1d20:	ea 94       	dec	r14
    1d22:	01 50       	subi	r16, 0x01	; 1
    1d24:	10 40       	sbci	r17, 0x00	; 0
    1d26:	01 15       	cp	r16, r1
    1d28:	11 05       	cpc	r17, r1
    1d2a:	79 f7       	brne	.-34     	; 0x1d0a <vfprintf+0x1ac>
    1d2c:	ea c0       	rjmp	.+468    	; 0x1f02 <vfprintf+0x3a4>
    1d2e:	94 36       	cpi	r25, 0x64	; 100
    1d30:	11 f0       	breq	.+4      	; 0x1d36 <vfprintf+0x1d8>
    1d32:	99 36       	cpi	r25, 0x69	; 105
    1d34:	69 f5       	brne	.+90     	; 0x1d90 <vfprintf+0x232>
    1d36:	f7 fe       	sbrs	r15, 7
    1d38:	08 c0       	rjmp	.+16     	; 0x1d4a <vfprintf+0x1ec>
    1d3a:	f5 01       	movw	r30, r10
    1d3c:	20 81       	ld	r18, Z
    1d3e:	31 81       	ldd	r19, Z+1	; 0x01
    1d40:	42 81       	ldd	r20, Z+2	; 0x02
    1d42:	53 81       	ldd	r21, Z+3	; 0x03
    1d44:	84 e0       	ldi	r24, 0x04	; 4
    1d46:	90 e0       	ldi	r25, 0x00	; 0
    1d48:	0a c0       	rjmp	.+20     	; 0x1d5e <vfprintf+0x200>
    1d4a:	f5 01       	movw	r30, r10
    1d4c:	80 81       	ld	r24, Z
    1d4e:	91 81       	ldd	r25, Z+1	; 0x01
    1d50:	9c 01       	movw	r18, r24
    1d52:	44 27       	eor	r20, r20
    1d54:	37 fd       	sbrc	r19, 7
    1d56:	40 95       	com	r20
    1d58:	54 2f       	mov	r21, r20
    1d5a:	82 e0       	ldi	r24, 0x02	; 2
    1d5c:	90 e0       	ldi	r25, 0x00	; 0
    1d5e:	a8 0e       	add	r10, r24
    1d60:	b9 1e       	adc	r11, r25
    1d62:	9f e6       	ldi	r25, 0x6F	; 111
    1d64:	f9 22       	and	r15, r25
    1d66:	57 ff       	sbrs	r21, 7
    1d68:	09 c0       	rjmp	.+18     	; 0x1d7c <vfprintf+0x21e>
    1d6a:	50 95       	com	r21
    1d6c:	40 95       	com	r20
    1d6e:	30 95       	com	r19
    1d70:	21 95       	neg	r18
    1d72:	3f 4f       	sbci	r19, 0xFF	; 255
    1d74:	4f 4f       	sbci	r20, 0xFF	; 255
    1d76:	5f 4f       	sbci	r21, 0xFF	; 255
    1d78:	e0 e8       	ldi	r30, 0x80	; 128
    1d7a:	fe 2a       	or	r15, r30
    1d7c:	ca 01       	movw	r24, r20
    1d7e:	b9 01       	movw	r22, r18
    1d80:	a1 01       	movw	r20, r2
    1d82:	2a e0       	ldi	r18, 0x0A	; 10
    1d84:	30 e0       	ldi	r19, 0x00	; 0
    1d86:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <__ultoa_invert>
    1d8a:	d8 2e       	mov	r13, r24
    1d8c:	d2 18       	sub	r13, r2
    1d8e:	40 c0       	rjmp	.+128    	; 0x1e10 <vfprintf+0x2b2>
    1d90:	95 37       	cpi	r25, 0x75	; 117
    1d92:	29 f4       	brne	.+10     	; 0x1d9e <vfprintf+0x240>
    1d94:	1f 2d       	mov	r17, r15
    1d96:	1f 7e       	andi	r17, 0xEF	; 239
    1d98:	2a e0       	ldi	r18, 0x0A	; 10
    1d9a:	30 e0       	ldi	r19, 0x00	; 0
    1d9c:	1d c0       	rjmp	.+58     	; 0x1dd8 <vfprintf+0x27a>
    1d9e:	1f 2d       	mov	r17, r15
    1da0:	19 7f       	andi	r17, 0xF9	; 249
    1da2:	9f 36       	cpi	r25, 0x6F	; 111
    1da4:	61 f0       	breq	.+24     	; 0x1dbe <vfprintf+0x260>
    1da6:	90 37       	cpi	r25, 0x70	; 112
    1da8:	20 f4       	brcc	.+8      	; 0x1db2 <vfprintf+0x254>
    1daa:	98 35       	cpi	r25, 0x58	; 88
    1dac:	09 f0       	breq	.+2      	; 0x1db0 <vfprintf+0x252>
    1dae:	ac c0       	rjmp	.+344    	; 0x1f08 <vfprintf+0x3aa>
    1db0:	0f c0       	rjmp	.+30     	; 0x1dd0 <vfprintf+0x272>
    1db2:	90 37       	cpi	r25, 0x70	; 112
    1db4:	39 f0       	breq	.+14     	; 0x1dc4 <vfprintf+0x266>
    1db6:	98 37       	cpi	r25, 0x78	; 120
    1db8:	09 f0       	breq	.+2      	; 0x1dbc <vfprintf+0x25e>
    1dba:	a6 c0       	rjmp	.+332    	; 0x1f08 <vfprintf+0x3aa>
    1dbc:	04 c0       	rjmp	.+8      	; 0x1dc6 <vfprintf+0x268>
    1dbe:	28 e0       	ldi	r18, 0x08	; 8
    1dc0:	30 e0       	ldi	r19, 0x00	; 0
    1dc2:	0a c0       	rjmp	.+20     	; 0x1dd8 <vfprintf+0x27a>
    1dc4:	10 61       	ori	r17, 0x10	; 16
    1dc6:	14 fd       	sbrc	r17, 4
    1dc8:	14 60       	ori	r17, 0x04	; 4
    1dca:	20 e1       	ldi	r18, 0x10	; 16
    1dcc:	30 e0       	ldi	r19, 0x00	; 0
    1dce:	04 c0       	rjmp	.+8      	; 0x1dd8 <vfprintf+0x27a>
    1dd0:	14 fd       	sbrc	r17, 4
    1dd2:	16 60       	ori	r17, 0x06	; 6
    1dd4:	20 e1       	ldi	r18, 0x10	; 16
    1dd6:	32 e0       	ldi	r19, 0x02	; 2
    1dd8:	17 ff       	sbrs	r17, 7
    1dda:	08 c0       	rjmp	.+16     	; 0x1dec <vfprintf+0x28e>
    1ddc:	f5 01       	movw	r30, r10
    1dde:	60 81       	ld	r22, Z
    1de0:	71 81       	ldd	r23, Z+1	; 0x01
    1de2:	82 81       	ldd	r24, Z+2	; 0x02
    1de4:	93 81       	ldd	r25, Z+3	; 0x03
    1de6:	44 e0       	ldi	r20, 0x04	; 4
    1de8:	50 e0       	ldi	r21, 0x00	; 0
    1dea:	08 c0       	rjmp	.+16     	; 0x1dfc <vfprintf+0x29e>
    1dec:	f5 01       	movw	r30, r10
    1dee:	80 81       	ld	r24, Z
    1df0:	91 81       	ldd	r25, Z+1	; 0x01
    1df2:	bc 01       	movw	r22, r24
    1df4:	80 e0       	ldi	r24, 0x00	; 0
    1df6:	90 e0       	ldi	r25, 0x00	; 0
    1df8:	42 e0       	ldi	r20, 0x02	; 2
    1dfa:	50 e0       	ldi	r21, 0x00	; 0
    1dfc:	a4 0e       	add	r10, r20
    1dfe:	b5 1e       	adc	r11, r21
    1e00:	a1 01       	movw	r20, r2
    1e02:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <__ultoa_invert>
    1e06:	d8 2e       	mov	r13, r24
    1e08:	d2 18       	sub	r13, r2
    1e0a:	8f e7       	ldi	r24, 0x7F	; 127
    1e0c:	f8 2e       	mov	r15, r24
    1e0e:	f1 22       	and	r15, r17
    1e10:	f6 fe       	sbrs	r15, 6
    1e12:	0b c0       	rjmp	.+22     	; 0x1e2a <vfprintf+0x2cc>
    1e14:	5e ef       	ldi	r21, 0xFE	; 254
    1e16:	f5 22       	and	r15, r21
    1e18:	d9 14       	cp	r13, r9
    1e1a:	38 f4       	brcc	.+14     	; 0x1e2a <vfprintf+0x2cc>
    1e1c:	f4 fe       	sbrs	r15, 4
    1e1e:	07 c0       	rjmp	.+14     	; 0x1e2e <vfprintf+0x2d0>
    1e20:	f2 fc       	sbrc	r15, 2
    1e22:	05 c0       	rjmp	.+10     	; 0x1e2e <vfprintf+0x2d0>
    1e24:	8f ee       	ldi	r24, 0xEF	; 239
    1e26:	f8 22       	and	r15, r24
    1e28:	02 c0       	rjmp	.+4      	; 0x1e2e <vfprintf+0x2d0>
    1e2a:	1d 2d       	mov	r17, r13
    1e2c:	01 c0       	rjmp	.+2      	; 0x1e30 <vfprintf+0x2d2>
    1e2e:	19 2d       	mov	r17, r9
    1e30:	f4 fe       	sbrs	r15, 4
    1e32:	0d c0       	rjmp	.+26     	; 0x1e4e <vfprintf+0x2f0>
    1e34:	fe 01       	movw	r30, r28
    1e36:	ed 0d       	add	r30, r13
    1e38:	f1 1d       	adc	r31, r1
    1e3a:	80 81       	ld	r24, Z
    1e3c:	80 33       	cpi	r24, 0x30	; 48
    1e3e:	19 f4       	brne	.+6      	; 0x1e46 <vfprintf+0x2e8>
    1e40:	99 ee       	ldi	r25, 0xE9	; 233
    1e42:	f9 22       	and	r15, r25
    1e44:	08 c0       	rjmp	.+16     	; 0x1e56 <vfprintf+0x2f8>
    1e46:	1f 5f       	subi	r17, 0xFF	; 255
    1e48:	f2 fe       	sbrs	r15, 2
    1e4a:	05 c0       	rjmp	.+10     	; 0x1e56 <vfprintf+0x2f8>
    1e4c:	03 c0       	rjmp	.+6      	; 0x1e54 <vfprintf+0x2f6>
    1e4e:	8f 2d       	mov	r24, r15
    1e50:	86 78       	andi	r24, 0x86	; 134
    1e52:	09 f0       	breq	.+2      	; 0x1e56 <vfprintf+0x2f8>
    1e54:	1f 5f       	subi	r17, 0xFF	; 255
    1e56:	0f 2d       	mov	r16, r15
    1e58:	f3 fc       	sbrc	r15, 3
    1e5a:	14 c0       	rjmp	.+40     	; 0x1e84 <vfprintf+0x326>
    1e5c:	f0 fe       	sbrs	r15, 0
    1e5e:	0f c0       	rjmp	.+30     	; 0x1e7e <vfprintf+0x320>
    1e60:	1e 15       	cp	r17, r14
    1e62:	10 f0       	brcs	.+4      	; 0x1e68 <vfprintf+0x30a>
    1e64:	9d 2c       	mov	r9, r13
    1e66:	0b c0       	rjmp	.+22     	; 0x1e7e <vfprintf+0x320>
    1e68:	9d 2c       	mov	r9, r13
    1e6a:	9e 0c       	add	r9, r14
    1e6c:	91 1a       	sub	r9, r17
    1e6e:	1e 2d       	mov	r17, r14
    1e70:	06 c0       	rjmp	.+12     	; 0x1e7e <vfprintf+0x320>
    1e72:	80 e2       	ldi	r24, 0x20	; 32
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	b3 01       	movw	r22, r6
    1e78:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <fputc>
    1e7c:	1f 5f       	subi	r17, 0xFF	; 255
    1e7e:	1e 15       	cp	r17, r14
    1e80:	c0 f3       	brcs	.-16     	; 0x1e72 <vfprintf+0x314>
    1e82:	04 c0       	rjmp	.+8      	; 0x1e8c <vfprintf+0x32e>
    1e84:	1e 15       	cp	r17, r14
    1e86:	10 f4       	brcc	.+4      	; 0x1e8c <vfprintf+0x32e>
    1e88:	e1 1a       	sub	r14, r17
    1e8a:	01 c0       	rjmp	.+2      	; 0x1e8e <vfprintf+0x330>
    1e8c:	ee 24       	eor	r14, r14
    1e8e:	04 ff       	sbrs	r16, 4
    1e90:	0f c0       	rjmp	.+30     	; 0x1eb0 <vfprintf+0x352>
    1e92:	80 e3       	ldi	r24, 0x30	; 48
    1e94:	90 e0       	ldi	r25, 0x00	; 0
    1e96:	b3 01       	movw	r22, r6
    1e98:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <fputc>
    1e9c:	02 ff       	sbrs	r16, 2
    1e9e:	1d c0       	rjmp	.+58     	; 0x1eda <vfprintf+0x37c>
    1ea0:	01 fd       	sbrc	r16, 1
    1ea2:	03 c0       	rjmp	.+6      	; 0x1eaa <vfprintf+0x34c>
    1ea4:	88 e7       	ldi	r24, 0x78	; 120
    1ea6:	90 e0       	ldi	r25, 0x00	; 0
    1ea8:	0e c0       	rjmp	.+28     	; 0x1ec6 <vfprintf+0x368>
    1eaa:	88 e5       	ldi	r24, 0x58	; 88
    1eac:	90 e0       	ldi	r25, 0x00	; 0
    1eae:	0b c0       	rjmp	.+22     	; 0x1ec6 <vfprintf+0x368>
    1eb0:	80 2f       	mov	r24, r16
    1eb2:	86 78       	andi	r24, 0x86	; 134
    1eb4:	91 f0       	breq	.+36     	; 0x1eda <vfprintf+0x37c>
    1eb6:	01 ff       	sbrs	r16, 1
    1eb8:	02 c0       	rjmp	.+4      	; 0x1ebe <vfprintf+0x360>
    1eba:	8b e2       	ldi	r24, 0x2B	; 43
    1ebc:	01 c0       	rjmp	.+2      	; 0x1ec0 <vfprintf+0x362>
    1ebe:	80 e2       	ldi	r24, 0x20	; 32
    1ec0:	f7 fc       	sbrc	r15, 7
    1ec2:	8d e2       	ldi	r24, 0x2D	; 45
    1ec4:	90 e0       	ldi	r25, 0x00	; 0
    1ec6:	b3 01       	movw	r22, r6
    1ec8:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <fputc>
    1ecc:	06 c0       	rjmp	.+12     	; 0x1eda <vfprintf+0x37c>
    1ece:	80 e3       	ldi	r24, 0x30	; 48
    1ed0:	90 e0       	ldi	r25, 0x00	; 0
    1ed2:	b3 01       	movw	r22, r6
    1ed4:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <fputc>
    1ed8:	9a 94       	dec	r9
    1eda:	d9 14       	cp	r13, r9
    1edc:	c0 f3       	brcs	.-16     	; 0x1ece <vfprintf+0x370>
    1ede:	da 94       	dec	r13
    1ee0:	f1 01       	movw	r30, r2
    1ee2:	ed 0d       	add	r30, r13
    1ee4:	f1 1d       	adc	r31, r1
    1ee6:	80 81       	ld	r24, Z
    1ee8:	90 e0       	ldi	r25, 0x00	; 0
    1eea:	b3 01       	movw	r22, r6
    1eec:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <fputc>
    1ef0:	dd 20       	and	r13, r13
    1ef2:	a9 f7       	brne	.-22     	; 0x1ede <vfprintf+0x380>
    1ef4:	06 c0       	rjmp	.+12     	; 0x1f02 <vfprintf+0x3a4>
    1ef6:	80 e2       	ldi	r24, 0x20	; 32
    1ef8:	90 e0       	ldi	r25, 0x00	; 0
    1efa:	b3 01       	movw	r22, r6
    1efc:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <fputc>
    1f00:	ea 94       	dec	r14
    1f02:	ee 20       	and	r14, r14
    1f04:	c1 f7       	brne	.-16     	; 0x1ef6 <vfprintf+0x398>
    1f06:	43 ce       	rjmp	.-890    	; 0x1b8e <vfprintf+0x30>
    1f08:	f3 01       	movw	r30, r6
    1f0a:	66 81       	ldd	r22, Z+6	; 0x06
    1f0c:	77 81       	ldd	r23, Z+7	; 0x07
    1f0e:	cb 01       	movw	r24, r22
    1f10:	2b 96       	adiw	r28, 0x0b	; 11
    1f12:	e2 e1       	ldi	r30, 0x12	; 18
    1f14:	0c 94 7f 0d 	jmp	0x1afe	; 0x1afe <__epilogue_restores__>

00001f18 <strnlen_P>:
    1f18:	fc 01       	movw	r30, r24
    1f1a:	05 90       	lpm	r0, Z+
    1f1c:	61 50       	subi	r22, 0x01	; 1
    1f1e:	70 40       	sbci	r23, 0x00	; 0
    1f20:	01 10       	cpse	r0, r1
    1f22:	d8 f7       	brcc	.-10     	; 0x1f1a <strnlen_P+0x2>
    1f24:	80 95       	com	r24
    1f26:	90 95       	com	r25
    1f28:	8e 0f       	add	r24, r30
    1f2a:	9f 1f       	adc	r25, r31
    1f2c:	08 95       	ret

00001f2e <strnlen>:
    1f2e:	fc 01       	movw	r30, r24
    1f30:	61 50       	subi	r22, 0x01	; 1
    1f32:	70 40       	sbci	r23, 0x00	; 0
    1f34:	01 90       	ld	r0, Z+
    1f36:	01 10       	cpse	r0, r1
    1f38:	d8 f7       	brcc	.-10     	; 0x1f30 <strnlen+0x2>
    1f3a:	80 95       	com	r24
    1f3c:	90 95       	com	r25
    1f3e:	8e 0f       	add	r24, r30
    1f40:	9f 1f       	adc	r25, r31
    1f42:	08 95       	ret

00001f44 <fputc>:
    1f44:	0f 93       	push	r16
    1f46:	1f 93       	push	r17
    1f48:	cf 93       	push	r28
    1f4a:	df 93       	push	r29
    1f4c:	8c 01       	movw	r16, r24
    1f4e:	eb 01       	movw	r28, r22
    1f50:	8b 81       	ldd	r24, Y+3	; 0x03
    1f52:	81 ff       	sbrs	r24, 1
    1f54:	1b c0       	rjmp	.+54     	; 0x1f8c <fputc+0x48>
    1f56:	82 ff       	sbrs	r24, 2
    1f58:	0d c0       	rjmp	.+26     	; 0x1f74 <fputc+0x30>
    1f5a:	2e 81       	ldd	r18, Y+6	; 0x06
    1f5c:	3f 81       	ldd	r19, Y+7	; 0x07
    1f5e:	8c 81       	ldd	r24, Y+4	; 0x04
    1f60:	9d 81       	ldd	r25, Y+5	; 0x05
    1f62:	28 17       	cp	r18, r24
    1f64:	39 07       	cpc	r19, r25
    1f66:	64 f4       	brge	.+24     	; 0x1f80 <fputc+0x3c>
    1f68:	e8 81       	ld	r30, Y
    1f6a:	f9 81       	ldd	r31, Y+1	; 0x01
    1f6c:	01 93       	st	Z+, r16
    1f6e:	f9 83       	std	Y+1, r31	; 0x01
    1f70:	e8 83       	st	Y, r30
    1f72:	06 c0       	rjmp	.+12     	; 0x1f80 <fputc+0x3c>
    1f74:	e8 85       	ldd	r30, Y+8	; 0x08
    1f76:	f9 85       	ldd	r31, Y+9	; 0x09
    1f78:	80 2f       	mov	r24, r16
    1f7a:	09 95       	icall
    1f7c:	89 2b       	or	r24, r25
    1f7e:	31 f4       	brne	.+12     	; 0x1f8c <fputc+0x48>
    1f80:	8e 81       	ldd	r24, Y+6	; 0x06
    1f82:	9f 81       	ldd	r25, Y+7	; 0x07
    1f84:	01 96       	adiw	r24, 0x01	; 1
    1f86:	9f 83       	std	Y+7, r25	; 0x07
    1f88:	8e 83       	std	Y+6, r24	; 0x06
    1f8a:	02 c0       	rjmp	.+4      	; 0x1f90 <fputc+0x4c>
    1f8c:	0f ef       	ldi	r16, 0xFF	; 255
    1f8e:	1f ef       	ldi	r17, 0xFF	; 255
    1f90:	c8 01       	movw	r24, r16
    1f92:	df 91       	pop	r29
    1f94:	cf 91       	pop	r28
    1f96:	1f 91       	pop	r17
    1f98:	0f 91       	pop	r16
    1f9a:	08 95       	ret

00001f9c <__ultoa_invert>:
    1f9c:	fa 01       	movw	r30, r20
    1f9e:	aa 27       	eor	r26, r26
    1fa0:	28 30       	cpi	r18, 0x08	; 8
    1fa2:	51 f1       	breq	.+84     	; 0x1ff8 <__ultoa_invert+0x5c>
    1fa4:	20 31       	cpi	r18, 0x10	; 16
    1fa6:	81 f1       	breq	.+96     	; 0x2008 <__ultoa_invert+0x6c>
    1fa8:	e8 94       	clt
    1faa:	6f 93       	push	r22
    1fac:	6e 7f       	andi	r22, 0xFE	; 254
    1fae:	6e 5f       	subi	r22, 0xFE	; 254
    1fb0:	7f 4f       	sbci	r23, 0xFF	; 255
    1fb2:	8f 4f       	sbci	r24, 0xFF	; 255
    1fb4:	9f 4f       	sbci	r25, 0xFF	; 255
    1fb6:	af 4f       	sbci	r26, 0xFF	; 255
    1fb8:	b1 e0       	ldi	r27, 0x01	; 1
    1fba:	3e d0       	rcall	.+124    	; 0x2038 <__ultoa_invert+0x9c>
    1fbc:	b4 e0       	ldi	r27, 0x04	; 4
    1fbe:	3c d0       	rcall	.+120    	; 0x2038 <__ultoa_invert+0x9c>
    1fc0:	67 0f       	add	r22, r23
    1fc2:	78 1f       	adc	r23, r24
    1fc4:	89 1f       	adc	r24, r25
    1fc6:	9a 1f       	adc	r25, r26
    1fc8:	a1 1d       	adc	r26, r1
    1fca:	68 0f       	add	r22, r24
    1fcc:	79 1f       	adc	r23, r25
    1fce:	8a 1f       	adc	r24, r26
    1fd0:	91 1d       	adc	r25, r1
    1fd2:	a1 1d       	adc	r26, r1
    1fd4:	6a 0f       	add	r22, r26
    1fd6:	71 1d       	adc	r23, r1
    1fd8:	81 1d       	adc	r24, r1
    1fda:	91 1d       	adc	r25, r1
    1fdc:	a1 1d       	adc	r26, r1
    1fde:	20 d0       	rcall	.+64     	; 0x2020 <__ultoa_invert+0x84>
    1fe0:	09 f4       	brne	.+2      	; 0x1fe4 <__ultoa_invert+0x48>
    1fe2:	68 94       	set
    1fe4:	3f 91       	pop	r19
    1fe6:	2a e0       	ldi	r18, 0x0A	; 10
    1fe8:	26 9f       	mul	r18, r22
    1fea:	11 24       	eor	r1, r1
    1fec:	30 19       	sub	r19, r0
    1fee:	30 5d       	subi	r19, 0xD0	; 208
    1ff0:	31 93       	st	Z+, r19
    1ff2:	de f6       	brtc	.-74     	; 0x1faa <__ultoa_invert+0xe>
    1ff4:	cf 01       	movw	r24, r30
    1ff6:	08 95       	ret
    1ff8:	46 2f       	mov	r20, r22
    1ffa:	47 70       	andi	r20, 0x07	; 7
    1ffc:	40 5d       	subi	r20, 0xD0	; 208
    1ffe:	41 93       	st	Z+, r20
    2000:	b3 e0       	ldi	r27, 0x03	; 3
    2002:	0f d0       	rcall	.+30     	; 0x2022 <__ultoa_invert+0x86>
    2004:	c9 f7       	brne	.-14     	; 0x1ff8 <__ultoa_invert+0x5c>
    2006:	f6 cf       	rjmp	.-20     	; 0x1ff4 <__ultoa_invert+0x58>
    2008:	46 2f       	mov	r20, r22
    200a:	4f 70       	andi	r20, 0x0F	; 15
    200c:	40 5d       	subi	r20, 0xD0	; 208
    200e:	4a 33       	cpi	r20, 0x3A	; 58
    2010:	18 f0       	brcs	.+6      	; 0x2018 <__ultoa_invert+0x7c>
    2012:	49 5d       	subi	r20, 0xD9	; 217
    2014:	31 fd       	sbrc	r19, 1
    2016:	40 52       	subi	r20, 0x20	; 32
    2018:	41 93       	st	Z+, r20
    201a:	02 d0       	rcall	.+4      	; 0x2020 <__ultoa_invert+0x84>
    201c:	a9 f7       	brne	.-22     	; 0x2008 <__ultoa_invert+0x6c>
    201e:	ea cf       	rjmp	.-44     	; 0x1ff4 <__ultoa_invert+0x58>
    2020:	b4 e0       	ldi	r27, 0x04	; 4
    2022:	a6 95       	lsr	r26
    2024:	97 95       	ror	r25
    2026:	87 95       	ror	r24
    2028:	77 95       	ror	r23
    202a:	67 95       	ror	r22
    202c:	ba 95       	dec	r27
    202e:	c9 f7       	brne	.-14     	; 0x2022 <__ultoa_invert+0x86>
    2030:	00 97       	sbiw	r24, 0x00	; 0
    2032:	61 05       	cpc	r22, r1
    2034:	71 05       	cpc	r23, r1
    2036:	08 95       	ret
    2038:	9b 01       	movw	r18, r22
    203a:	ac 01       	movw	r20, r24
    203c:	0a 2e       	mov	r0, r26
    203e:	06 94       	lsr	r0
    2040:	57 95       	ror	r21
    2042:	47 95       	ror	r20
    2044:	37 95       	ror	r19
    2046:	27 95       	ror	r18
    2048:	ba 95       	dec	r27
    204a:	c9 f7       	brne	.-14     	; 0x203e <__ultoa_invert+0xa2>
    204c:	62 0f       	add	r22, r18
    204e:	73 1f       	adc	r23, r19
    2050:	84 1f       	adc	r24, r20
    2052:	95 1f       	adc	r25, r21
    2054:	a0 1d       	adc	r26, r0
    2056:	08 95       	ret

00002058 <_exit>:
    2058:	f8 94       	cli

0000205a <__stop_program>:
    205a:	ff cf       	rjmp	.-2      	; 0x205a <__stop_program>
